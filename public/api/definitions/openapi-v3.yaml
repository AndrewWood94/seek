openapi: 3.0.0
info:
  version: "0.3"
  title: JSON API to FAIRDOM SEEK
  license:
    name: The 3-Clause BSD License
    url: https://opensource.org/licenses/BSD-3-Clause
  contact:
    name: SEEK support
    url: http://groups.google.com/group/seek4science
    email: support@fair-dom.org
  description:
      ref: ../descriptions/api.md
  x-logo:
    url: api/definitions/seek.png
    backgroundColor: "#FFFFFF"
security:
  - OAuth2:
      - read
      - write
  - apiToken: []
  - basicAuth: []
tags:
  - name: list
    description:
        ref: ../descriptions/list.md
    x-traitTag: true
  - name: create
    description:
        ref: ../descriptions/create.md
    x-traitTag: true
  - name: read
    description:
        ref: ../descriptions/read.md
    x-traitTag: true
  - name: update
    description:
        ref: ../descriptions/update.md
    x-traitTag: true
  - name: delete
    description:
        ref: ../descriptions/delete.md
    x-traitTag: true
  - name: upload
    description:
        ref: ../descriptions/upload.md
    x-traitTag: true
  - name: download
    description:
        ref: ../descriptions/download.md
    x-traitTag: true
  - name: search
    description:
        ref: ../descriptions/search.md
  - name: institutions
    description:
        ref: ../descriptions/institutions.md
  - name: people
    description:
        ref: ../descriptions/people.md
  - name: programmes
    description:
        ref: ../descriptions/programmes.md
  - name: projects
    description:
        ref: ../descriptions/projects.md
  - name: investigations
    description:
        ref: ../descriptions/investigations.md
  - name: studies
    description:
        ref: ../descriptions/studies.md
  - name: assays
    description:
        ref: ../descriptions/assays.md
  - name: collections
    description:
        ref: ../descriptions/collections.md
  - name: contentBlobs
    description:
        ref: ../descriptions/contentBlobs.md
  - name: dataFiles
    description:
        ref: ../descriptions/dataFiles.md
  - name: documents
    description:
        ref: ../descriptions/documents.md
  - name: models
    description:
        ref: ../descriptions/models.md
  - name: publications
    description:
        ref: ../descriptions/publications.md
  - name: sops
    description:
        ref: ../descriptions/sops.md
  - name: events
    description:
        ref: ../descriptions/events.md
  - name: presentations
    description:
        ref: ../descriptions/presentations.md
  - name: organisms
    description:
        ref: ../descriptions/organisms.md
  - name: sampleTypes
    description:
        ref: ../descriptions/sampleTypes.md
  - name: samples
    description:
        ref: ../descriptions/samples.md
  - name: workflows
    description:
        ref: ../descriptions/workflows.md
x-tagGroups:
  - name: operation types
    tags:
      - list
      - create
      - read
      - update
      - delete
      - upload
      - download
  - name: Search
    tags:
      - search
  - name: Yellow Pages
    tags:
      - institutions
      - people
      - programmes
      - projects
  - name: Experiments
    tags:
      - investigations
      - studies
      - assays
  - name: Assets
    tags:
      - collections
      - dataFiles
      - documents
      - models
      - publications
      - sops
      - workflows
      - contentBlobs
  - name: Activities
    tags:
      - events
      - presentations
  - name: Samples
    tags:
      - organisms
      - sampleTypes
      - samples
      - sampleAttributeTypes
x-types:
  ListTypeT:
    "501":
      description: Not implemented
  CreateTypeT:
    "400":
      description: Bad request
      schema:
        $ref: "#/components/schemas/bad_request"
    "403":
      description: Forbidden
      schema:
        $ref: "#/components/schemas/forbidden"
    "422":
      description: Unprocessable entity
      schema:
        $ref: "#/components/schemas/unprocessable_entity"
  ReadTypeT:
    "403":
      description: Forbidden
      schema:
        $ref: "#/components/schemas/forbidden"
    "404":
      description: Not found
      schema:
        $ref: "#/components/schemas/not_found"
  UpdateTypeT:
    "403":
      description: Forbidden
      schema:
        $ref: "#/components/schemas/forbidden"
    "404":
      description: Not found
      schema:
        $ref: "#/components/schemas/not_found"
    "422":
      description: Unprocessable entity
      schema:
        $ref: "#/components/schemas/unprocessable_entity"
  DeleteTypeT:
    "403":
      description: Forbidden
      schema:
        $ref: "#/components/schemas/forbidden"
    "404":
      description: Not found
      schema:
        $ref: "#/components/schemas/not_found"
paths:
  /search:
    parameters:
      - name: q
        in: query
        required: true
        description: |
          The text to search for
        schema:
          type: string
          default: lactate inhibition
      - name: search_type
        in: query
        required: false
        description: The type of resource to return
        schema:
          type: string
          enum:
            - assays
            - collections
            - data_files
            - events
            - institutions
            - investigations
            - models
            - people
            - presentations
            - programmes
            - projects
            - publications
            - sample_types
            - sops
            - studies
            - workflows
          default: data_files
    get:
      operationId: search
      description:
          ref: ../descriptions/searchOperation.md
      tags:
        - search
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/searchResponse"
              examples:
                response:
                  value:
                      ref: ../examples/searchResponse.json
  /assays:
    get:
      operationId: listAssays
      description:
          ref: ../descriptions/listAssays.md
      tags:
        - list
        - assays
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/assaysResponse"
              examples:
                response:
                  value:
                      ref: ../examples/assaysResponse.json
        "501":
          description: Not implemented
    post:
      operationId: createAssay
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createAssay.md
      tags:
        - create
        - assays
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/assayPost"
        description: The assay to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/assayResponse"
              examples:
                response:
                  value:
                      ref: ../examples/assayPostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  "/assays/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The assay to be fetched, updated or deleted
        schema:
          type: integer
    patch:
      operationId: updateAssay
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updateAssay.md
      tags:
        - update
        - assays
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/assayPatch"
        description: The assay to patch
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/assayResponse"
              examples:
                response:
                  value:
                      ref: ../examples/assayPatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    get:
      operationId: readAssay
      description:
          ref: ../descriptions/readAssay.md
      tags:
        - read
        - assays
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/assayResponse"
              examples:
                response:
                  value:
                      ref: ../examples/assayResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    delete:
      operationId: deleteAssay
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deleteAssay.md
      tags:
        - delete
        - assays
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  /collections:
    get:
      operationId: listCollections
      description:
          ref: ../descriptions/listCollections.md
      tags:
        - list
        - collections
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/collectionsResponse"
              examples:
                response:
                  value:
                      ref: ../examples/collectionsResponse.json
        "501":
          description: Not implemented
    post:
      operationId: createCollection
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createCollection.md
      tags:
        - create
        - collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/collectionPost"
        description: The collection to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/collectionResponse"
              examples:
                response:
                  value:
                      ref: ../examples/collectionPostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  "/collections/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The collection to fetch
        schema:
          type: integer
          default: 1152
    get:
      operationId: readCollection
      description:
          ref: ../descriptions/readCollection.md
      tags:
        - read
        - collections
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/collectionResponse"
              examples:
                response:
                  value:
                      ref: ../examples/collectionResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    patch:
      operationId: updateCollection
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updateCollection.md
      tags:
        - update
        - collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/collectionPatch"
        description: The collection to patch.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/collectionResponse"
              examples:
                response:
                  value:
                      ref: ../examples/collectionPatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    delete:
      operationId: deleteCollection
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deleteCollection.md
      tags:
        - delete
        - collections
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  "/collections/{collection_id}/items":
    parameters:
      - name: collection_id
        in: path
        required: true
        description: The ID of the collection
        schema:
          type: integer
          default: 123
    get:
      operationId: listCollectionItems
      description:
          ref: ../descriptions/listCollectionItems.md
      tags:
        - list
        - collections
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/collectionItemsResponse"
              examples:
                response:
                  value:
                      ref: ../examples/collectionItemsResponse.json
        "501":
          description: Not implemented
    post:
      operationId: createCollectionItem
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createCollectionItem.md
      tags:
        - create
        - collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/collectionItemPost"
        description: The collection item to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/collectionItemResponse"
              examples:
                response:
                  value:
                      ref: ../examples/collectionItemPostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  "/collections/{collection_id}/items/{id}":
    parameters:
      - name: collection_id
        in: path
        required: true
        description: The ID of the collection
        schema:
          type: integer
          default: 123
      - name: id
        in: path
        required: true
        description: The ID of the item in the collection
        schema:
          type: integer
          default: 1152
    get:
      operationId: readCollectionItem
      description:
          ref: ../descriptions/readCollectionItem.md
      tags:
        - read
        - collections
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/collectionItemResponse"
              examples:
                response:
                  value:
                      ref: ../examples/collectionItemResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    patch:
      operationId: updateCollectionItem
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updateCollectionItem.md
      tags:
        - update
        - collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/collectionItemPatch"
        description: The collection item to patch.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/collectionItemResponse"
              examples:
                response:
                  value:
                      ref: ../examples/collectionItemPatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    delete:
      operationId: deleteCollectionItem
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deleteCollectionItem.md
      tags:
        - delete
        - collections
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  /data_files:
    get:
      operationId: listDataFiles
      description:
          ref: ../descriptions/listDataFiles.md
      tags:
        - list
        - dataFiles
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dataFilesResponse"
              examples:
                response:
                  value:
                      ref: ../examples/dataFilesResponse.json
        "501":
          description: Not implemented
    post:
      operationId: createDataFile
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createDataFile.md
      tags:
        - create
        - dataFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/dataFilePost"
        description: The dataFile to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dataFileResponse"
              examples:
                response:
                  value:
                      ref: ../examples/dataFilePostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  "/data_files/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The data file to fetch
        schema:
          type: integer
          default: 1152
    get:
      operationId: readDataFile
      description:
          ref: ../descriptions/readDataFile.md
      parameters:
        - name: version
          in: query
          required: true
          description: The version of the data file to get
          schema:
            type: integer
            default: 2
      tags:
        - read
        - dataFiles
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dataFileResponse"
              examples:
                response:
                  value:
                      ref: ../examples/dataFileResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    patch:
      operationId: updateDataFile
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updateDataFile.md
      tags:
        - update
        - dataFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/dataFilePatch"
        description: The data file to patch
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dataFileResponse"
              examples:
                response:
                  value:
                      ref: ../examples/dataFilePatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    delete:
      operationId: deleteDataFile
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deleteDataFile.md
      tags:
        - delete
        - dataFiles
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  "/{asset_types}/{id}/content_blobs/{blob_id}":
    parameters:
      - name: asset_types
        in: path
        required: true
        description: The types of asset being fetched, uploaded or downloaded
        schema:
          type: string
          default: data_files
      - name: id
        in: path
        required: true
        description: The asset content to fetch, upload or download
        schema:
          type: integer
          default: 1152
      - name: blob_id
        in: path
        required: true
        description: The asset identifier to fetch, upload or download
        schema:
          type: integer
          default: 1831
    put:
      operationId: uploadAssetContent
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/uploadAssetContent.md
      tags:
        - upload
        - contentBlobs
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        description: The blob content to fetch, upload or download
      responses:
        "200":
          description: Success
    get:
      operationId: readContentBlob
      description:
          ref: ../descriptions/readContentBlob.md
      tags:
        - read
        - contentBlobs
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contentBlobResponse"
            text/csv:
              schema:
                $ref: "#/components/schemas/contentBlobResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
            text/csv:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
            text/csv:
              schema:
                $ref: "#/components/schemas/not_found"
  "/{asset_types}/{id}/content_blobs/{blob_id}/download":
    parameters:
      - name: asset_types
        in: path
        required: true
        description: The typs of asset being downloaded
        schema:
          type: string
          default: data_files
      - name: id
        in: path
        required: true
        description: The asset to fetch
        schema:
          type: integer
          default: 1152
      - name: blob_id
        in: path
        required: true
        description: The blob to download
        schema:
          type: integer
          default: 1831
    get:
      operationId: downloadAssetContent
      description:
          ref: ../descriptions/downloadAssetContent.md
      tags:
        - download
        - contentBlobs
      responses:
        "200":
          description: Success
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/not_found"
  /documents:
    get:
      operationId: listDocuments
      description:
          ref: ../descriptions/listDocuments.md
      tags:
        - list
        - documents
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/documentsResponse"
              examples:
                response:
                  value:
                      ref: ../examples/documentsResponse.json
        "501":
          description: Not implemented
    post:
      operationId: createDocument
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createDocument.md
      tags:
        - create
        - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/documentPost"
        description: The document to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/documentResponse"
              examples:
                response:
                  value:
                      ref: ../examples/documentPostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  "/documents/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The document to fetch
        schema:
          type: integer
          default: 1152
    get:
      operationId: readDocument
      description:
          ref: ../descriptions/readDocument.md
      tags:
        - read
        - documents
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/documentResponse"
              examples:
                response:
                  value:
                      ref: ../examples/documentResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    patch:
      operationId: updateDocument
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updateDocument.md
      tags:
        - update
        - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/documentPatch"
        description: The document to patch.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/documentResponse"
              examples:
                response:
                  value:
                      ref: ../examples/documentPatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    delete:
      operationId: deleteDocument
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deleteDocument.md
      tags:
        - delete
        - documents
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  /events:
    get:
      operationId: listEvents
      description:
          ref: ../descriptions/listEvents.md
      tags:
        - list
        - events
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/eventsResponse"
              examples:
                response:
                  value:
                      ref: ../examples/eventsResponse.json
        "501":
          description: Not implemented
    post:
      operationId: createEvent
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createEvent.md
      tags:
        - create
        - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/eventPost"
        description: The event to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/eventResponse"
              examples:
                response:
                  value:
                      ref: ../examples/eventPostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  "/events/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The event to fetch
        schema:
          type: integer
          default: 75
    get:
      operationId: readEvent
      description:
          ref: ../descriptions/readEvent.md
      tags:
        - read
        - events
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/eventResponse"
              examples:
                response:
                  value:
                      ref: ../examples/eventResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    patch:
      operationId: updateEvent
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updateEvent.md
      tags:
        - update
        - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/eventPatch"
        description: The event to update.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/eventResponse"
              examples:
                response:
                  value:
                      ref: ../examples/eventPatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    delete:
      operationId: deleteEvent
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deleteEvent.md
      tags:
        - delete
        - events
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  /institutions:
    get:
      operationId: listInstitutions
      description:
          ref: ../descriptions/listInstitutions.md
      tags:
        - list
        - institutions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/institutionsResponse"
              examples:
                response:
                  value:
                      ref: ../examples/institutionsResponse.json
        "501":
          description: Not implemented
    post:
      operationId: createInstitution
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createInstitution.md
      tags:
        - create
        - institutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/institutionPost"
        description: The institution to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/institutionResponse"
              examples:
                response:
                  value:
                      ref: ../examples/institutionPostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  "/institutions/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The institution to fetch, patch or delete
        schema:
          type: integer
          default: 142
    get:
      operationId: readInstitution
      description:
          ref: ../descriptions/readInstitution.md
      tags:
        - read
        - institutions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/institutionResponse"
              examples:
                response:
                  value:
                      ref: ../examples/institutionResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    patch:
      operationId: updateInstitution
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updateInstitution.md
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/institutionPatch"
        description: The data with which to update the institution.
      tags:
        - update
        - institutions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/institutionResponse"
              examples:
                response:
                  value:
                      ref: ../examples/institutionPatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    delete:
      operationId: deleteInstitution
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deleteInstitution.md
      tags:
        - delete
        - institutions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  /investigations:
    get:
      operationId: listInvestigations
      description:
          ref: ../descriptions/listInvestigations.md
      tags:
        - list
        - investigations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/investigationsResponse"
              examples:
                response:
                  value:
                      ref: ../examples/investigationsResponse.json
        "501":
          description: Not implemented
    post:
      operationId: createInvestigation
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createInvestigation.md
      tags:
        - create
        - investigations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/investigationPost"
        description: The investigation to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/investigationResponse"
              examples:
                response:
                  value:
                      ref: ../examples/investigationPostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  "/investigations/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The investigation to fetch, patch or delete
        schema:
          type: integer
          default: 56
    get:
      operationId: readInvestigation
      description:
          ref: ../descriptions/readInvestigation.md
      tags:
        - read
        - investigations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/investigationResponse"
              examples:
                response:
                  value:
                      ref: ../examples/investigationResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    patch:
      operationId: updateInvestigation
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updateInvestigation.md
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/investigationPatch"
        description: The investigation to patch.
      tags:
        - update
        - investigations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/investigationResponse"
              examples:
                response:
                  value:
                      ref: ../examples/investigationPatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    delete:
      operationId: deleteInvestigation
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deleteInvestigation.md
      tags:
        - delete
        - investigations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  /models:
    get:
      operationId: listModels
      description:
          ref: ../descriptions/listModels.md
      tags:
        - list
        - models
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/modelsResponse"
              examples:
                response:
                  value:
                      ref: ../examples/modelsResponse.json
        "501":
          description: Not implemented
    post:
      operationId: createModel
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createModel.md
      tags:
        - create
        - models
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/modelPost"
        description: The model to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/modelResponse"
              examples:
                response:
                  value:
                      ref: ../examples/modelPostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  "/models/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The model to fetch, patch or delete
        schema:
          type: integer
          default: 139
    get:
      operationId: readModel
      description:
          ref: ../descriptions/readModel.md
      parameters:
        - name: version
          in: query
          required: true
          description: The version of the model to get
          schema:
            type: integer
            default: 2
      tags:
        - read
        - models
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/modelResponse"
              examples:
                response:
                  value:
                      ref: ../examples/modelResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    patch:
      operationId: updateModel
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updateModel.md
      tags:
        - update
        - models
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/modelPatch"
        description: The model to patch.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/modelResponse"
              examples:
                response:
                  value:
                      ref: ../examples/modelPatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    delete:
      operationId: deleteModel
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deleteModel.md
      tags:
        - delete
        - models
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  /organisms:
    get:
      operationId: listOrganisms
      description:
          ref: ../descriptions/listOrganisms.md
      tags:
        - list
        - organisms
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/organismsResponse"
              examples:
                response:
                  value:
                      ref: ../examples/organismsResponse.json
        "501":
          description: Not implemented
  "/organisms/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The organism to fetch, patch or delete
        schema:
          type: integer
          default: 1933753696
    get:
      operationId: readOrganism
      description:
          ref: ../descriptions/readOrganism.md
      tags:
        - read
        - organisms
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/organismResponse"
              examples:
                response:
                  value:
                      ref: ../examples/organismResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  /people:
    get:
      operationId: listPeople
      description:
          ref: ../descriptions/listPeople.md
      tags:
        - list
        - people
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/peopleResponse"
              examples:
                response:
                  value:
                      ref: ../examples/peopleResponse.json
        "501":
          description: Not implemented
    post:
      operationId: createPerson
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createPerson.md
      tags:
        - create
        - people
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/personPost"
        description: The person to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/personResponse"
              examples:
                response:
                  value:
                      ref: ../examples/personPostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  /people/current:
    get:
      operationId: currentPerson
      description:
          ref: ../descriptions/currentPerson.md
      tags:
        - read
        - people
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/personResponse"
              examples:
                response:
                  value:
                      ref: ../examples/personResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  "/people/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The person to fetch, patch or delete
        schema:
          type: integer
          default: 433
    get:
      operationId: readPerson
      description:
          ref: ../descriptions/readPerson.md
      tags:
        - read
        - people
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/personResponse"
              examples:
                response:
                  value:
                      ref: ../examples/personResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    patch:
      operationId: updatePerson
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updatePerson.md
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/personPatch"
        description: The data with which to update the person.
      tags:
        - update
        - people
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/personResponse"
              examples:
                response:
                  value:
                      ref: ../examples/personPatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    delete:
      operationId: deletePerson
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deletePerson.md
      tags:
        - delete
        - people
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  /presentations:
    get:
      operationId: listPresentations
      description:
          ref: ../descriptions/listPresentations.md
      tags:
        - list
        - presentations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/presentationsResponse"
              examples:
                response:
                  value:
                      ref: ../examples/presentationsResponse.json
        "501":
          description: Not implemented
    post:
      operationId: createPresentation
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createPresentation.md
      tags:
        - create
        - presentations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/presentationPost"
        description: The presentation to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/presentationResponse"
              examples:
                response:
                  value:
                      ref: ../examples/presentationPostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  "/presentations/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The presentation to fetch, patch or delete
        schema:
          type: integer
          default: 253
    get:
      operationId: readPresentation
      description:
          ref: ../descriptions/readPresentation.md
      parameters:
        - name: version
          in: query
          required: true
          description: The version of the presentation to get
          schema:
            type: integer
            default: 1
      tags:
        - read
        - presentations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/presentationResponse"
              examples:
                response:
                  value:
                      ref: ../examples/presentationResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    patch:
      operationId: updatePresentation
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updatePresentation.md
      tags:
        - update
        - presentations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/presentationPatch"
        description: The presentation to update.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/presentationResponse"
              examples:
                response:
                  value:
                      ref: ../examples/presentationPatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    delete:
      operationId: deletePresentation
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deletePresentation.md
      tags:
        - delete
        - presentations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  /programmes:
    get:
      operationId: listProgrammes
      description:
          ref: ../descriptions/listProgrammes.md
      tags:
        - list
        - programmes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/programmesResponse"
              examples:
                response:
                  value:
                      ref: ../examples/programmesResponse.json
        "501":
          description: Not implemented
    post:
      operationId: createProgramme
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createProgramme.md
      tags:
        - create
        - programmes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programmePost"
        description: The programme to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/programmeResponse"
              examples:
                response:
                  value:
                      ref: ../examples/programmePostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  "/programmes/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The programme to fetch, patch or delete
        schema:
          type: integer
          default: 3
    get:
      operationId: readProgramme
      description:
          ref: ../descriptions/readProgramme.md
      tags:
        - read
        - programmes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/programmeResponse"
              examples:
                response:
                  value:
                      ref: ../examples/programmeResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    patch:
      operationId: updateProgramme
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updateProgramme.md
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programmePatch"
        description: The data with which to update the programme.
      tags:
        - update
        - programmes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/programmeResponse"
              examples:
                response:
                  value:
                      ref: ../examples/programmePatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    delete:
      operationId: deleteProgramme
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deleteProgramme.md
      tags:
        - delete
        - programmes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  /projects:
    get:
      operationId: listProjects
      description:
          ref: ../descriptions/listProjects.md
      tags:
        - list
        - projects
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/projectsResponse"
              examples:
                response:
                  value:
                      ref: ../examples/projectsResponse.json
        "501":
          description: Not implemented
    post:
      operationId: createProject
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createProject.md
      tags:
        - create
        - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/projectPost"
        description: The project to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/projectResponse"
              examples:
                response:
                  value:
                      ref: ../examples/projectPostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  "/projects/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The project to fetch, patch or delete
        schema:
          type: integer
          default: 17
    get:
      operationId: readProject
      description:
          ref: ../descriptions/readProject.md
      tags:
        - read
        - projects
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/projectResponse"
              examples:
                response:
                  value:
                      ref: ../examples/projectResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    patch:
      operationId: updateProject
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updateProject.md
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/projectPatch"
        description: The data with which to update the project.
      tags:
        - update
        - projects
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/projectResponse"
              examples:
                response:
                  value:
                      ref: ../examples/projectPatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    delete:
      operationId: deleteProject
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deleteProject.md
      tags:
        - delete
        - projects
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  /publications:
    get:
      operationId: listPublications
      description:
          ref: ../descriptions/listPublications.md
      tags:
        - list
        - publications
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/publicationsResponse"
              examples:
                response:
                  value:
                      ref: ../examples/publicationsResponse.json
        "501":
          description: Not implemented
  "/publications/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The publication to fetch, patch or delete
        schema:
          type: integer
          default: 240
    get:
      operationId: readPublication
      description:
          ref: ../descriptions/readPublication.md
      tags:
        - read
        - publications
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/publicationResponse"
              examples:
                response:
                  value:
                      ref: ../examples/publicationResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  /samples:
    post:
      operationId: createSample
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createSample.md
      tags:
        - create
        - samples
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/samplePost"
        description: The sample to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/samplePostResponse"
              examples:
                response:
                  value:
                      ref: ../examples/samplePostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  "/samples/{:id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The sample to fetch, patch or delete
        schema:
          type: integer
    get:
      operationId: readSample
      description:
          ref: ../descriptions/readSample.md
      tags:
        - read
        - samples
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sampleResponse"
              examples:
                response:
                  value:
                      ref: ../examples/sampleResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    patch:
      operationId: updateSample
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updateSample.md
      tags:
        - update
        - samples
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/samplePatch"
        description: The sample to update.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sampleResponse"
              examples:
                response:
                  value:
                      ref: ../examples/samplePatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    delete:
      operationId: deleteSample
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deleteSample.md
      tags:
        - delete
        - samples
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  sample_attribute_types:
    get:
      operationId: listSampleAttributeTypes
      description:
          ref: ../descriptions/listSampleAttributeTypes.md
      tags:
        - list
        - sampleAttributeTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sampleAttributeTypesResponse"
              examples:
                response:
                  value:
                      ref: ../examples/sampleAttributeTypesResponse.json
        "501":
          description: Not implemented
  /sample_types:
    get:
      operationId: listSampleTypes
      description:
          ref: ../descriptions/listSampleTypes.md
      tags:
        - list
        - sampleTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sampleTypesResponse"
              examples:
                response:
                  value:
                      ref: ../examples/sampleTypesResponse.json
        "501":
          description: Not implemented
    post:
      operationId: createSampleType
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createSampleType.md
      tags:
        - create
        - sampleTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sampleTypePost"
        description: The sampleType to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sampleTypeResponse"
              examples:
                response:
                  value:
                      ref: ../examples/sampleTypePostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  "/sample_types/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The sample type to be fetched, updated or deleted
        schema:
          type: integer
    get:
      operationId: readSampleType
      description:
          ref: ../descriptions/readSampleType.md
      tags:
        - read
        - sampleTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sampleTypeResponse"
              examples:
                response:
                  value:
                      ref: ../examples/sampleTypeResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    patch:
      operationId: updateSampleType
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updateSampleType.md
      tags:
        - update
        - sampleTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sampleTypePatch"
        description: The sample type to patch
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sampleTypeResponse"
              examples:
                response:
                  value:
                      ref: ../examples/sampleTypePatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    delete:
      operationId: deleteSampleType
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deleteSampleType.md
      tags:
        - delete
        - sampleTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  /sops:
    get:
      operationId: listSops
      description:
          ref: ../descriptions/listSops.md
      tags:
        - list
        - sops
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sopsResponse"
              examples:
                response:
                  value:
                      ref: ../examples/sopsResponse.json
        "501":
          description: Not implemented
    post:
      operationId: createSop
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createSop.md
      tags:
        - create
        - sops
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sopPost"
        description: The sop to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sopResponse"
              examples:
                response:
                  value:
                      ref: ../examples/sopPostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  "/sops/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The SOP to fetch, patch or delete
        schema:
          type: integer
          default: 203
    get:
      operationId: readSop
      description:
          ref: ../descriptions/readSop.md
      parameters:
        - name: version
          in: query
          required: true
          description: The version of the sop to get
          schema:
            type: integer
            default: 1
      tags:
        - read
        - sops
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sopResponse"
              examples:
                response:
                  value:
                      ref: ../examples/sopResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    patch:
      operationId: updateSop
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updateSop.md
      tags:
        - update
        - sops
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sopPatch"
        description: The sop to update.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sopResponse"
              examples:
                response:
                  value:
                      ref: ../examples/sopPatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    delete:
      operationId: deleteSop
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deleteSop.md
      tags:
        - delete
        - sops
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  /studies:
    get:
      operationId: listStudies
      description:
          ref: ../descriptions/listStudies.md
      tags:
        - list
        - studies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/studiesResponse"
              examples:
                response:
                  value:
                      ref: ../examples/studiesResponse.json
        "501":
          description: Not implemented
    post:
      operationId: createStudy
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createStudy.md
      tags:
        - create
        - studies
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/studyPost"
        description: The study to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/studyResponse"
              examples:
                response:
                  value:
                      ref: ../examples/studyPostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  "/studies/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The study to fetch, patch or delete
        schema:
          type: integer
          default: 138
    get:
      operationId: readStudy
      description:
          ref: ../descriptions/readStudy.md
      tags:
        - read
        - studies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/studyResponse"
              examples:
                response:
                  value:
                      ref: ../examples/studyResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    patch:
      operationId: updateStudy
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updateStudy.md
      tags:
        - update
        - studies
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/studyPatch"
        description: The study to update.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/studyResponse"
              examples:
                response:
                  value:
                      ref: ../examples/studyPatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    delete:
      operationId: deleteStudy
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deleteStudy.md
      tags:
        - delete
        - studies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
  /workflows:
    get:
      operationId: listWorkflows
      description:
          ref: ../descriptions/listWorkflows.md
      tags:
        - list
        - workflows
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workflowsResponse"
              examples:
                response:
                  value:
                      ref: ../examples/workflowsResponse.json
        "501":
          description: Not implemented
    post:
      operationId: createWorkflow
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/createWorkflow.md
      tags:
        - create
        - workflows
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/workflowPost"
        description: The workflow to create.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workflowResponse"
              examples:
                response:
                  value:
                      ref: ../examples/workflowPostResponse.json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bad_request"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
  "/workflows/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: The workflow to fetch, patch or delete
        schema:
          type: integer
          default: 138
    get:
      operationId: readWorkflow
      description:
          ref: ../descriptions/readWorkflow.md
      tags:
        - read
        - workflows
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workflowResponse"
              examples:
                response:
                  value:
                      ref: ../examples/workflowResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
    patch:
      operationId: updateWorkflow
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/updateWorkflow.md
      tags:
        - update
        - workflows
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/workflowPatch"
        description: The workflow to update.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workflowResponse"
              examples:
                response:
                  value:
                      ref: ../examples/workflowPatchResponse.json
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unprocessable_entity"
    delete:
      operationId: deleteWorkflow
      security:
        - OAuth2:
            - write
        - apiToken: []
        - basicAuth: []
      description:
          ref: ../descriptions/deleteWorkflow.md
      tags:
        - delete
        - workflows
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ok"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forbidden"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/not_found"
servers:
  - url: https://fairdomhub.org/
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      description:
          ref: ../descriptions/authOAuth2.md
      flows:
        authorizationCode:
          authorizationUrl: /oauth/authorize
          tokenUrl: /oauth/token
          scopes:
            read: Read, download and list resources
            write: Create, upload, update and delete resources
    apiToken:
      type: apiKey
      in: header
      name: Authorization
      description:
          ref: ../descriptions/authToken.md
    basicAuth:
      type: http
      description:
          ref: ../descriptions/authBasic.md
      scheme: basic
  schemas:
    error:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string
        source:
          type: object
          properties:
            pointer:
              type: string
    errors_array:
      type: array
      minItems: 0
      items:
        $ref: "#/components/schemas/error"
    errors:
      type: object
      properties:
        errors:
          $ref: "#/components/schemas/errors_array"
    ok:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/nonEmptyString"
      required:
        - status
      additionalProperties: false
      example:
        status: ok
    not_implemented:
      type: object
      properties:
        errors:
          $ref: "#/components/schemas/errors_array"
    unprocessable_entity:
      type: object
      properties:
        errors:
          $ref: "#/components/schemas/errors_array"
      example:
        errors:
          - detail: id specified by the PUT request does not match object-id in the
              JSON input
    bad_request:
      type: object
      properties:
        errors:
          $ref: "#/components/schemas/errors_array"
      example:
        errors:
          - title: You do not have permission
            detail: No permission
    forbidden:
      type: object
      properties:
        errors:
          $ref: "#/components/schemas/errors_array"
    not_found:
      type: object
      properties:
        errors:
          $ref: "#/components/schemas/errors_array"
      example:
        errors:
          - title: Not found
            detail: Couldn't find Institution with 'id'=[70]
    dateTimeString:
      type: string
      minLength: 1
      format: date-time
    nonEmptyString:
      type: string
      minLength: 1
    nullableNonEmptyString:
      nullable: true
      allOf:
        - $ref: "#/components/schemas/nonEmptyString"
    otherCreatorsString:
      type: string
      minLength: 1
    nullableOtherCreatorsString:
      nullable: true
      allOf:
        - $ref: "#/components/schemas/otherCreatorsString"
    nonEmptyStringList:
      type: array
      items:
        $ref: "#/components/schemas/nonEmptyString"
    assetsCreator:
      type: object
      properties:
        pos:
          type: integer
        profile:
          $ref: "#/components/schemas/uriString"
        given_name:
          $ref: "#/components/schemas/nullableNonEmptyString"
        family_name:
          $ref: "#/components/schemas/nullableNonEmptyString"
        orcid:
          $ref: "#/components/schemas/nullableNonEmptyString"
        affiliation:
          $ref: "#/components/schemas/nullableNonEmptyString"
      required:
        - given_name
        - family_name
    assetsCreatorsList:
      type: array
      minItems: 0
      items:
        $ref: "#/components/schemas/assetsCreator"
    snapshotSkeleton:
      type: object
      properties:
        snapshot:
          type: integer
          minimum: 1
        url:
          $ref: "#/components/schemas/uriString"
      required:
        - snapshot
        - url
    snapshotsList:
      type: array
      items:
        $ref: "#/components/schemas/snapshotSkeleton"
    uriString:
      type: string
      minLength: 1
      format: uri
    nullableUriString:
      allOf:
        - $ref: "#/components/schemas/uriString"
      nullable: true
    nullableInteger:
      allOf:
        - type: integer
      nullable: true
    license:
      type: string
      minLength: 1
    nullableLicense:
      allOf:
        - $ref: "#/components/schemas/license"
      nullable: true
    md5sumString:
      type: string
      minLength: 32
      maxLength: 32
      pattern: "[0-9a-f]{32}"
    nullableMd5sumString:
      allOf:
        - $ref: "#/components/schemas/md5sumString"
      nullable: true
    sha1sumString:
      type: string
      minLength: 5
      maxLength: 40
      pattern: "[0-9a-f]{5,40}"
    nullableSha1sumString:
      allOf:
        - $ref: "#/components/schemas/sha1sumString"
      nullable: true
    countryString:
      type: string
    nullableCountryString:
      allOf:
        - $ref: "#/components/schemas/countryString"
      nullable: true
    countryCodeString:
      minLength: 2
      maxLength: 2
      type: string
    nullableCountryCodeString:
      allOf:
        - $ref: "#/components/schemas/countryCodeString"
      nullable: true
    versionNumber:
      type: string
      minLength: 1
      enum:
        - "1.0"
    JsonApiVersion:
      type: object
      properties:
        version:
          $ref: "#/components/schemas/versionNumber"
      required:
        - version
      additionalProperties: false
    indexLinks:
      $ref: "#/components/schemas/linksType"
    linksType:
      type: object
      properties:
        self:
          $ref: "#/components/schemas/uriString"
      required:
        - self
      additionalProperties: false
    downloadableLinksType:
      type: object
      properties:
        self:
          $ref: "#/components/schemas/uriString"
        download:
          $ref: "#/components/schemas/uriString"
      required:
        - self
        - download
      additionalProperties: false
    metaType:
      type: object
      properties:
        created:
          $ref: "#/components/schemas/dateTimeString"
        modified:
          $ref: "#/components/schemas/dateTimeString"
        uuid:
          $ref: "#/components/schemas/nonEmptyString"
        base_url:
          $ref: "#/components/schemas/uriString"
        api_version:
          $ref: "#/components/schemas/nonEmptyString"
      required:
        - created
        - modified
        - uuid
        - base_url
        - api_version
      additionalProperties: false
    baseMetaType:
      type: object
      properties:
        base_url:
          $ref: "#/components/schemas/uriString"
        api_version:
          $ref: "#/components/schemas/nonEmptyString"
      required:
        - base_url
        - api_version
      additionalProperties: false
    policy:
      type: object
      properties:
        access:
          $ref: "#/components/schemas/accessType"
        permissions:
          type: array
          minItems: 0
          uniqueItems: true
          items:
            properties:
              resource:
                $ref: "#/components/schemas/permissionResource"
              access:
                $ref: "#/components/schemas/accessType"
            required:
              - resource
              - access
            additionalProperties: false
      required:
        - access
        - permissions
      additionalProperties: false
    accessType:
      type: string
      minLength: 1
      enum:
        - manage
        - edit
        - download
        - view
        - no_access
    anyType:
      type: string
      minLength: 1
      enum:
        - assays
        - content_blobs
        - data_files
        - documents
        - events
        - institutions
        - models
        - organisms
        - people
        - presentations
        - programmes
        - projects
        - publications
        - sample_types
        - sops
        - studies
        - workflows
    permissionResource:
      properties:
        type:
          $ref: "#/components/schemas/permissionResourceType"
        id:
          $ref: "#/components/schemas/nonEmptyString"
      additionalProperties: false
    permissionResourceType:
      type: string
      minLength: 1
      enum:
        - people
        - favourite_groups
        - work_groups
        - projects
        - programmes
        - institutions
    contributedTypeAttributes:
      type: object
      properties:
        tags:
          $ref: "#/components/schemas/tagsType"
        title:
          $ref: "#/components/schemas/nonEmptyString"
        description:
          $ref: "#/components/schemas/nullableNonEmptyString"
        license:
          $ref: "#/components/schemas/nullableLicense"
        latest_version:
          type: number
        versions:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            $ref: "#/components/schemas/version"
        version:
          type: number
        revision_comments:
          $ref: "#/components/schemas/nullableNonEmptyString"
        doi:
          $ref: "#/components/schemas/nullableNonEmptyString"
        created_at:
          $ref: "#/components/schemas/dateTimeString"
        updated_at:
          $ref: "#/components/schemas/dateTimeString"
        content_blobs:
          $ref: "#/components/schemas/contentBlobsList"
        policy:
          $ref: "#/components/schemas/policy"
        other_creators:
          $ref: "#/components/schemas/nullableOtherCreatorsString"
        creators:
          $ref: "#/components/schemas/assetsCreatorsList"
      required:
        - title
        - license
        - latest_version
        - versions
        - version
        - created_at
        - updated_at
        - content_blobs
      additionalProperties: false
    collectionAttributes:
      type: object
      properties:
        tags:
          $ref: "#/components/schemas/tagsType"
        title:
          $ref: "#/components/schemas/nonEmptyString"
        description:
          $ref: "#/components/schemas/nullableNonEmptyString"
        license:
          $ref: "#/components/schemas/nullableLicense"
        policy:
          $ref: "#/components/schemas/policy"
        other_creators:
          $ref: "#/components/schemas/nullableOtherCreatorsString"
        creators:
          $ref: "#/components/schemas/assetsCreatorsList"
      required:
        - title
        - license
        - created_at
        - updated_at
      additionalProperties: false
    modelAttributes:
      type: object
      properties:
        tags:
          $ref: "#/components/schemas/tagsType"
        title:
          $ref: "#/components/schemas/nonEmptyString"
        description:
          $ref: "#/components/schemas/nullableNonEmptyString"
        license:
          $ref: "#/components/schemas/nullableLicense"
        latest_version:
          type: number
        versions:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            $ref: "#/components/schemas/version"
        version:
          type: number
        revision_comments:
          $ref: "#/components/schemas/nullableNonEmptyString"
        doi:
          $ref: "#/components/schemas/nullableNonEmptyString"
        created_at:
          $ref: "#/components/schemas/dateTimeString"
        updated_at:
          $ref: "#/components/schemas/dateTimeString"
        content_blobs:
          $ref: "#/components/schemas/contentBlobsList"
        model_type:
          $ref: "#/components/schemas/nullableNonEmptyString"
        model_format:
          $ref: "#/components/schemas/nullableNonEmptyString"
        environment:
          $ref: "#/components/schemas/nullableNonEmptyString"
        policy:
          $ref: "#/components/schemas/policy"
        other_creators:
          $ref: "#/components/schemas/nullableOtherCreatorsString"
        creators:
          $ref: "#/components/schemas/assetsCreatorsList"
      required:
        - title
        - license
        - latest_version
        - versions
        - version
        - created_at
        - updated_at
        - content_blobs
        - model_type
        - model_format
        - environment
      additionalProperties: false
    assayType:
      type: string
      minLength: 1
      enum:
        - assays
    assayReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/assayReferences"
      required:
        - data
      additionalProperties: false
    assayAttributes:
      type: object
      properties:
        tags:
          $ref: "#/components/schemas/tagsType"
        title:
          $ref: "#/components/schemas/nonEmptyString"
        description:
          $ref: "#/components/schemas/nullableNonEmptyString"
        assay_class:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
            key:
              $ref: "#/components/schemas/nonEmptyString"
            description:
              type: string
          required:
            - title
            - key
          additionalProperties: false
        assay_type:
          type: object
          properties:
            label:
              $ref: "#/components/schemas/nonEmptyString"
            uri:
              $ref: "#/components/schemas/uriString"
          required:
            - label
            - uri
          additionalProperties: false
        technology_type:
          type: object
          properties:
            label:
              $ref: "#/components/schemas/nonEmptyString"
            uri:
              $ref: "#/components/schemas/uriString"
          required:
            - label
            - uri
      required:
        - title
        - description
        - assay_class
        - assay_type
        - technology_type
      additionalProperties: false
    contentBlobType:
      type: string
      minLength: 1
      enum:
        - content_blobs
    collectionType:
      type: string
      minLength: 1
      enum:
        - collections
    collectionItemType:
      type: string
      minLength: 1
      enum:
        - collection_items
    collectionReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/collectionReferences"
      required:
        - data
      additionalProperties: false
    collectionSingletonReference:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/collectionReference"
      required:
        - data
      additionalProperties: false
    collectionItemReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/collectionReferences"
      required:
        - data
      additionalProperties: false
    dataFileType:
      type: string
      minLength: 1
      enum:
        - data_files
    dataFileReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/dataFileReferences"
      required:
        - data
      additionalProperties: false
    documentType:
      type: string
      minLength: 1
      enum:
        - documents
    documentReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/documentReferences"
      required:
        - data
      additionalProperties: false
    eventType:
      type: string
      minLength: 1
      enum:
        - events
    eventReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/eventReferences"
      required:
        - data
      additionalProperties: false
    investigationType:
      type: string
      minLength: 1
      enum:
        - investigations
    investigationReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/investigationReferences"
      required:
        - data
      additionalProperties: false
    investigationSingletonReference:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/investigationReference"
      required:
        - data
      additionalProperties: false
    institutionType:
      type: string
      minLength: 1
      enum:
        - institutions
    institutionReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/institutionReferences"
      required:
        - data
      additionalProperties: false
    modelType:
      type: string
      minLength: 1
      enum:
        - models
    modelReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/modelReferences"
      required:
        - data
      additionalProperties: false
    organismType:
      type: string
      minLength: 1
      enum:
        - organisms
    organismReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/organismType"
      required:
        - id
        - type
      additionalProperties: false
    organismReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/organismReferences"
      required:
        - data
      additionalProperties: false
    peopleType:
      type: string
      minLength: 1
      enum:
        - people
    peopleReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/peopleType"
      required:
        - id
        - type
      additionalProperties: false
    peopleReferenceList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/peopleReferences"
      required:
        - data
      additionalProperties: false
    presentationType:
      type: string
      minLength: 1
      enum:
        - presentations
    presentationReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/presentationReferences"
      required:
        - data
      additionalProperties: false
    programmeType:
      type: string
      minLength: 1
      enum:
        - programmes
    programmeReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/programmeReferences"
      required:
        - data
      additionalProperties: false
    programmeDataType:
      type: object
      properties:
        avatar:
          $ref: "#/components/schemas/nullableUriString"
        title:
          $ref: "#/components/schemas/nonEmptyString"
        description:
          $ref: "#/components/schemas/nullableNonEmptyString"
        web_page:
          $ref: "#/components/schemas/nullableUriString"
        funding_details:
          $ref: "#/components/schemas/nullableNonEmptyString"
        funding_codes:
          $ref: "#/components/schemas/tagsType"
      required:
        - avatar
        - title
        - description
        - web_page
        - funding_details
        - funding_codes
      additionalProperties: false
    projectType:
      type: string
      minLength: 1
      enum:
        - projects
    projectReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/projectReferences"
      required:
        - data
      additionalProperties: false
    publicationType:
      type: string
      minLength: 1
      enum:
        - publications
    publicationReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/publicationReferences"
      required:
        - data
      additionalProperties: false
    sampleTypeType:
      type: string
      minLength: 1
      enum:
        - sample_types
    sampleType:
      type: string
      minLength: 1
      enum:
        - samples
    sampleAttributeBaseType:
      type: string
      minLength: 1
      enum:
        - Integer
        - Float
        - String
        - DateTime
        - Date
        - Text
        - Boolean
        - SeekStrain
        - SeekSample
        - CV
        - SeekDataFile
    sampleTypeReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/sampleTypeType"
      required:
        - id
        - type
      additionalProperties: false
    sampleTypeSampleAttributesResponse:
      type: array
      minItems: 1
      uniqueItems: true
      items:
        $ref: "#/components/schemas/sampleTypeSampleAttributeResponse"
    sampleTypeSampleAttributeResponse:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        title:
          $ref: "#/components/schemas/nonEmptyString"
        sample_attribute_type:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            title:
              $ref: "#/components/schemas/nonEmptyString"
            base_type:
              $ref: "#/components/schemas/sampleAttributeBaseType"
            regexp:
              $ref: "#/components/schemas/nonEmptyString"
          required: []
        required:
          type: boolean
        pos:
          $ref: "#/components/schemas/nullableInteger"
        unit:
          $ref: "#/components/schemas/nullableNonEmptyString"
        is_title:
          type: boolean
        sample_controlled_vocab_id:
          $ref: "#/components/schemas/nullableInteger"
        linked_sample_type_id:
          $ref: "#/components/schemas/nullableInteger"
      required:
        - title
        - sample_attribute_type
      additionalProperties: false
    sampleTypeSampleAttributesPatch:
      type: array
      minItems: 1
      uniqueItems: true
      items:
        $ref: "#/components/schemas/sampleTypeSampleAttributePatch"
    sampleTypeSampleAttributePatch:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        title:
          $ref: "#/components/schemas/nonEmptyString"
        sample_attribute_type:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            title:
              $ref: "#/components/schemas/nonEmptyString"
          oneOf:
            - required:
                - id
            - required:
                - title
        required:
          type: boolean
        pos:
          $ref: "#/components/schemas/nullableInteger"
        unit:
          $ref: "#/components/schemas/nullableNonEmptyString"
        is_title:
          type: boolean
        sample_controlled_vocab_id:
          $ref: "#/components/schemas/nullableInteger"
        linked_sample_type_id:
          $ref: "#/components/schemas/nullableInteger"
        _destroy:
          type: boolean
      required: []
      additionalProperties: false
    sampleTypeSampleAttributesPost:
      type: array
      minItems: 1
      uniqueItems: true
      items:
        $ref: "#/components/schemas/sampleTypeSampleAttributePost"
    sampleTypeSampleAttributePost:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        title:
          $ref: "#/components/schemas/nonEmptyString"
        sample_attribute_type:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            title:
              $ref: "#/components/schemas/nonEmptyString"
          oneOf:
            - required:
                - id
            - required:
                - title
        required:
          type: boolean
        pos:
          $ref: "#/components/schemas/nullableInteger"
        unit:
          $ref: "#/components/schemas/nullableNonEmptyString"
        is_title:
          type: boolean
        sample_controlled_vocab_id:
          $ref: "#/components/schemas/nullableInteger"
        linked_sample_type_id:
          $ref: "#/components/schemas/nullableInteger"
      required:
        - title
        - sample_attribute_type
      additionalProperties: false
    sopType:
      type: string
      minLength: 1
      enum:
        - sops
    sopReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/sopReferences"
      required:
        - data
      additionalProperties: false
    studyType:
      type: string
      minLength: 1
      enum:
        - studies
    studyReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/studyType"
      required:
        - id
        - type
      additionalProperties: false
    studyReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/studyReferences"
      required:
        - data
      additionalProperties: false
    studySingletonReference:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/studyReference"
      required:
        - data
      additionalProperties: false
    workflowType:
      type: string
      minLength: 1
      enum:
        - workflows
    workflowReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/workflowReferences"
      required:
        - data
      additionalProperties: false
    workflowReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/workflowReference"
    workflowReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/workflowType"
      required:
        - id
        - type
      additionalProperties: false
    workflowSkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/workflowType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    workflowSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/workflowSkeleton"
    tagsType:
      $ref: "#/components/schemas/nonEmptyStringList"
    ontologyTermsList:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/ontologyTerm"
    ontologyTerm:
      type: object
      properties:
        label:
          $ref: "#/components/schemas/nullableNonEmptyString"
        identifier:
          $ref: "#/components/schemas/uriString"
      required:
        - identifier
    anySkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/anyType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    anySkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/anySkeleton"
    anyReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/anyType"
      required:
        - id
        - type
      additionalProperties: false
    anySingletonReference:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/anyReference"
      required:
        - data
      additionalProperties: false
    assayReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/assayType"
      required:
        - id
        - type
      additionalProperties: false
    assayReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/assayReference"
    assaySkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/assayType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    assaySkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/assaySkeleton"
    collectionReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/collectionReference"
    collectionReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/collectionType"
      required:
        - id
        - type
      additionalProperties: false
    collectionsResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/collectionSkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    collectionItemReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/collectionItemReference"
    collectionItemReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/collectionItemType"
      required:
        - id
        - type
      additionalProperties: false
    collectionItem:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/collectionType"
        attributes:
          type: object
          properties:
            comment:
              $ref: "#/components/schemas/nullableNonEmptyString"
            order:
              $ref: "#/components/schemas/nullableInteger"
          required:
            - comment
            - order
          additionalProperties: false
        relationships:
          type: object
          properties:
            asset:
              $ref: "#/components/schemas/assetSingletonReferenceWithTitle"
            collection:
              $ref: "#/components/schemas/collectionSingletonReference"
          required:
            - collection
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
        meta:
          $ref: "#/components/schemas/metaType"
      required:
        - id
        - type
        - attributes
        - relationships
        - links
        - meta
      additionalProperties: false
    collectionItemResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/collectionItem"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    assetType:
      type: string
      minLength: 1
      enum:
        - collections
        - data_files
        - documents
        - models
        - publications
        - sops
        - workflows
    assetReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/assetReference"
    assetReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/assetType"
      required:
        - id
        - type
      additionalProperties: false
    assetReferencesList:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/assetReferences"
      required:
        - data
      additionalProperties: false
    assetSingletonReference:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/assetReference"
      required:
        - data
      additionalProperties: false
    assetSingletonReferenceWithTitle:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/assetReference"
        meta:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nullableNonEmptyString"
      required:
        - data
        - meta
      additionalProperties: false
    dataFileReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/dataFileReference"
    dataFileReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/dataFileType"
      required:
        - id
        - type
      additionalProperties: false
    dataFileSkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/dataFileType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    dataFileSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/dataFileSkeleton"
    documentReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/documentReference"
    documentReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/documentType"
      required:
        - id
        - type
      additionalProperties: false
    eventReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/eventReference"
    eventReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/eventType"
      required:
        - id
        - type
      additionalProperties: false
    investigationReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/investigationReference"
    investigationReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/investigationType"
      required:
        - id
        - type
      additionalProperties: false
    institutionReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/institutionReference"
    institutionReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/institutionType"
      required:
        - id
        - type
      additionalProperties: false
    modelReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/modelReference"
    modelReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/modelType"
      required:
        - id
        - type
      additionalProperties: false
    organismReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/organismReference"
    peopleReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/peopleReference"
    presentationReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/presentationReference"
    presentationReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/presentationType"
      required:
        - id
        - type
      additionalProperties: false
    programmeReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/programmeReference"
    programmeReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/programmeType"
      required:
        - id
        - type
      additionalProperties: false
    projectReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/projectReference"
    projectReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/projectType"
      required:
        - id
        - type
      additionalProperties: false
    publicationReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/publicationReference"
    publicationReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/publicationType"
      required:
        - id
        - type
      additionalProperties: false
    sampleTypeReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/sampleTypeReference"
    sopReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/sopReference"
    sopReference:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/sopType"
      required:
        - id
        - type
      additionalProperties: false
    studyReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/studyReference"
    searchResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/anySkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    assayResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/assayType"
            attributes:
              type: object
              properties:
                snapshots:
                  $ref: "#/components/schemas/snapshotsList"
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
                assay_class:
                  type: object
                  properties:
                    title:
                      $ref: "#/components/schemas/nonEmptyString"
                    key:
                      $ref: "#/components/schemas/nonEmptyString"
                    description:
                      $ref: "#/components/schemas/nullableNonEmptyString"
                  required:
                    - title
                    - key
                  additionalProperties: false
                assay_type:
                  type: object
                  properties:
                    label:
                      $ref: "#/components/schemas/nullableNonEmptyString"
                    uri:
                      $ref: "#/components/schemas/uriString"
                  required:
                    - uri
                  additionalProperties: false
                technology_type:
                  type: object
                  properties:
                    label:
                      $ref: "#/components/schemas/nullableNonEmptyString"
                    uri:
                      $ref: "#/components/schemas/uriString"
                  required:
                    - uri
                  additionalProperties: false
                policy:
                  $ref: "#/components/schemas/policy"
              required:
                - title
                - assay_class
                - assay_type
                - technology_type
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                submitter:
                  $ref: "#/components/schemas/peopleReferenceList"
                organisms:
                  $ref: "#/components/schemas/organismReferencesList"
                people:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                investigation:
                  $ref: "#/components/schemas/investigationSingletonReference"
                study:
                  $ref: "#/components/schemas/studySingletonReference"
                data_files:
                  $ref: "#/components/schemas/dataFileReferencesList"
                documents:
                  $ref: "#/components/schemas/documentReferencesList"
                models:
                  $ref: "#/components/schemas/modelReferencesList"
                sops:
                  $ref: "#/components/schemas/sopReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
              required:
                - creators
                - submitter
                - organisms
                - people
                - projects
                - investigation
                - study
                - data_files
                - documents
                - models
                - sops
                - publications
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    assayPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/assayType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
                assay_class:
                  type: object
                  properties:
                    key:
                      $ref: "#/components/schemas/nonEmptyString"
                  required:
                    - key
                  additionalProperties: false
                assay_type:
                  type: object
                  properties:
                    uri:
                      $ref: "#/components/schemas/uriString"
                  required:
                    - uri
                  additionalProperties: false
                technology_type:
                  type: object
                  properties:
                    uri:
                      $ref: "#/components/schemas/uriString"
                  required:
                    - uri
                  additionalProperties: false
                policy:
                  $ref: "#/components/schemas/policy"
              required:
                - title
                - assay_class
                - assay_type
                - technology_type
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                study:
                  $ref: "#/components/schemas/studySingletonReference"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                data_files:
                  $ref: "#/components/schemas/dataFileReferencesList"
                documents:
                  $ref: "#/components/schemas/documentReferencesList"
                models:
                  $ref: "#/components/schemas/modelReferencesList"
                sops:
                  $ref: "#/components/schemas/sopReferencesList"
                organisms:
                  $ref: "#/components/schemas/organismReferencesList"
              required:
                - study
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/assayPost.json
    assayPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/assayType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
                assay_class:
                  type: object
                  properties:
                    key:
                      $ref: "#/components/schemas/nonEmptyString"
                  required:
                    - key
                  additionalProperties: false
                assay_type:
                  type: object
                  properties:
                    uri:
                      $ref: "#/components/schemas/uriString"
                  required:
                    - uri
                  additionalProperties: false
                technology_type:
                  type: object
                  properties:
                    uri:
                      $ref: "#/components/schemas/uriString"
                  required:
                    - uri
                  additionalProperties: false
                policy:
                  $ref: "#/components/schemas/policy"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                study:
                  $ref: "#/components/schemas/studySingletonReference"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                data_files:
                  $ref: "#/components/schemas/dataFileReferencesList"
                documents:
                  $ref: "#/components/schemas/documentReferencesList"
                models:
                  $ref: "#/components/schemas/modelReferencesList"
                sops:
                  $ref: "#/components/schemas/sopReferencesList"
                organisms:
                  $ref: "#/components/schemas/organismReferencesList"
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/assayPatch.json
    collectionPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/collectionType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                license:
                  $ref: "#/components/schemas/nullableLicense"
                policy:
                  $ref: "#/components/schemas/policy"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
              required:
                - title
                - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
              required:
                - projects
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/collectionPost.json
    collectionPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/collectionType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                license:
                  $ref: "#/components/schemas/nullableLicense"
                policy:
                  $ref: "#/components/schemas/policy"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/collectionPatch.json
    collectionItemPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/collectionItemType"
            attributes:
              type: object
              properties:
                comment:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                order:
                  $ref: "#/components/schemas/nullableInteger"
              additionalProperties: false
            relationships:
              type: object
              properties:
                asset:
                  $ref: "#/components/schemas/assetSingletonReference"
              required:
                - asset
              additionalProperties: false
          required:
            - type
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/collectionItemPost.json
    collectionItemPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/collectionType"
            attributes:
              type: object
              properties:
                comment:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                order:
                  $ref: "#/components/schemas/nullableInteger"
              additionalProperties: false
            relationships:
              type: object
              properties:
                asset:
                  $ref: "#/components/schemas/assetSingletonReference"
              required:
                - asset
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/collectionItemPatch.json
    dataFileResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/dataFileType"
            attributes:
              $ref: "#/components/schemas/contributedTypeAttributes"
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                submitter:
                  $ref: "#/components/schemas/peopleReferenceList"
                people:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                investigations:
                  $ref: "#/components/schemas/investigationReferencesList"
                studies:
                  $ref: "#/components/schemas/studyReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                events:
                  $ref: "#/components/schemas/eventReferencesList"
              required:
                - creators
                - submitter
                - people
                - projects
                - investigations
                - studies
                - assays
                - publications
                - events
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    dataFilePost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/dataFileType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                license:
                  $ref: "#/components/schemas/nullableLicense"
                policy:
                  $ref: "#/components/schemas/policy"
                content_blobs:
                  $ref: "#/components/schemas/contentBlobSlotsList"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
              required:
                - title
                - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                events:
                  $ref: "#/components/schemas/eventReferencesList"
              required:
                - projects
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/dataFilePost.json
    dataFilePatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/dataFileType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                license:
                  $ref: "#/components/schemas/nullableLicense"
                policy:
                  $ref: "#/components/schemas/policy"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                events:
                  $ref: "#/components/schemas/eventReferencesList"
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/dataFilePatch.json
    documentResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/documentType"
            attributes:
              $ref: "#/components/schemas/contributedTypeAttributes"
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                submitter:
                  $ref: "#/components/schemas/peopleReferenceList"
                people:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                investigations:
                  $ref: "#/components/schemas/investigationReferencesList"
                studies:
                  $ref: "#/components/schemas/studyReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
              required:
                - creators
                - submitter
                - people
                - projects
                - investigations
                - studies
                - assays
                - publications
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    documentPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/documentType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                license:
                  $ref: "#/components/schemas/nullableLicense"
                policy:
                  $ref: "#/components/schemas/policy"
                content_blobs:
                  $ref: "#/components/schemas/contentBlobSlotsList"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
              required:
                - title
                - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
              required:
                - projects
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/documentPost.json
    documentPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/documentType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                license:
                  $ref: "#/components/schemas/nullableLicense"
                policy:
                  $ref: "#/components/schemas/policy"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/documentPatch.json
    eventResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/eventType"
            attributes:
              type: object
              properties:
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                url:
                  $ref: "#/components/schemas/nullableUriString"
                address:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                city:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                country:
                  $ref: "#/components/schemas/nullableCountryString"
                start_date:
                  $ref: "#/components/schemas/dateTimeString"
                end_date:
                  $ref: "#/components/schemas/dateTimeString"
                policy:
                  $ref: "#/components/schemas/policy"
              required:
                - title
                - description
                - start_date
                - end_date
              additionalProperties: false
            relationships:
              type: object
              properties:
                submitter:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                data_files:
                  $ref: "#/components/schemas/dataFileReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                presentations:
                  $ref: "#/components/schemas/presentationReferencesList"
              required:
                - projects
                - data_files
                - publications
                - presentations
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    eventPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/eventType"
            attributes:
              type: object
              properties:
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                url:
                  $ref: "#/components/schemas/nullableUriString"
                address:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                city:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                country:
                  $ref: "#/components/schemas/nullableCountryString"
                start_date:
                  $ref: "#/components/schemas/dateTimeString"
                end_date:
                  $ref: "#/components/schemas/dateTimeString"
                policy:
                  $ref: "#/components/schemas/policy"
              required:
                - title
                - start_date
              additionalProperties: false
            relationships:
              type: object
              properties:
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                data_files:
                  $ref: "#/components/schemas/dataFileReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                presentations:
                  $ref: "#/components/schemas/presentationReferencesList"
              required:
                - projects
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/eventPost.json
    eventPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/eventType"
            attributes:
              type: object
              properties:
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                url:
                  $ref: "#/components/schemas/nullableUriString"
                address:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                city:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                country:
                  $ref: "#/components/schemas/nullableCountryString"
                start_date:
                  $ref: "#/components/schemas/dateTimeString"
                end_date:
                  $ref: "#/components/schemas/dateTimeString"
                policy:
                  $ref: "#/components/schemas/policy"
              additionalProperties: false
            relationships:
              type: object
              properties:
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                data_files:
                  $ref: "#/components/schemas/dataFileReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                presentations:
                  $ref: "#/components/schemas/presentationReferencesList"
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/eventPatch.json
    institutionResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/institutionType"
            attributes:
              type: object
              properties:
                avatar:
                  $ref: "#/components/schemas/nullableUriString"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                country:
                  $ref: "#/components/schemas/nullableCountryString"
                country_code:
                  $ref: "#/components/schemas/nullableCountryCodeString"
                city:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                address:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                web_page:
                  $ref: "#/components/schemas/nullableUriString"
              required:
                - title
                - country
                - city
                - address
                - web_page
              additionalProperties: false
            relationships:
              type: object
              properties:
                people:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
              required:
                - people
                - projects
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    institutionPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/institutionType"
            attributes:
              type: object
              properties:
                avatar:
                  $ref: "#/components/schemas/nullableUriString"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                country:
                  $ref: "#/components/schemas/nullableCountryString"
                city:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                address:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                web_page:
                  $ref: "#/components/schemas/nullableUriString"
              required:
                - title
              additionalProperties: false
          required:
            - type
            - attributes
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/institutionPost.json
    institutionPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/institutionType"
            attributes:
              type: object
              properties:
                avatar:
                  $ref: "#/components/schemas/nullableUriString"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                country:
                  $ref: "#/components/schemas/nullableCountryString"
                city:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                address:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                web_page:
                  $ref: "#/components/schemas/nullableUriString"
              additionalProperties: false
          required:
            - id
            - type
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/institutionPatch.json
    investigationResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/investigationType"
            attributes:
              type: object
              properties:
                snapshots:
                  $ref: "#/components/schemas/snapshotsList"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
                policy:
                  $ref: "#/components/schemas/policy"
              required:
                - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                submitter:
                  $ref: "#/components/schemas/peopleReferenceList"
                people:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                studies:
                  $ref: "#/components/schemas/studyReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                data_files:
                  $ref: "#/components/schemas/dataFileReferencesList"
                documents:
                  $ref: "#/components/schemas/documentReferencesList"
                models:
                  $ref: "#/components/schemas/modelReferencesList"
                sops:
                  $ref: "#/components/schemas/sopReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
              required:
                - creators
                - submitter
                - people
                - projects
                - studies
                - assays
                - data_files
                - documents
                - models
                - sops
                - publications
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    investigationPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/investigationType"
            attributes:
              type: object
              properties:
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
                policy:
                  $ref: "#/components/schemas/policy"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/investigationPatch.json
    investigationPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/investigationType"
            attributes:
              type: object
              properties:
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
                policy:
                  $ref: "#/components/schemas/policy"
              required:
                - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
              required:
                - projects
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/investigationPost.json
    modelResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/modelType"
            attributes:
              $ref: "#/components/schemas/modelAttributes"
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                submitter:
                  $ref: "#/components/schemas/peopleReferenceList"
                people:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                investigations:
                  $ref: "#/components/schemas/investigationReferencesList"
                studies:
                  $ref: "#/components/schemas/studyReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
              required:
                - creators
                - submitter
                - people
                - projects
                - investigations
                - studies
                - assays
                - publications
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    modelPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/modelType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                license:
                  $ref: "#/components/schemas/nullableLicense"
                policy:
                  $ref: "#/components/schemas/policy"
                content_blobs:
                  $ref: "#/components/schemas/contentBlobSlotsList"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
                model_type:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                model_format:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                environment:
                  $ref: "#/components/schemas/nullableNonEmptyString"
              required:
                - title
                - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
              required:
                - projects
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/modelPost.json
    modelPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/modelType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                license:
                  $ref: "#/components/schemas/nullableLicense"
                policy:
                  $ref: "#/components/schemas/policy"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
                model_type:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                model_format:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                environment:
                  $ref: "#/components/schemas/nullableNonEmptyString"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/modelPatch.json
    organismResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/organismType"
            attributes:
              type: object
              properties:
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                concept_uri:
                  $ref: "#/components/schemas/uriString"
                ontology_id:
                  $ref: "#/components/schemas/nonEmptyString"
              required:
                - title
                - concept_uri
                - ontology_id
              additionalProperties: false
            relationships:
              type: object
              properties:
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                models:
                  $ref: "#/components/schemas/modelReferencesList"
              required:
                - projects
                - assays
                - models
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    personResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/peopleType"
            attributes:
              type: object
              properties:
                avatar:
                  $ref: "#/components/schemas/nullableUriString"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                first_name:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                last_name:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                web_page:
                  $ref: "#/components/schemas/nullableUriString"
                orcid:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                mbox_sha1sum:
                  $ref: "#/components/schemas/nullableSha1sumString"
                expertise:
                  $ref: "#/components/schemas/nonEmptyStringList"
                tools:
                  $ref: "#/components/schemas/nonEmptyStringList"
                phone:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                skype_name:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                login:
                  $ref: "#/components/schemas/nullableNonEmptyString"
              required:
                - title
                - first_name
                - last_name
                - mbox_sha1sum
              additionalProperties: false
            relationships:
              type: object
              properties:
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                institutions:
                  $ref: "#/components/schemas/institutionReferencesList"
                investigations:
                  $ref: "#/components/schemas/investigationReferencesList"
                studies:
                  $ref: "#/components/schemas/studyReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                data_files:
                  $ref: "#/components/schemas/dataFileReferencesList"
                documents:
                  $ref: "#/components/schemas/documentReferencesList"
                models:
                  $ref: "#/components/schemas/modelReferencesList"
                sops:
                  $ref: "#/components/schemas/sopReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                presentations:
                  $ref: "#/components/schemas/presentationReferencesList"
                events:
                  $ref: "#/components/schemas/eventReferencesList"
              required:
                - projects
                - institutions
                - investigations
                - studies
                - assays
                - data_files
                - documents
                - models
                - sops
                - publications
                - presentations
                - events
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    personPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/peopleType"
            attributes:
              type: object
              properties:
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                first_name:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                last_name:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                email:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                web_page:
                  $ref: "#/components/schemas/nullableUriString"
                orcid:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                expertise:
                  $ref: "#/components/schemas/nonEmptyStringList"
                tools:
                  $ref: "#/components/schemas/nonEmptyStringList"
                phone:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                skype_name:
                  $ref: "#/components/schemas/nullableNonEmptyString"
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/personPatch.json
    personPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/peopleType"
            attributes:
              type: object
              properties:
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                first_name:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                last_name:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                email:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                web_page:
                  $ref: "#/components/schemas/nullableUriString"
                orcid:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                expertise:
                  $ref: "#/components/schemas/nonEmptyStringList"
                tools:
                  $ref: "#/components/schemas/nonEmptyStringList"
                phone:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                skype_name:
                  $ref: "#/components/schemas/nullableNonEmptyString"
              required:
                - first_name
                - last_name
              additionalProperties: false
          required:
            - type
            - attributes
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/personPost.json
    presentationResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/presentationType"
            attributes:
              $ref: "#/components/schemas/contributedTypeAttributes"
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                submitter:
                  $ref: "#/components/schemas/peopleReferenceList"
                people:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                investigations:
                  $ref: "#/components/schemas/investigationReferencesList"
                studies:
                  $ref: "#/components/schemas/studyReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                events:
                  $ref: "#/components/schemas/eventReferencesList"
              required:
                - creators
                - submitter
                - people
                - projects
                - investigations
                - studies
                - assays
                - publications
                - events
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    presentationPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/presentationType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                license:
                  $ref: "#/components/schemas/nullableLicense"
                policy:
                  $ref: "#/components/schemas/policy"
                content_blobs:
                  $ref: "#/components/schemas/contentBlobSlotsList"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
              required:
                - title
                - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                events:
                  $ref: "#/components/schemas/eventReferencesList"
              required:
                - projects
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/presentationPost.json
    presentationPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/presentationType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                license:
                  $ref: "#/components/schemas/nullableLicense"
                policy:
                  $ref: "#/components/schemas/policy"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                events:
                  $ref: "#/components/schemas/eventReferencesList"
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/presentationPatch.json
    programmeResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/programmeType"
            attributes:
              $ref: "#/components/schemas/programmeDataType"
            relationships:
              type: object
              properties:
                administrators:
                  $ref: "#/components/schemas/peopleReferenceList"
                people:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                institutions:
                  $ref: "#/components/schemas/institutionReferencesList"
                investigations:
                  $ref: "#/components/schemas/investigationReferencesList"
                studies:
                  $ref: "#/components/schemas/studyReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                data_files:
                  $ref: "#/components/schemas/dataFileReferencesList"
                documents:
                  $ref: "#/components/schemas/documentReferencesList"
                models:
                  $ref: "#/components/schemas/modelReferencesList"
                sops:
                  $ref: "#/components/schemas/sopReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                presentations:
                  $ref: "#/components/schemas/presentationReferencesList"
                events:
                  $ref: "#/components/schemas/eventReferencesList"
              required:
                - people
                - projects
                - institutions
                - investigations
                - studies
                - assays
                - data_files
                - documents
                - models
                - sops
                - publications
                - presentations
                - events
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    programmePost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/programmeType"
            attributes:
              type: object
              properties:
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                web_page:
                  $ref: "#/components/schemas/nullableUriString"
                funding_details:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                funding_codes:
                  $ref: "#/components/schemas/tagsType"
              required:
                - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                administrators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
              additionalProperties: false
          required:
            - type
            - attributes
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/programmePost.json
    programmePatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/programmeType"
            attributes:
              type: object
              properties:
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                web_page:
                  $ref: "#/components/schemas/nullableUriString"
                funding_details:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                funding_codes:
                  $ref: "#/components/schemas/tagsType"
              additionalProperties: false
            relationships:
              type: object
              properties:
                administrators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/programmePatch.json
    projectResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/projectType"
            attributes:
              type: object
              properties:
                avatar:
                  $ref: "#/components/schemas/nullableUriString"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                web_page:
                  $ref: "#/components/schemas/nullableUriString"
                wiki_page:
                  $ref: "#/components/schemas/nullableUriString"
                default_policy:
                  $ref: "#/components/schemas/policy"
                default_license:
                  $ref: "#/components/schemas/nullableLicense"
              required:
                - title
                - description
                - web_page
                - wiki_page
              additionalProperties: false
            relationships:
              type: object
              properties:
                organisms:
                  $ref: "#/components/schemas/organismReferencesList"
                people:
                  $ref: "#/components/schemas/peopleReferenceList"
                institutions:
                  $ref: "#/components/schemas/institutionReferencesList"
                investigations:
                  $ref: "#/components/schemas/investigationReferencesList"
                studies:
                  $ref: "#/components/schemas/studyReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                data_files:
                  $ref: "#/components/schemas/dataFileReferencesList"
                documents:
                  $ref: "#/components/schemas/documentReferencesList"
                models:
                  $ref: "#/components/schemas/modelReferencesList"
                sops:
                  $ref: "#/components/schemas/sopReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                presentations:
                  $ref: "#/components/schemas/presentationReferencesList"
                events:
                  $ref: "#/components/schemas/eventReferencesList"
                programmes:
                  $ref: "#/components/schemas/programmeReferencesList"
                workflows:
                  $ref: "#/components/schemas/workflowReferencesList"
              required:
                - organisms
                - people
                - institutions
                - investigations
                - studies
                - assays
                - data_files
                - documents
                - models
                - sops
                - publications
                - presentations
                - events
                - programmes
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    projectPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/projectType"
            attributes:
              type: object
              properties:
                avatar:
                  $ref: "#/components/schemas/nullableUriString"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                web_page:
                  $ref: "#/components/schemas/nullableUriString"
                wiki_page:
                  $ref: "#/components/schemas/nullableUriString"
                default_policy:
                  $ref: "#/components/schemas/policy"
                default_license:
                  $ref: "#/components/schemas/nullableLicense"
              additionalProperties: false
            relationships:
              type: object
              properties:
                programmes:
                  $ref: "#/components/schemas/programmeReferencesList"
                organisms:
                  $ref: "#/components/schemas/organismReferencesList"
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/projectPatch.json
    projectPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/projectType"
            attributes:
              type: object
              properties:
                avatar:
                  $ref: "#/components/schemas/nullableUriString"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                web_page:
                  $ref: "#/components/schemas/nullableUriString"
                wiki_page:
                  $ref: "#/components/schemas/nullableUriString"
                default_policy:
                  $ref: "#/components/schemas/policy"
                default_license:
                  $ref: "#/components/schemas/nullableLicense"
              required:
                - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                programmes:
                  $ref: "#/components/schemas/programmeReferencesList"
                organisms:
                  $ref: "#/components/schemas/organismReferencesList"
              additionalProperties: false
          required:
            - type
            - attributes
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/projectPost.json
    publicationResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/publicationType"
            attributes:
              type: object
              properties:
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                journal:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                published_date:
                  $ref: "#/components/schemas/nonEmptyString"
                doi:
                  $ref: "#/components/schemas/nullableUriString"
                pubmed_id:
                  $ref: "#/components/schemas/nullableInteger"
                abstract:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                citation:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                editor:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                booktitle:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                publisher:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                url:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                link_to_pub:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                publication_type:
                  $ref: "#/components/schemas/nonEmptyString"
                authors:
                  $ref: "#/components/schemas/nonEmptyStringList"
                content_blobs:
                  $ref: "#/components/schemas/contentBlobsList"
                policy:
                  $ref: "#/components/schemas/policy"
              required:
                - title
                - journal
                - published_date
                - pubmed_id
                - citation
                - publication_type
                - link_to_pub
              additionalProperties: false
            relationships:
              type: object
              properties:
                people:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                investigations:
                  $ref: "#/components/schemas/investigationReferencesList"
                studies:
                  $ref: "#/components/schemas/studyReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                data_files:
                  $ref: "#/components/schemas/dataFileReferencesList"
                models:
                  $ref: "#/components/schemas/modelReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                presentations:
                  $ref: "#/components/schemas/presentationReferencesList"
                events:
                  $ref: "#/components/schemas/eventReferencesList"
                workflows:
                  $ref: "#/components/schemas/workflowReferencesList"
              required:
                - people
                - projects
                - investigations
                - studies
                - assays
                - data_files
                - models
                - publications
                - presentations
                - events
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    sopResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/sopType"
            attributes:
              $ref: "#/components/schemas/contributedTypeAttributes"
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                submitter:
                  $ref: "#/components/schemas/peopleReferenceList"
                people:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                investigations:
                  $ref: "#/components/schemas/investigationReferencesList"
                studies:
                  $ref: "#/components/schemas/studyReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
              required:
                - creators
                - submitter
                - people
                - projects
                - investigations
                - studies
                - assays
                - publications
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    sopPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/sopType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                license:
                  $ref: "#/components/schemas/nullableLicense"
                policy:
                  $ref: "#/components/schemas/policy"
                content_blobs:
                  $ref: "#/components/schemas/contentBlobSlotsList"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
              required:
                - title
                - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
              required:
                - projects
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/sopPost.json
    sopPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/sopType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                license:
                  $ref: "#/components/schemas/nullableLicense"
                policy:
                  $ref: "#/components/schemas/policy"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/sopPatch.json
    studyResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/studyType"
            attributes:
              type: object
              properties:
                snapshots:
                  $ref: "#/components/schemas/snapshotsList"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                experimentalists:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
                policy:
                  $ref: "#/components/schemas/policy"
              required:
                - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                submitter:
                  $ref: "#/components/schemas/peopleReferenceList"
                people:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                investigation:
                  $ref: "#/components/schemas/investigationSingletonReference"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                data_files:
                  $ref: "#/components/schemas/dataFileReferencesList"
                documents:
                  $ref: "#/components/schemas/documentReferencesList"
                models:
                  $ref: "#/components/schemas/modelReferencesList"
                sops:
                  $ref: "#/components/schemas/sopReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
              required:
                - creators
                - submitter
                - people
                - projects
                - investigation
                - assays
                - data_files
                - documents
                - models
                - sops
                - publications
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    studyPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/studyType"
            attributes:
              type: object
              properties:
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                experimentalists:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
                policy:
                  $ref: "#/components/schemas/policy"
              required:
                - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                investigation:
                  $ref: "#/components/schemas/investigationSingletonReference"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
              required:
                - investigation
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/studyPost.json
    studyPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/studyType"
            attributes:
              type: object
              properties:
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                experimentalists:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
                policy:
                  $ref: "#/components/schemas/policy"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                investigation:
                  $ref: "#/components/schemas/investigationSingletonReference"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/studyPatch.json
    workflowResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/workflowType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                edam_topics:
                  $ref: "#/components/schemas/ontologyTermsList"
                edam_operations:
                  $ref: "#/components/schemas/ontologyTermsList"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                workflow_class:
                  type: object
                  properties:
                    title:
                      $ref: "#/components/schemas/nonEmptyString"
                    key:
                      $ref: "#/components/schemas/nullableNonEmptyString"
                    description:
                      $ref: "#/components/schemas/nullableNonEmptyString"
                  required:
                    - title
                    - key
                  additionalProperties: false
                license:
                  $ref: "#/components/schemas/nullableLicense"
                latest_version:
                  type: number
                versions:
                  type: array
                  minItems: 1
                  uniqueItems: true
                  items:
                    oneOf:
                      - $ref: "#/components/schemas/version"
                      - $ref: "#/components/schemas/gitVersion"
                version:
                  type: number
                revision_comments:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                doi:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                created_at:
                  $ref: "#/components/schemas/dateTimeString"
                updated_at:
                  $ref: "#/components/schemas/dateTimeString"
                content_blobs:
                  $ref: "#/components/schemas/contentBlobsList"
                policy:
                  $ref: "#/components/schemas/policy"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
                internals:
                  type: object
                  properties:
                    inputs:
                      type: array
                      items:
                        $ref: "#/components/schemas/workflowInput"
                    steps:
                      type: array
                      items:
                        $ref: "#/components/schemas/workflowStep"
                    outputs:
                      type: array
                      items:
                        $ref: "#/components/schemas/workflowOutput"
              required:
                - title
                - workflow_class
                - license
                - latest_version
                - versions
                - version
                - created_at
                - updated_at
                - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                submitter:
                  $ref: "#/components/schemas/peopleReferenceList"
                people:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                investigations:
                  $ref: "#/components/schemas/investigationReferencesList"
                studies:
                  $ref: "#/components/schemas/studyReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                sops:
                  $ref: "#/components/schemas/sopReferencesList"
              required:
                - creators
                - submitter
                - people
                - projects
                - investigations
                - studies
                - assays
                - publications
                - sops
              additionalProperties: false
            links:
              type: object
              properties:
                self:
                  $ref: "#/components/schemas/uriString"
                diagram:
                  $ref: "#/components/schemas/uriString"
              required:
                - self
              additionalProperties: false
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    workflowPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/workflowType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                edam_topics:
                  $ref: "#/components/schemas/ontologyTermsList"
                edam_operations:
                  $ref: "#/components/schemas/ontologyTermsList"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                workflow_class:
                  type: object
                  properties:
                    key:
                      $ref: "#/components/schemas/nonEmptyString"
                  required:
                    - key
                license:
                  $ref: "#/components/schemas/nullableLicense"
                policy:
                  $ref: "#/components/schemas/policy"
                content_blobs:
                  $ref: "#/components/schemas/contentBlobSlotsList"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
              required:
                - title
                - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                sops:
                  $ref: "#/components/schemas/sopReferencesList"
              required:
                - projects
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/workflowPost.json
    workflowPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/workflowType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                edam_topics:
                  $ref: "#/components/schemas/ontologyTermsList"
                edam_operations:
                  $ref: "#/components/schemas/ontologyTermsList"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                workflow_class:
                  type: object
                  properties:
                    key:
                      $ref: "#/components/schemas/nonEmptyString"
                  required:
                    - key
                license:
                  $ref: "#/components/schemas/nullableLicense"
                policy:
                  $ref: "#/components/schemas/policy"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  $ref: "#/components/schemas/assetsCreatorsList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                sops:
                  $ref: "#/components/schemas/sopReferencesList"
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/workflowPatch.json
    assaysResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/assaySkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    dataFilesResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/dataFileSkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    collectionSkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/collectionType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    collectionSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/collectionSkeleton"
    collectionResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/collectionType"
            attributes:
              $ref: "#/components/schemas/collectionAttributes"
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                submitter:
                  $ref: "#/components/schemas/peopleReferenceList"
                people:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                publications:
                  $ref: "#/components/schemas/publicationReferencesList"
                items:
                  $ref: "#/components/schemas/collectionItemReferencesList"
              required:
                - creators
                - submitter
                - people
                - projects
                - publications
                - items
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        included:
          type: array
          minItems: 0
          uniqueItems: true
          items:
            $ref: "#/components/schemas/collectionItem"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - included
        - jsonapi
      additionalProperties: false
    collectionItemSkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/collectionItemType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    collectionItemSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/collectionItemSkeleton"
    collectionItemsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 0
          uniqueItems: true
          items:
            $ref: "#/components/schemas/collectionItem"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    documentSkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/documentType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    documentSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/documentSkeleton"
    documentsResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/documentSkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    eventSkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/eventType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    eventSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/eventSkeleton"
    eventsResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/eventSkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    institutionSkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/institutionType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    institutionSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/institutionSkeleton"
    institutionsResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/institutionSkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    investigationSkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/investigationType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    investigationSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/investigationSkeleton"
    investigationsResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/investigationSkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    modelSkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/modelType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    modelSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/modelSkeleton"
    modelsResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/modelSkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    organismSkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/organismType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    organismSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/organismSkeleton"
    organismsResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/organismSkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    personSkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/peopleType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    peopleSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/personSkeleton"
    peopleResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/peopleSkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    presentationSkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/presentationType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    presentationSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/presentationSkeleton"
    presentationsResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/presentationSkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    programmeSkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/programmeType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    programmeSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/programmeSkeleton"
    programmesResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/programmeSkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    projectSkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/projectType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    projectSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/projectSkeleton"
    projectsResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/projectSkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    publicationSkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/publicationType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    publicationSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/publicationSkeleton"
    publicationsResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/publicationSkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    sopSkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/sopType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    sopSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/sopSkeleton"
    sopsResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/sopSkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    sampleSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/sampleSkeleton"
    sampleSkeleton:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/sampleType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
    sampleAttributeMap:
      type: object
      additionalProperties:
        type: string
    sampleAttributeTypeType:
      type: string
      minLength: 1
      enum:
        - sample_attribute_types
    sampleAttributeType:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/sampleAttributeTypeType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
            base_type:
              $ref: "#/components/schemas/sampleAttributeBaseType"
            regexp:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
            - base_type
            - regexp
          additionalProperties: false
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - id
        - type
        - attributes
        - links
    sampleAttributeTypes:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/sampleAttributeType"
    sampleAttributeTypesResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/sampleAttributeTypes"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    sampleResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/sampleType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                created_at:
                  $ref: "#/components/schemas/dateTimeString"
                updated_at:
                  $ref: "#/components/schemas/dateTimeString"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                attribute_map:
                  $ref: "#/components/schemas/sampleAttributeMap"
                policy:
                  $ref: "#/components/schemas/policy"
              required:
                - title
                - attribute_map
                - tags
                - other_creators
                - created_at
                - updated_at
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                submitter:
                  $ref: "#/components/schemas/peopleReferenceList"
                people:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                data_files:
                  $ref: "#/components/schemas/dataFileReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                sample_type:
                  $ref: "#/components/schemas/sampleTypeReferences"
              required:
                - submitter
                - projects
                - people
                - creators
                - assays
                - data_files
                - sample_type
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    samplePost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/sampleType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                attribute_map:
                  $ref: "#/components/schemas/sampleAttributeMap"
                policy:
                  $ref: "#/components/schemas/policy"
              required:
                - attribute_map
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                people:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                data_files:
                  $ref: "#/components/schemas/dataFileReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                sample_type:
                  $ref: "#/components/schemas/sampleTypeReferences"
              required:
                - projects
                - sample_type
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/samplePost.json
    samplePostResponse:
      $ref: "#/components/schemas/sampleResponse"
    samplePatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/sampleTypeType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                other_creators:
                  $ref: "#/components/schemas/nullableOtherCreatorsString"
                attribute_map:
                  $ref: "#/components/schemas/sampleAttributeMap"
                policy:
                  $ref: "#/components/schemas/policy"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: "#/components/schemas/peopleReferenceList"
                people:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                data_files:
                  $ref: "#/components/schemas/dataFileReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
                sample_type:
                  $ref: "#/components/schemas/sampleTypeReference"
              additionalProperties: false
          required:
            - type
            - id
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/samplePatch.json
    sampleTypeSkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/sampleTypeType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    sampleTypeSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/sampleTypeSkeleton"
    sampleTypesResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/sampleTypeSkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
        - links
      additionalProperties: false
    sampleTypeResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/sampleTypeType"
            attributes:
              type: object
              properties:
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                sample_attributes:
                  $ref: "#/components/schemas/sampleTypeSampleAttributesResponse"
                tags:
                  $ref: "#/components/schemas/tagsType"
              required:
                - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                submitter:
                  $ref: "#/components/schemas/peopleReferenceList"
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
                assays:
                  $ref: "#/components/schemas/assayReferencesList"
              required:
                - submitter
                - projects
                - assays
              additionalProperties: false
            links:
              $ref: "#/components/schemas/linksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    sampleTypePost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/sampleTypeType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                sample_attributes:
                  $ref: "#/components/schemas/sampleTypeSampleAttributesPost"
              required:
                - title
                - sample_attributes
              additionalProperties: false
            relationships:
              type: object
              properties:
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
              required:
                - projects
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
    sampleTypePatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/sampleTypeType"
            attributes:
              type: object
              properties:
                tags:
                  $ref: "#/components/schemas/tagsType"
                title:
                  $ref: "#/components/schemas/nonEmptyString"
                description:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                sample_attributes:
                  $ref: "#/components/schemas/sampleTypeSampleAttributesPatch"
              additionalProperties: false
            relationships:
              type: object
              properties:
                projects:
                  $ref: "#/components/schemas/projectReferencesList"
              additionalProperties: false
          required:
            - type
            - id
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
          ref: ../examples/sampleTypePatch.json
    studySkeleton:
      properties:
        id:
          $ref: "#/components/schemas/nonEmptyString"
        type:
          $ref: "#/components/schemas/studyType"
        attributes:
          type: object
          properties:
            title:
              $ref: "#/components/schemas/nonEmptyString"
          required:
            - title
          additionalProperties: false
        links:
          $ref: "#/components/schemas/linksType"
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    studySkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: "#/components/schemas/studySkeleton"
    studiesResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/studySkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    workflowsResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/workflowSkeletons"
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
        meta:
          $ref: "#/components/schemas/baseMetaType"
        links:
          $ref: "#/components/schemas/indexLinks"
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    ErrorResponse:
      required:
        - message
      additionalProperties: false
      properties:
        message:
          type: string
    contentBlobsList:
      type: array
      minItems: 1
      items:
        $ref: "#/components/schemas/contentBlob"
    contentBlobSlotsList:
      type: array
      minItems: 1
      items:
        $ref: "#/components/schemas/contentBlobSlot"
    contentBlobSlot:
      oneOf:
        - $ref: "#/components/schemas/remoteContentBlob"
        - $ref: "#/components/schemas/contentBlobPlaceholder"
    remoteContentBlob:
      properties:
        url:
          $ref: "#/components/schemas/nullableUriString"
        original_filename:
          $ref: "#/components/schemas/nullableNonEmptyString"
        content_type:
          $ref: "#/components/schemas/nullableNonEmptyString"
      required:
        - url
      additionalProperties: false
    contentBlobPlaceholder:
      properties:
        original_filename:
          $ref: "#/components/schemas/nullableNonEmptyString"
        content_type:
          $ref: "#/components/schemas/nullableNonEmptyString"
      required:
        - original_filename
        - content_type
      additionalProperties: false
    contentBlob:
      properties:
        original_filename:
          $ref: "#/components/schemas/nullableNonEmptyString"
        url:
          $ref: "#/components/schemas/nullableUriString"
        md5sum:
          $ref: "#/components/schemas/nullableMd5sumString"
        sha1sum:
          $ref: "#/components/schemas/nullableSha1sumString"
        content_type:
          $ref: "#/components/schemas/nullableNonEmptyString"
        link:
          $ref: "#/components/schemas/uriString"
        size:
          $ref: "#/components/schemas/nullableInteger"
      required:
        - original_filename
        - url
        - md5sum
        - sha1sum
        - content_type
        - link
        - size
      additionalProperties: false
    contentBlobResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/nonEmptyString"
            type:
              $ref: "#/components/schemas/contentBlobType"
            attributes:
              type: object
              properties:
                original_filename:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                url:
                  $ref: "#/components/schemas/nullableUriString"
                md5sum:
                  $ref: "#/components/schemas/nullableMd5sumString"
                sha1sum:
                  $ref: "#/components/schemas/nullableSha1sumString"
                content_type:
                  $ref: "#/components/schemas/nullableNonEmptyString"
                size:
                  $ref: "#/components/schemas/nullableInteger"
              required:
                - original_filename
                - url
                - md5sum
                - sha1sum
                - content_type
                - size
              additionalProperties: false
            relationships:
              type: object
              properties:
                asset:
                  $ref: "#/components/schemas/anySingletonReference"
              required:
                - asset
              additionalProperties: false
            links:
              $ref: "#/components/schemas/downloadableLinksType"
            meta:
              $ref: "#/components/schemas/metaType"
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: "#/components/schemas/JsonApiVersion"
      required:
        - data
        - jsonapi
      additionalProperties: false
    version:
      type: object
      properties:
        version:
          type: number
        revision_comments:
          $ref: "#/components/schemas/nullableNonEmptyString"
        url:
          $ref: "#/components/schemas/uriString"
        doi:
          $ref: "#/components/schemas/nullableNonEmptyString"
      required:
        - version
        - revision_comments
        - url
      additionalProperties: false
    gitVersion:
      type: object
      properties:
        version:
          type: number
        revision_comments:
          $ref: "#/components/schemas/nullableNonEmptyString"
        url:
          $ref: "#/components/schemas/uriString"
        commit:
          $ref: "#/components/schemas/nullableNonEmptyString"
        ref:
          $ref: "#/components/schemas/nullableNonEmptyString"
        tree:
          $ref: "#/components/schemas/uriString"
        remote:
          $ref: "#/components/schemas/uriString"
        doi:
          $ref: "#/components/schemas/nullableNonEmptyString"
      required:
        - version
        - revision_comments
        - url
        - commit
        - ref
        - tree
      additionalProperties: false
    workflowInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/nullableNonEmptyString"
        name:
          $ref: "#/components/schemas/nullableNonEmptyString"
        description:
          $ref: "#/components/schemas/nullableNonEmptyString"
        type:
          $ref: "#/components/schemas/nullableNonEmptyString"
        default_value:
          $ref: "#/components/schemas/nullableNonEmptyString"
    workflowStep:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/nullableNonEmptyString"
        name:
          $ref: "#/components/schemas/nullableNonEmptyString"
        description:
          $ref: "#/components/schemas/nullableNonEmptyString"
    workflowOutput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/nullableNonEmptyString"
        name:
          $ref: "#/components/schemas/nullableNonEmptyString"
        description:
          $ref: "#/components/schemas/nullableNonEmptyString"
        type:
          $ref: "#/components/schemas/nullableNonEmptyString"
