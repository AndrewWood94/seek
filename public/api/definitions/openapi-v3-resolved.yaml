---
openapi: 3.1.0
info:
  version: '0.3'
  title: JSON API to FAIRDOM SEEK
  license:
    name: The 3-Clause BSD License
    url: https://opensource.org/licenses/BSD-3-Clause
  contact:
    name: SEEK support
    url: http://groups.google.com/group/seek4science
    email: support@fair-dom.org
  description: "<a name=\"api\"></a>The JSON API to FAIRDOM SEEK is a [JSON API](http://jsonapi.org)
    specification describing how to read and write to a SEEK instance.\n\nThe API
    is defined in the [OpenAPI specification](https://swagger.io/specification) currently
    in [version 2](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md)\n\nExample
    IPython notebooks showing use of the API are available on [GitHub](https://github.com/FAIRdom/api-workshop)\n\n##
    Policy\n<a name=\"Policy\"></a>\nA Policy specifies the visibility of an object
    to people using SEEK. A <a href=\"#projects\">**Project**</a> may specify the
    default policy for objects belonging to that <a href=\"#projects\">**Project**</a>\n\nThe
    **Policy** specifies the visibility of the object to non-registered people or
    <a href=\"#people\">**People**</a> not allowed special access.\n\nThe access may
    be one of (in order of increasing \"power\"):\n\n* no_access\n* view\n* download\n*
    edit\n* manage\n\nIn addition a **Policy** may give special access to specific
    <a href=\"#people\">**People**</a>, People working at an <a href=\"#institutions\">**Institution**</a>
    or working on a <a href=\"#projects\">**Project**</a>.\n\n## License\n<a name=\"License\"></a>\nThe
    license specifies the license that will apply to any <a href=\"#dataFiles\">**DataFiles**</a>,
    <a href=\"#models\">**Models**</a>, <a href=\"#sops\">**SOPs**</a>, <a href=\"#documents\">**Documents**</a>
    and <a href=\"#presentations\">**Presentations**</a> associated with a <a href=\"#projects\">**Project**</a>.\n\nThe
    license can currently be:\n\n* `CC0-1.0` - [CC0 1.0](https://creativecommons.org/publicdomain/zero/1.0/)\n*
    `CC-BY-4.0` - [Creative Commons Attribution 4.0](https://creativecommons.org/licenses/by/4.0/)\n*
    `CC-BY-SA-4.0` - [Creative Commons Attribution Share-Alike 4.0](https://creativecommons.org/licenses/by-sa/4.0/)\n*
    `ODC-BY-1.0` - [Open Data Commons Attribution License 1.0](http://www.opendefinition.org/licenses/odc-by)\n*
    `ODbL-1.0` - [Open Data Commons Open Database License 1.0](http://www.opendefinition.org/licenses/odc-odbl)\n*
    `ODC-PDDL-1.0` - [Open Data Commons Public Domain Dedication and Licence 1.0](http://www.opendefinition.org/licenses/odc-pddl)\n*
    `notspecified` - License Not Specified\n* `other-at` - Other (Attribution)\n*
    `other-open` - Other (Open)\n* `other-pd` - Other (Public Domain)\n* `AFL-3.0`
    - [Academic Free License 3.0](http://www.opensource.org/licenses/AFL-3.0)\n* `Against-DRM`
    - [Against DRM](http://www.opendefinition.org/licenses/against-drm)\n* `CC-BY-NC-4.0`
    - [Creative Commons Attribution-NonCommercial 4.0](https://creativecommons.org/licenses/by-nc/4.0/)\n*
    `DSL` - [Design Science License](http://www.opendefinition.org/licenses/dsl)\n*
    `FAL-1.3` - [Free Art License 1.3](http://www.opendefinition.org/licenses/fal)\n*
    `GFDL-1.3-no-cover-texts-no-invariant-sections` - [GNU Free Documentation License
    1.3 with no cover texts and no invariant sections](http://www.opendefinition.org/licenses/gfdl)\n*
    `geogratis` - [Geogratis](http://geogratis.gc.ca/geogratis/licenceGG)\n* `hesa-withrights`
    - [Higher Education Statistics Agency Copyright with data.gov.uk rights](http://www.hesa.ac.uk/index.php?option=com_content&amp;task=view&amp;id=2619&amp;Itemid=209)\n*
    `localauth-withrights` - Local Authority Copyright with data.gov.uk rights\n*
    `MirOS` - [MirOS Licence](http://www.opensource.org/licenses/MirOS)\n* `NPOSL-3.0`
    - [Non-Profit Open Software License 3.0](http://www.opensource.org/licenses/NPOSL-3.0)\n*
    `OGL-UK-1.0` - [Open Government Licence 1.0 (United Kingdom)](http://reference.data.gov.uk/id/open-government-licence)\n*
    `OGL-UK-2.0` - [Open Government Licence 2.0 (United Kingdom)](https://www.nationalarchives.gov.uk/doc/open-government-licence/version/2/)\n*
    `OGL-UK-3.0` - [Open Government Licence 3.0 (United Kingdom)](https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/)\n*
    `OGL-Canada-2.0` - [Open Government License 2.0 (Canada)](http://data.gc.ca/eng/open-government-licence-canada)\n*
    `OSL-3.0` - [Open Software License 3.0](http://www.opensource.org/licenses/OSL-3.0)\n*
    `dli-model-use` - [Statistics Canada: Data Liberation Initiative (DLI) - Model
    Data Use Licence](http://data.library.ubc.ca/datalib/geographic/DMTI/license.html)\n*
    `Talis` - [Talis Community License](http://www.opendefinition.org/licenses/tcl)\n*
    `ukclickusepsi` - UK Click Use PSI\n* `ukcrown-withrights` - UK Crown Copyright
    with data.gov.uk rights\n* `ukpsi` - [UK PSI Public Sector Information](http://www.opendefinition.org/licenses/ukpsi)\n\n##
    ContentBlob\n<a name=\"ContentBlob\"></a>\n<a name=\"contentBlobs\"></a>\nThe
    content of a <a href=\"#dataFiles\">**DataFile**</a>, <a href=\"#documents\">**Document**</a>,
    <a href=\"#models\">**Model**</a>, <a href=\"#sops\">**SOP**</a> or <a href=\"#presentations\">**Presentation**</a>
    is specified as a set of **ContentBlobs**.\n\nWhen a resource with content is
    created, it is possible to specify a ContentBlob either as:\n\n* A remote ContentBlob
    with:\n  * **URI to the content's location**\n  * The original filename for the
    content\n  * The content type of the remote content as a [MIME media type](https://en.wikipedia.org/wiki/Media_type)\n*
    A placeholder that will be filled with uploaded content\n  * **The original filename
    for the content**\n  * **The content type of the content as a [MIME media type](https://en.wikipedia.org/wiki/Media_type)**\n\nThe
    creation of the resource will return a JSON document containing ContentBlobs corresponding
    to the remote ContentBlob and to the ContentBlob placeholder. The blobs contain
    a URI to their location.\n\nA placeholder can then be satisfied by uploading a
    file to the location URI. For example by a placeholder such as \n\n```\n\"content_blobs\":
    [\n  {\n    \"original_filename\": \"a_pdf_file.pdf\",\n    \"content_type\":
    \"application/pdf\",\n    \"link\": \"http://fairdomhub.org/data_files/57/content_blobs/313\"\n
    \ }\n],\n```\n\nmay be satisfied by uploading a file to http://fairdomhub.org/data_files/57/content_blobs/313
    using the <a href=\"#uploadAssetContent\">uploadAssetContent</a> operation\n\nThe
    content of a resource may be downloaded by first *reading* the resource and then
    *downloading* the ContentBlobs from their URI.\n"
  x-logo:
    url: api/definitions/seek.png
    backgroundColor: "#FFFFFF"
security:
- OAuth2:
  - read
  - write
- apiToken: []
- basicAuth: []
servers:
- url: https://fairdomhub.org
tags:
- name: list
  description: "<a name=\"list\"></a>**List** operations return a JSON object containing
    a list of all the objects of the specified class to which the authenticated user
    has access.\r\n\r\nSuccess response codes:\r\n* 200 OK\r\n\r\nError response codes:"
  x-traitTag: true
- name: create
  description: "<a name=\"create\"></a>A **Create** operation creates a new instance
    of the specified class. The instance is populated with the content of the body
    of the API call.\r\n\r\nThe **Create** call returns a JSON object representing
    the newly created instance.\r\n\r\nSuccess response codes:\r\n* 201 Created\r\n\r\nError
    response codes:\r\n* 400 Bad request\r\n* 403 Forbidden\r\n* 422 Unprocessable
    entity\r\n"
  x-traitTag: true
- name: read
  description: "<a name=\"read\"></a>A **Read** operation will return information
    about the instance identified, provided the authenticated user has access to it.\r\n\r\nThe
    **Read** operation returns a JSON object representing the instance.\r\n\r\nSuccess
    response codes:\r\n\r\n* 200 OK\r\n\r\nError response codes:\r\n* 403 Forbidden\r\n*
    404 Not found\r\n"
  x-traitTag: true
- name: update
  description: "<a name=\"update\"></a>An **Update** operation will modify the information
    held about the specified instance. This operation is only available if the authenticated
    user has access to the object.\r\n\r\nSuccess response codes:\r\n* 200 OK\r\n\r\nError
    response codes:\r\n* 403 Forbidden\r\n* 404 Not found\r\n* 422 Unprocessable entity\r\n"
  x-traitTag: true
- name: delete
  description: "<a name=\"delete\"></a>A **Delete** operation will delete the specified
    instance, if the authenticated user has sufficient access to it.\r\n\r\nSuccess
    response codes:\r\n* 200 OK\r\n\r\nError response codes:\r\n* 403 Forbidden\r\n*
    404 Not found\r\n"
  x-traitTag: true
- name: upload
  description: "<a name=\"upload\"></a>**Upload** operations are used to satisfy the
    required content of previously created resources such as <a href=\"#dataFiles\">**DataFile**</a>,
    <a href=\"#documents\">**Document**</a>, <a href=\"#models\">**Model**</a>, <a
    href=\"#sops\">**SOP**</a> or <a href=\"#presentations\">**Presentation**</a>.
    See <a href=\"#ContentBlob\">**ContentBlob**</a> for more details.\n\n"
  x-traitTag: true
- name: download
  description: '<a name="download"></a>**Download** operations are used to retrieve
    the content of resources such as <a href="#dataFiles">**DataFile**</a>, <a href="#documents">**Document**</a>,
    <a href="#models">**Model**</a>, <a href="#sops">**SOP**</a> or <a href="#presentations">**Presentation**</a>.
    See <a href="#ContentBlob">**ContentBlob**</a> for more details.

    '
  x-traitTag: true
- name: search
  description: <a name="search"></a>
- name: institutions
  description: |
    <a name="institutions"></a>An **Institition** in SEEK is where someone is employed or works. It is normal for an **Institution** to have a physical location - a set of buildings in which <a href="#people">**People**</a> work.

    SEEK does not impose any constraints on the granularity of the **Institution** so it may represent a whole university or company, or be limited to a specific site.

    An **Institution** has the following associated information:

    * **The title of the Institution**
    * A reference to an avatar / logo for the **Institution**
    * The two letter country code
    * The name of the city where the **Institution** has its headquarters
    * The address of the **Institution** within the city
    * A URI to the webpage for the **Institution**

    A response for an **Institution** such as that for a <a href="#create">**Create**</a>, <a href="#read">**Read**</a> or <a href="#update">**Update**</a> includes the additional information

    * References to registered <a href="#people">**People**</a> who work at the **Institution**
    * References to the <a href="#projects">**Projects**</a> in which the **Institution** is a partner.
- name: people
  description: |-
    <a name="people"></a>A **Person** in SEEK is someone who participates directly or indirectly in the scientific research described within SEEK. A person may:

    * work at one or more <a href="#institutions">**Institutions**</a>
    * work on one or more <a href="#projects">**Projects**</a>

    A **Person** can have helped to carry out <a href="#investigations">**Investigations**</a>, <a href="#studies">**Studies**</a> and <a href="#assays">**Assays**</a>, and to have been involved in the creation of resources such as <a href="#dataFiles">**DataFles**</a>.

    A **Person** has the following associated information:

    * **The person's first name**
    * **The person's last name**
    * A personal description
    * An email address for the **Person**
    * A URI to a webpage about the **Person**
    * The [ORCID](https://orcid.org/) for the **Person**
    * A list of strings describing the expertise of the **Person**
    * A list of strings describing the tools that the **Person** uses
    * The telephone number of the **Person**, including country code
    * The [Skype](https://www.skype.com) name of the **Person**

    A response for a **Person** such as that for a <a href="#create">**Create**</a>, <a href="#read">**Read**</a> or <a href="#update">**Update**</a> includes the additional information

    * A URI to an image used as the **Person's** avatar
    * The **Person's** title, made from their first and last name
    * A list of the <a href="#projects">**Project**</a> positions held by the **Person**

    * References to the <a href="#projects">**Projects**</a> in which the **Person** is involved
    * References to the <a href="#institutions">**Institutions**</a> where the **Person** works
    * References to the <a href="#investigations">**Investigations**</a> in which the **Person** is involved
    * References to the <a href="#studies">**Studies**</a> in which the **Person** is involved
    * References to the <a href="#assays">**Assays**</a> in which the **Person** is involved
    * References to the <a href="#dataFiles">**DataFiles**</a> associated with the **Person**
    * References to the <a href="#documents">**Documents**</a> associated with the **Person**
    * References to the <a href="#models">**Models**</a> associated with the **Person**
    * References to the <a href="#sops">**SOPs**</a> associated with the **Person**
    * References to the <a href="#publications">**Publications**</a> associated with the **Person**
    * References to the <a href="#presentations">**Presentations**</a> associated with the **Person**
    * References to the <a href="#events">**Events**</a> associated with the **Person**

    **Note that in the Person response the email address is encoded in mbox_sha1sum**
- name: programmes
  description: |
    <a name="programmes"></a>**Programmes** are an umbrella group for one or more <a href="#projects">**Projects**</a>. They are usually, but not always, associated with a particular funded piece of research.

    A **Programme** has the following associated information:

    * ** The title of the Programme **
    * A description of the **Programme**
    * A URI to a webpage about the **Programme**
    * A string containing details about the funding of the **Programme**
    * A list of the funding codes for the **Programme**

    * References to the <a href="#people">**People**</a> who are administrators for the **Programme**
    * References to <a href="#projects">**Projects**</a> that are part of the **Programme**

    A response for a **Programme** such as that for a <a href="#create">**Create**</a>, <a href="#read">**Read**</a> or <a href="#update">**Update**</a> includes the additional information

    * References to <a href="#people">**People**</a> who work on the **Programme** and are not administrators
    * References to <a href="#institutions">**Institutions**</a> that are involved in the **Programme**
    * References to <a href="#investigations">**Investigations**</a> that are part of the **Programme**
    * References to <a href="#studies">**Studies**</a> that are part of the **Programme**
    * References to <a href="#assays">**Assays**</a> that are part of the **Programme**
    * References to <a href="#dataFiles">**DataFiles**</a> that belong to <a href="#projects">**Projects**</a> that are part of the **Programme**
    * References to <a href="#documents">**Documents**</a> that belong to <a href="#projects">**Projects**</a> that are part of the **Programme**
    * References to <a href="#models">**Models**</a> that belong to <a href="#projects">**Projects**</a> that are part of the **Programme**
    * References to <a href="#sops">**Sops**</a> that belong to <a href="#projects">**Projects**</a> that are part of the **Programme**
    * References to <a href="#publications">**Publications**</a> that belong to <a href="#projects">**Projects**</a> that are part of the **Programme**
    * References to <a href="#presentations">**Presentations**</a> that belong to <a href="#projects">**Projects**</a> that are part of the **Programme**
    * References to <a href="#events">**Events**</a> that are held by or attended by <a href="#projects">**Projects**</a> that are part of the **Programme**
- name: projects
  description: |+
    <a name="projects"></a>A **Project** is an area of research carried out as part of a <a href="#programmes">**Programme**</a> and consisting of one or more <a href="#investigations">**Investigations**</a>.

    **In the current version of the API, the <a href="#Policy">Policy</a> and the description of Project members and administrative roles does not work correctly.  This will be improved in future versions of the API.**

    A **Project** has the following associated information:

    * **The title of the Project**
    * A reference to an avatar / logo for the **Project**
    * A description of the **Project**
    * A URI to a webpage about the **Project**
    * A URI to the wiki of the **Project**
    * The default <a href="#Policy">**Policy**</a> applied to objects belonging to the **Project**
    * The default <a href="#License">**License**</a> applied to objects belonging to the **Project**

    * References to the <a href="#programmes">**Programmes**</a> that the **Project** is part of
    * References to the <a href="#organisms">**Organisms**</a> studied by the **Project**

    A response for a **Project** such as that for a <a href="#create">**Create**</a>, <a href="#read">**Read**</a> or <a href="#update">**Update**</a> includes the additional information

    * References to <a href="#people">**People**</a> who work on the **Project**
    * References to <a href="#institutions">**Institutions**</a> that are involved in the **Project**
    * References to <a href="#investigations">**Investigations**</a> that are part of the **Project**
    * References to <a href="#studies">**Studies**</a> that are part of the **Project**
    * References to <a href="#assays">**Assays**</a> that are part of the **Project**
    * References to <a href="#dataFiles">**DataFiles**</a> that belong to the <a href="#projects">**Project**</a>
    * References to <a href="#documents">**Documents**</a> that belong to the <a href="#projects">**Project**</a>
    * References to <a href="#models">**Models**</a> that belong to the <a href="#projects">**Project**</a>
    * References to <a href="#sops">**Sops**</a> that belong to the <a href="#projects">**Project**</a>
    * References to <a href="#publications">**Publications**</a> that belong to the <a href="#projects">**Project**</a>
    * References to <a href="#presentations">**Presentations**</a> that belong to the <a href="#projects">**Project**</a>
    * References to <a href="#events">**Events**</a> that are held by or attended by the <a href="#projects">**Project**</a>


- name: investigations
  description: |+
    <a name="investigations"></a>**Investigations** are high level descriptions of the research carried out by a particular <a href="#projects">**Project**</a>. They typically reflect the general aims of the <a href="#projects">**Project**</a>, for example, carbon metabolism or anaerobic/aerobic transitions.

    An **Investigation** has the following associated information:

    * **The title of the Investigation**
    * A description of the **Investigation**
    * A string listing other creators of the **Investigation**
    * The sharing <a href="#Policy">**Policy**</a> of the **Investigation**
    * References to the <a href="#people">**People**</a> who created the **Investigation**
    * References to the <a href="#projects">**Projects**</a> which the **Investigation** is part of
    * References to <a href="#publications">**Publications**</a> about the **Investigation**

    A response for an **Investigation** such as that for a <a href="#create">**Create**</a>, <a href="#read">**Read**</a> or <a href="#update">**Update**</a> includes the additional information

    * A reference to the <a href="#people">**Person**</a> who registered (submitted) the **Investigation** into SEEK
    * References to <a href="#studies">**Studies**</a> that are part of the **Investigation**
    * References to <a href="#assays">**Assays**</a> that are part of the **Investigation**
    * References to <a href="#dataFiles">**DataFiles**</a> that belong to the **Investigation**
    * References to <a href="#documents">**Documents**</a> that belong to the **Investigation**
    * References to <a href="#models">**Models**</a> that belong to the **Investigation**
    * References to <a href="#sops">**Sops**</a> that belong to the **Investigation**
    * References to <a href="#publications">**Publications**</a> that belong to the **Investigation**


- name: studies
  description: |+
    <a name="studies"></a>A **Study** is a series of experiments (or <a href="#assays">**Assays**</a> ) which can be combined to answer a particular biological question. These experiments might be a series of the same type of <a href="#assays">**Assay**</a> (for example, microarrays for different conditions), or they may be a collection of different types of <a href="#assays">**Assay**</a> (e.g. a combination of array and mass spec measurements).

    A **Study** has the following associated information:

    * **The title of the Study**
    * A description of the **Study**
    * A string listing experimentalists of the **Study**
    * A string listing other creators of the **Study**
    * A string containing the id of the <a href="#people">**Person**</a> responsible for the **Study**
    * The sharing <a href="#Policy">**Policy**</a> of the **Study**
    * References to the <a href="#people">**People**</a> who created the **Study**
    ** A reference to the <a href="#investigations">Investigation</a> containing the Study**
    * References to <a href="#publications">**Publications**</a> about the **Study**

    A response for a **Study** such as that for a <a href="#create">**Create**</a>, <a href="#read">**Read**</a> or <a href="#update">**Update**</a> includes the additional information

    * A reference to the <a href="#people">**Person**</a> who registered (submitted) the **Study** into SEEK
    * References to the <a href="#projects">**Projects**</a> that indirectly contain the **Study**
    * References to the <a href="#assays">**Assays**</a> that belong to the **Stuady**
    * References to <a href="#dataFiles">**DataFiles**</a> that belong to the **Study**
    * References to <a href="#documents">**Documents**</a> that belong to the **Study**
    * References to <a href="#models">**Models**</a> that belong to the **Study**
    * References to <a href="#sops">**Sops**</a> that belong to the **Study**
    * References to <a href="#publications">**Publications**</a> that belong to the **Study**





- name: assays
  description: |+
    <a name="assays"></a>An **Assay** describes a particular experiment. It allows you to associate <a href="#dataFiles">**DataFiles**</a>, <a href="#sops">**SOPs**</a> and <a href="#models">**Models**</a> together as well as describing the type of **Assay** and any technology required to perform the experiment.

    An **Assay** has the following associated information:

    * **The title of the Assay**
    * A description of the **Assay**
    * A string listing other creators of the **Assay**
    * A string containing the abbreviated form of the kind of **Assay** - normally *EXP* for experimental or *MOD* for modelling
    * A URI to the type of **Assay** resolving to an entry in the [JERM ontology](http://jermontology.org/ontology/JERMOntology)
    * A URI to the technology used in the **Assay** resolving to an entry in the [JERM ontology](http://jermontology.org/ontology/JERMOntology)
    * The sharing <a href="#Policy">**Policy**</a> of the **Assay**
    * References to the <a href="#people">**People**</a> who created the **Assay**
    * A singleton reference to the <a href="#studies">**Study**</a> which the **Assay** is part of
    * References to <a href="#publications">**Publications**</a> about the **Assay**
    * References to <a href="#dataFiles">**DataFiles**</a> that belong to the **Assay**
    * References to <a href="#documents">**Documents**</a> that belong to the **Assay**
    * References to <a href="#models">**Models**</a> that belong to the **Assay**
    * References to <a href="#sops">**Sops**</a> that belong to the **Assay**
    * References to the <a href="#organisms">**Organisms**</a> studied in the **Assay**

    A response for an **Assay** such as that for a <a href="#create">**Create**</a>, <a href="#read">**Read**</a> or <a href="#update">**Update**</a> includes the additional information

    * A singleton reference to the <a href="#investigations">**Investigation**</a> which the **Assay** is part of
    * References to the <a href="#projects">**Projects**</a> that indirectly contain the **Assay**





- name: collections
  description: |
    <a name="collections"></a>A **Collection** is a curated, ordered collection of assets.

    The collections API can be used to create an empty collections, and add metadata that describes the collection as a whole.

    Assets can be added, removed, re-ordered and annotated (in the context of the collection) via the <a href="#collection_items">**Collection Items**</a> API.

    <a name="collection_items"></a>A **Collection Item** is a resource that links an asset to a collection.
- name: contentBlobs
  description: |
    <a name="content_blobs"></a>A **ContentBlob** represents the actual content of an asset.

    It can refer to a locally held file, or a remote file linked to by a URL.

    It hold some metadata about the file, such as checksums, MIME type and file size.

    The content blobs API is used for uploading and downloading content to and from SEEK.
- name: dataFiles
  description: |+
    <a name="dataFiles"></a>A **dataFile** can be any file containing data relevant to the <a href="#assays">**Assay**</a> (raw data, processed data, calibration information etc). They can be in any format (word files, e-lab notebooks, code, annotated spreadsheets etc).

    **Although dataFiles are versioned, this is out of scope for the current release of the API.**

    A **DataFile** has the following associated information:

    * **The title of the DataFile**
    * **The specification for the <a href="#ContentBlob">ContentBlobs</a> in the DataFile**
    * **References to the <a href="#projects">Projects</a> documented**
    * A string containing a list of tags for the **DataFile**
    * A description of the **DataFile**
    * The <a href="#License">**License**</a> applied to the **DataFile**
    * The sharing <a href="#Policy">**Policy**</a> applied to the **DataFile**
    * A string listing other creators of the **DataFile**
    * References to the <a href="#people">**People**</a> who wrote the **DataFile**
    * References to the <a href="#assays">**Assays**</a> associated with the **DataFile**
    * References to the <a href="#publications">**Publications**</a> associated with the **DataFile**
    * References to the <a href="#events">**Events**</a> associated with the **DataFile**

    A response for a **DataFile** such as that for a <a href="#create">**Create**</a>, <a href="#read">**Read**</a> or <a href="#update">**Update**</a> includes the additional information

    * ** An array of the versions of the DataFile**
    * ** A number indicating the latest version**
    * ** The time when the DataFile was created**
    * ** The last time the DataFile was updated**
    * A reference to the <a href="#people">**Person**</a> who submitted the **DataFile**
    * References to the <a href="#investigations">**Investigations**</a> associated with the **DataFile**
    * References to the <a href="#studies">**Studies**</a> associated with the **DataFile**



- name: documents
  description: |+
    <a name="documents"></a>A **Document** is any documentation that describes an <a href="#investigations">**Investigation**</a>, <a href="#studies">**Study**</a> or <a href="#assays">**Assay**</a>. The content of a **Document** is descriptive and it must not contain any data that is consumed or produced by an <a href="#assays">**Assay**</a>.

    **Although documents are versioned, this is out of scope for the current release of the API.**

    A **Document** has the following associated information:

    * **The title of the Document**
    * **The specification for the <a href="#ContentBlob">ContentBlobs</a> in the Document**
    * **References to the <a href="#projects">Projects</a> documented**
    * A string containing a list of tags for the **Document**
    * A description of the **Document**
    * The <a href="#License">**License**</a> applied to the **Document**
    * The sharing <a href="#Policy">**Policy**</a> applied to the **Document**
    * A string listing other creators of the **Document**
    * References to the <a href="#people">**People**</a> who wrote the **Document**
    * References to the <a href="#assays">**Assays**</a> documented

    A response for a **Document** such as that for a <a href="#create">**Create**</a>, <a href="#read">**Read**</a> or <a href="#update">**Update**</a> includes the additional information

    * ** An array of the versions of the Document**
    * ** A number indicating the latest version**
    * ** The time when the Document was created**
    * ** The last time the Document was updated**
    * A reference to the <a href="#people">**Person**</a> who submitted the **Document**
    * References to the <a href="#investigations">**Investigations**</a> associated with the **Document**
    * References to the <a href="#studies">**Studies**</a> associated with the **Document**
    * References to the <a href="#publications">**Publications**</a> associated with the **Document**

















- name: models
  description: |
    <a name="models"></a>A **Model** is a computer model of a biological or biochemical network or process.Some **Models** may be simulated using the JWSOnline system.

    **Although models are versioned, this is out of scope for the current release of the API.**

    A **Model** has the following associated information:

    * **The title of the Model**
    * **The specification for the <a href="#ContentBlob">ContentBlobs</a> in the Model**
    * **References to the <a href="#projects">Projects</a> documented**
    * A string containing a list of tags for the **Model**
    * A description of the **Model**
    * The <a href="#License">**License**</a> applied to the **Model**
    * The sharing <a href="#Policy">**Policy**</a> applied to the **Model**
    * A string listing other creators of the **Model**
    * A string specifying the **Model** type
    * A string specifying the **Model** format
    * A string specifying the execution environment of the **Model**
    * References to the <a href="#people">**People**</a> who wrote the **Model**
    * References to the <a href="#assays">**Assays**</a> associated with the **Model**
    * References to the <a href="#publications">**Publications**</a> associated with the **Model**

    A response for a **Model** such as that for a <a href="#create">**Create**</a>, <a href="#read">**Read**</a> or <a href="#update">**Update**</a> includes the additional information

    * ** An array of the versions of the Model**
    * ** A number indicating the latest version**
    * ** The time when the Model was created**
    * ** The last time the Model was updated**
    * A reference to the <a href="#people">**Person**</a> who submitted the **Model**
    * References to the <a href="#investigations">**Investigations**</a> associated with the **Model**
    * References to the <a href="#studies">**Studies**</a> associated with the **Model**
- name: publications
  description: "<a name=\"publications\"></a>A **Publication** is a publication about
    a <a href=\"#projects\">**Project**</a>, It normally has a [DOI](http://www.doi.org/)
    or [PubMed ID](https://en.wikipedia.org/wiki/Wikipedia:PMID).\n\nThe response
    to a read of a **Publication** includes the following information:\n\n* **The
    title of the Publication**\n* **The Publication type**\n* **The journal in which
    the Publication is published**\n* **A string containing the date of publication**\n*
    **The preferred string for citing the Publication**\n* **A link to the Publication**\n*
    **The DOI of the Publication**\n* **The PubMed of the Publication**\n* A list
    of strings for the authors\n* A list of strings for the editors (optional)\n*
    Publisher (optional)\n* Booktitle (optional)\n* An extra URL for publications
    without DOI or PubMed ID (optional)\n* **The specification for the <a href=\"#ContentBlob\">ContentBlobs</a>
    in the Publication (full text article) if allowed and activated**  \n* The sharing
    <a href=\"#Policy\">**Policy**</a> for the **Publication**\n* References to the
    <a href=\"#people\">**People**</a> who wrote the **Publication**\n* References
    to the <a href=\"#projects\">**Projects**</a> described in the **Publication**\n*
    References to the <a href=\"#investigations\">**Investigations**</a> described
    in the **Publication**\n* References to the <a href=\"#studies\">**Studies**</a>
    described in the **Publication**\n* References to the <a href=\"#assays\">**Assays**</a>
    described in the **Publication**\n* References to <a href=\"#dataFiles\">**DataFiles**</a>
    that were used in the work described in the **Publication**\n* References to <a
    href=\"#models\">**Models**</a> that were used in the work described in the **Publication**\n*
    References to related **Publications**\n* References to <a href=\"#presentations\">**Presentations**</a>
    associated with the **Publication**\n* References to <a href=\"#events\">**Events**</a>
    associated with the **Publication**\n\n"
- name: sops
  description: |+
    <a name="sops"></a>**SOPs** are standard operating procedures which describe the protocol required to reproduce an <a href="#assays">**Assay**</a>. They can be in any format (word files, e-lab notebooks, code, annotated spreadsheets etc). Relevant **SOPs** can be linked directly to the <a href="#assays">**Assay**</a>.

    **Although SOPs are versioned, this is out of scope for the current release of the API.**

    A **SOP** has the following associated information:

    * **The title of the SOP**
    * **The specification for the <a href="#ContentBlob">ContentBlobs</a> in the SOP**
    * **References to the <a href="#projects">Projects</a> relevant to the SOP**
    * A string containing a list of tags for the **SOP**
    * A description of the **SOP**
    * The <a href="#License">**License**</a> applied to the **SOP**
    * The sharing <a href="#Policy">**Policy**</a> applied to the **SOP**
    * A string listing other creators of the **SOP**
    * References to the <a href="#people">**People**</a> who wrote the **SOP**
    * References to the <a href="#assays">**Assays**</a> relevant to the SOP

    A response for a **SOP** such as that for a <a href="#create">**Create**</a>, <a href="#read">**Read**</a> or <a href="#update">**Update**</a> includes the additional information

    * An array of the versions of the **SOP**
    * A number indicating the latest **version**
    * The time when the SOP was **created**
    * The last time the SOP was **updated**
    * A reference to the <a href="#people">**Person**</a> who submitted the **SOP**
    * References to the <a href="#investigations">**Investigations**</a> associated with the **SOP**
    * References to the <a href="#studies">**Studies**</a> associated with the **SOP**
    * References to the <a href="#publications">**Publications**</a> associated with the **SOP**

- name: events
  description: |-
    <a name="events"></a>An **Event** is an event that is associated with one or more <a href="#projects">**Projects**</a>, happening on specified dates and at a specific, actual or virtual, location.

    An **Event** has the following associated information:

    * **The title of the Event**
    * **The start date of the Event**
    * A description of the **Event**
    * A URI to a webpage about the **Event**
    * The two letter country code for where the **Event** is
    * The name of the city where the **Event** takes place
    * The address within the city where the **Event** takes place
    * The end date of the **Event**
    * The sharing <a href="#Policy">**Policy**</a> for the **Event**
    * **References to the <a href="#projects">Projects</a> associated with the Event**
    * References to any <a href="#dataFiles">**DataFiles**</a>  associated with the **Event**
    * References to any <a href="#publications">**Publications**</a>  associated with the **Event**
    * References to any <a href="#presentations">**Presentations**</a>  associated with the **Event**

    A response for an **Event** such as that for a <a href="#create">**Create**</a>, <a href="#read">**Read**</a> or <a href="#update">**Update**</a> includes the additional information

    * Reference to the <a href="#people">**Person**</a> who submitted the **Event**
- name: presentations
  description: |-
    <a name="presentations"></a>A **Presentation** is a presentation about one or more <a href="#projects">**Projects**</a>.

    **Although presentations are versioned, this is out of scope for the current release of the API.**

    A **Presentation** has the following associated information:

    * **The title of the Presentation**
    * **The specification for the <a href="#ContentBlob">ContentBlobs</a> in the Presentation**
    * **References to the <a href="#projects">Projects</a> documented**
    * A string containing a list of tags for the **Presentation**
    * A description of the **Presentation**
    * The <a href="#License">**License**</a> applied to the **Presentation**
    * The sharing <a href="#Policy">**Policy**</a> applied to the **Presentation**
    * A string listing other creators of the **Presentation**
    * References to the <a href="#people">**People**</a> who wrote the **Presentation**
    * References to the <a href="#assays">**Assays**</a> associated with the **Presentation**
    * References to the <a href="#publications">**Publications**</a> associated with the **Presentation**
    * References to the <a href="#events">**Events**</a> associated with the **Presentation**

    A response for a **Presentation** such as that for a <a href="#create">**Create**</a>, <a href="#read">**Read**</a> or <a href="#update">**Update**</a> includes the additional information

    * ** An array of the versions of the Presentation**
    * ** A number indicating the latest version**
    * ** The time when the Presentation was created**
    * ** The last time the Presentation was updated**
    * A reference to the <a href="#people">**Person**</a> who submitted the **Presentation**
    * References to the <a href="#investigations">**Investigations**</a> associated with the **Presentation**
    * References to the <a href="#studies">**Studies**</a> associated with the **Presentation**
- name: organisms
  description: |+
    <a name="organisms"></a>An **Organism** is a organism as identified by an entry in the [NCBI ontology](http://www.ncbi.nlm.nih.gov/taxonomy).

    The response to a read of an **Organism** includes the following information:

    * **The title of the Organism**
    * **A URI referencing an ontology entry describing the Organism**
    * **The common abbreviation for the ontology**
    * **References to <a href="#projects">Projects</a> that use the Organism**
    * **References to <a href="#assays">Assays</a> that use the Organism**
    * **References to <a href="#models">Models</a> that simulate the Organism**

- name: sampleTypes
  description: "<a name=\"sampleTypes\"></a>A **SampleType** is a definition of the
    information that is held about a physical or virtual sample.\n\n* The **title**
    of the SampleType, which corresponds the the **title** attribute\n* References
    to the <a href=\"#projects\">Projects</a> relevant to the **SampleType**\n* An
    array of strings containing a list of **tags** for the **SampleType**\n* A string
    providing a **description** of the **SampleType**\n* An array of **Sample Attributes**,
    including their <a href=\"#sampleAttributeTypes\">Sample Attribute Type</a> contained
    in this **SampleType**\n\n\n\n\nA response for a **SampleType** such as that for
    a <a href=\"#create\">**Create**</a>, <a href=\"#read\">**Read**</a> or <a href=\"#update\">**Update**</a>
    includes the additional information\n\n* The time when the **SampleType** was
    **created**\n* The last time the **SampleType** was **updated**\n* A references
    to the **Submitter**</a> who created the **SampleType**  \n* References to the
    <a href=\"#people\">**People**</a> who created the **SampleType**\n* References
    to the <a href=\"#samples\">**Samples**</a> built from this **SampleType**\n\nSampleType's
    contain the attribute **sample_attributes** which contains information about the
    attributes associated with the \nSampleType. These attributes also link to the
    **sample_attribute_type**. The full list of \nattribute types registered with
    the system can be found using the <a href=\"#operation/listSampleAttributeTypes\">listSampleAttributeTypes</a>
    operation.\n\nWhen creating or updating and wishing to specify the **sample_attribute_type**,
    either it's **id** or unique **title** can be used.\n\nWhen updating a SampleType,
    a **sample_attribute** can be updated by specifying it's **id**. Without the **id**,
    a new attribute will be added.\nAny **sample_attribute** not described in the
    payload will be left alone and unchanged. To remove an attribute, specify its\n**id**
    and also set **_destroy** to be true.\n"
- name: samples
  description: "A **Sample** has the following associated information:\n\n* **The
    title of the Sample, which corresponds the the title attribute**\n* **References
    to the <a href=\"#projects\">Projects</a> relevant to the Sample**\n* A string
    containing a list of tags for the **Sample**\n* The sharing <a href=\"#Policy\">**Policy**</a>
    applied to the **Sample**\n* A string listing other creators of the **Sample**\n*
    The **attribute map**, containing the attribute values for the **Sample** _(see
    below)_ \n* References to the <a href=\"#people\">**People**</a> who created the
    **Sample**\n* References to the <a href=\"#assays\">**Assays**</a> relevant to
    the **Sample**\n* References to the <a href=\"#data_files\">**Data files**</a>
    relevant to the **Sample**\n* A references to the <a href=\"#sampleTypes\">**Sample
    type**</a> relevant to the **Sample**\n\nA response for a **Sample** such as that
    for a <a href=\"#create\">**Create**</a>, <a href=\"#read\">**Read**</a> or <a
    href=\"#update\">**Update**</a> includes the additional information\n\n* The time
    when the **Sample** was **created**\n* The last time the **Sample** was **updated**\n*
    A references to the **Submitter**</a> who created the **Sample**\n\n**Samples**
    differ slightly from other payloads due to the flexible nature of the attributes
    and their values,\nwhich are handled through the **attribute_map** property.\n\nThe
    **attribute_map** is a hash containing key/value pairs, where the key relates
    to the attribute title, which can be\nfound by looking at the corresponding <a
    href=\"#sample_types\">**Sample type**</a>. To set the attribute value, the key
    must\nmatch this title. \nWhen doing a patch, individual attributes can be updated
    without missing from the map, those will retain their current value.\nThe values
    will be validated against the corresponding **sample_attribute**.\n\nIt is possible
    to create a **Sample** together with its attribute values - infact it must do
    where\nattributes are required.\n"
- name: workflows
  description: |+
    <a name="workflows"></a>**Workflows**


x-tagGroups:
- name: operation types
  tags:
  - list
  - create
  - read
  - update
  - delete
  - upload
  - download
- name: Search
  tags:
  - search
- name: Yellow Pages
  tags:
  - institutions
  - people
  - programmes
  - projects
- name: Experiments
  tags:
  - investigations
  - studies
  - assays
- name: Assets
  tags:
  - collections
  - dataFiles
  - documents
  - models
  - publications
  - sops
  - workflows
  - contentBlobs
- name: Activities
  tags:
  - events
  - presentations
- name: Samples
  tags:
  - organisms
  - sampleTypes
  - samples
  - sampleAttributeTypes
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      description: "<a name=\"authentication\"></a>\n<a name=\"authentication-oauth\"></a>If
        you are creating an application for others to use, the best solution is to
        register an\nOAuth2 application in SEEK.\n\nThis can be done in SEEK by visiting
        *My Profile* > *Actions* > *API Applications*.\n\nSEEK currently only supports
        the \"Authorization Code\" flow.\n\nIf your application runs client-side (such
        as in a web browser using JavaScript, or on a phone), you will need to make
        \nsure that the \"Confidential?\" checkbox is unticked, and you will need
        to implement the PKCE extention to the \nAuthorization Code flow: https://oauth.net/2/pkce/\n"
      flows:
        authorizationCode:
          authorizationUrl: "/oauth/authorize"
          tokenUrl: "/oauth/token"
          scopes:
            read: Read, download and list resources
            write: Create, upload, update and delete resources
    apiToken:
      type: apiKey
      in: header
      name: Authorization
      description: |
        <a name="authentication-token"></a>If you are creating a simple script that makes use of the SEEK API, where implementing
        OAuth2 is unnecessarily complicated, you can create an API Token.

        This can be done in SEEK by visiting *My Profile* > *Actions* > *API Tokens*.

        *Note*: You will only be shown your API Token once, so make sure to paste it somewhere.

        To use your API Token, place it into the `Authorization` header when making API requests in the form: `Token abce1234...`
        where "abce1234..." is your token.

        *Warning*: API Tokens grant access to your account! Do not share them with anyone. You can revoke API Tokens at any time.
    basicAuth:
      type: http
      description: |
        <a name="authentication-basic"></a>The final authentication method uses [Basic access
        authentication](https://en.wikipedia.org/wiki/Basic_access_authentication)
        where the *username* and *password* correspond to a registered user on
        the SEEK that is being accessed.

        The **List** and **Read** API calls may be used without authentication. In
        that case, they will only list, or allow reading of, publicly viewable
        objects.
      scheme: basic
  schemas:
    error:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string
        source:
          type: object
          properties:
            pointer:
              type: string
    errorsArray:
      type: array
      minItems: 0
      items:
        "$ref": "#/components/schemas/error"
    dateTimeString:
      type: string
      minLength: 1
      format: date-time
    nullableDateTimeString:
      anyOf:
      - type: 'null'
      - "$ref": "#/components/schemas/dateTimeString"
    dateString:
      type: string
      minLength: 1
      format: date
    nullableDateString:
      anyOf:
      - type: 'null'
      - "$ref": "#/components/schemas/dateString"
    nonEmptyString:
      type: string
      minLength: 1
    nullableNonEmptyString:
      anyOf:
      - type: 'null'
      - "$ref": "#/components/schemas/nonEmptyString"
    otherCreatorsString:
      type: string
      minLength: 1
    nullableOtherCreatorsString:
      anyOf:
      - type: 'null'
      - "$ref": "#/components/schemas/otherCreatorsString"
    nonEmptyStringList:
      type: array
      items:
        "$ref": "#/components/schemas/nonEmptyString"
    itemReference:
      properties:
        id:
          "$ref": "#/components/schemas/nonEmptyString"
        type:
          "$ref": "#/components/schemas/anyType"
      required:
      - id
      - type
      additionalProperties: false
    singleReferenceWithTitle:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/itemReference"
        meta:
          type: object
          properties:
            title:
              "$ref": "#/components/schemas/nullableNonEmptyString"
      required:
      - data
      - meta
      additionalProperties: false
    singleReference:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/itemReference"
      required:
      - data
      additionalProperties: false
    multipleReferences:
      type: object
      properties:
        data:
          type: array
          minItems: 0
          uniqueItems: true
          items:
            "$ref": "#/components/schemas/itemReference"
      required:
      - data
      additionalProperties: false
    assetsCreator:
      type: object
      properties:
        pos:
          type: integer
        profile:
          "$ref": "#/components/schemas/uriString"
        given_name:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        family_name:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        orcid:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        affiliation:
          "$ref": "#/components/schemas/nullableNonEmptyString"
      required:
      - given_name
      - family_name
    assetsCreatorsList:
      type: array
      minItems: 0
      items:
        "$ref": "#/components/schemas/assetsCreator"
    assetLink:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/nonEmptyString"
        label:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        url:
          "$ref": "#/components/schemas/uriString"
      required:
      - id
      - label
      - url
    assetLinkCreate:
      type: object
      properties:
        label:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        url:
          "$ref": "#/components/schemas/uriString"
      required:
      - label
      - url
    assetLinkList:
      type: array
      minItems: 0
      items:
        "$ref": "#/components/schemas/assetLink"
    assetLinkPostList:
      type: array
      minItems: 0
      items:
        "$ref": "#/components/schemas/assetLinkCreate"
    assetLinkPatchList:
      type: array
      minItems: 0
      items:
        anyOf:
        - "$ref": "#/components/schemas/assetLink"
        - "$ref": "#/components/schemas/assetLinkCreate"
    snapshotSkeleton:
      type: object
      properties:
        snapshot:
          type: integer
          minimum: 1
        url:
          "$ref": "#/components/schemas/uriString"
      required:
      - snapshot
      - url
    snapshotsList:
      type: array
      items:
        "$ref": "#/components/schemas/snapshotSkeleton"
    uriString:
      type: string
      minLength: 1
      format: uri
    nullableUriString:
      anyOf:
      - type: 'null'
      - "$ref": "#/components/schemas/uriString"
    nullableInteger:
      anyOf:
      - type: 'null'
      - type: integer
    license:
      type: string
      minLength: 1
    nullableLicense:
      anyOf:
      - type: 'null'
      - "$ref": "#/components/schemas/license"
    md5sumString:
      type: string
      minLength: 32
      maxLength: 32
      pattern: "[0-9a-f]{32}"
    nullableMd5sumString:
      anyOf:
      - type: 'null'
      - "$ref": "#/components/schemas/md5sumString"
    sha1sumString:
      type: string
      minLength: 5
      maxLength: 40
      pattern: "[0-9a-f]{5,40}"
    nullableSha1sumString:
      anyOf:
      - type: 'null'
      - "$ref": "#/components/schemas/sha1sumString"
    countryString:
      type: string
    nullableCountryString:
      anyOf:
      - type: 'null'
      - "$ref": "#/components/schemas/countryString"
    countryCodeString:
      minLength: 2
      maxLength: 2
      type: string
    nullableCountryCodeString:
      anyOf:
      - type: 'null'
      - "$ref": "#/components/schemas/countryCodeString"
    versionNumber:
      type: string
      minLength: 1
      enum:
      - '1.0'
    JsonApiVersion:
      type: object
      properties:
        version:
          "$ref": "#/components/schemas/versionNumber"
      required:
      - version
      additionalProperties: false
    indexLinks:
      type: object
      properties:
        self:
          "$ref": "#/components/schemas/uriString"
        first:
          "$ref": "#/components/schemas/nullableUriString"
        prev:
          "$ref": "#/components/schemas/nullableUriString"
        next:
          "$ref": "#/components/schemas/nullableUriString"
        last:
          "$ref": "#/components/schemas/nullableUriString"
      required:
      - self
      additionalProperties: false
    collectionLinks:
      type: object
      properties:
        self:
          "$ref": "#/components/schemas/uriString"
        items:
          "$ref": "#/components/schemas/uriString"
      required:
      - self
      - items
    links:
      type: object
      properties:
        self:
          "$ref": "#/components/schemas/uriString"
      required:
      - self
      additionalProperties: false
    downloadableLinks:
      type: object
      properties:
        self:
          "$ref": "#/components/schemas/uriString"
        download:
          "$ref": "#/components/schemas/uriString"
      required:
      - self
      - download
      additionalProperties: false
    baseMeta:
      type: object
      properties:
        base_url:
          "$ref": "#/components/schemas/uriString"
        api_version:
          "$ref": "#/components/schemas/nonEmptyString"
      required:
      - base_url
      - api_version
      additionalProperties: false
    meta:
      type: object
      properties:
        base_url:
          "$ref": "#/components/schemas/uriString"
        api_version:
          "$ref": "#/components/schemas/nonEmptyString"
        created:
          "$ref": "#/components/schemas/dateTimeString"
        modified:
          "$ref": "#/components/schemas/dateTimeString"
        uuid:
          "$ref": "#/components/schemas/nonEmptyString"
      required:
      - created
      - modified
      - uuid
      - base_url
      - api_version
      additionalProperties: false
    collectionItemMeta:
      type: object
      properties:
        base_url:
          "$ref": "#/components/schemas/uriString"
        api_version:
          "$ref": "#/components/schemas/nonEmptyString"
        created:
          "$ref": "#/components/schemas/dateTimeString"
        modified:
          "$ref": "#/components/schemas/dateTimeString"
      required:
      - created
      - modified
      - base_url
      - api_version
      additionalProperties: false
    policy:
      type: object
      properties:
        access:
          "$ref": "#/components/schemas/accessTypes"
        permissions:
          type: array
          minItems: 0
          uniqueItems: true
          items:
            properties:
              resource:
                "$ref": "#/components/schemas/permissionResource"
              access:
                "$ref": "#/components/schemas/accessTypes"
            required:
            - resource
            - access
            additionalProperties: false
      required:
      - access
      - permissions
      additionalProperties: false
    accessTypes:
      type: string
      minLength: 1
      enum:
      - manage
      - edit
      - download
      - view
      - no_access
    permissionResource:
      properties:
        type:
          "$ref": "#/components/schemas/permissionResourceTypes"
        id:
          "$ref": "#/components/schemas/nonEmptyString"
      additionalProperties: false
    permissionResourceTypes:
      type: string
      minLength: 1
      enum:
      - people
      - favourite_groups
      - work_groups
      - projects
      - programmes
      - institutions
    contributedTypeAttributes:
      type: object
      properties:
        tags:
          "$ref": "#/components/schemas/tags"
        title:
          "$ref": "#/components/schemas/nonEmptyString"
        description:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        license:
          "$ref": "#/components/schemas/nullableLicense"
        latest_version:
          type: number
        versions:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            "$ref": "#/components/schemas/version"
        version:
          type: number
        revision_comments:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        doi:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        created_at:
          "$ref": "#/components/schemas/dateTimeString"
        updated_at:
          "$ref": "#/components/schemas/dateTimeString"
        content_blobs:
          "$ref": "#/components/schemas/contentBlobsList"
        policy:
          "$ref": "#/components/schemas/policy"
        other_creators:
          "$ref": "#/components/schemas/nullableOtherCreatorsString"
        creators:
          "$ref": "#/components/schemas/assetsCreatorsList"
        discussion_links:
          "$ref": "#/components/schemas/assetLinkList"
      required:
      - title
      - license
      - latest_version
      - versions
      - version
      - created_at
      - updated_at
      - content_blobs
      additionalProperties: false
    collectionAttributes:
      type: object
      properties:
        tags:
          "$ref": "#/components/schemas/tags"
        title:
          "$ref": "#/components/schemas/nonEmptyString"
        description:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        created_at:
          "$ref": "#/components/schemas/dateTimeString"
        updated_at:
          "$ref": "#/components/schemas/dateTimeString"
        license:
          "$ref": "#/components/schemas/nullableLicense"
        policy:
          "$ref": "#/components/schemas/policy"
        other_creators:
          "$ref": "#/components/schemas/nullableOtherCreatorsString"
        creators:
          "$ref": "#/components/schemas/assetsCreatorsList"
        discussion_links:
          "$ref": "#/components/schemas/assetLinkList"
      required:
      - title
      - license
      - created_at
      - updated_at
      additionalProperties: false
    modelAttributes:
      type: object
      properties:
        tags:
          "$ref": "#/components/schemas/tags"
        title:
          "$ref": "#/components/schemas/nonEmptyString"
        description:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        license:
          "$ref": "#/components/schemas/nullableLicense"
        latest_version:
          type: number
        versions:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            "$ref": "#/components/schemas/version"
        version:
          type: number
        revision_comments:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        doi:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        created_at:
          "$ref": "#/components/schemas/dateTimeString"
        updated_at:
          "$ref": "#/components/schemas/dateTimeString"
        content_blobs:
          "$ref": "#/components/schemas/contentBlobsList"
        model_type:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        model_format:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        environment:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        policy:
          "$ref": "#/components/schemas/policy"
        other_creators:
          "$ref": "#/components/schemas/nullableOtherCreatorsString"
        creators:
          "$ref": "#/components/schemas/assetsCreatorsList"
        discussion_links:
          "$ref": "#/components/schemas/assetLinkList"
        model_image_link:
          "$ref": "#/components/schemas/nullableUriString"
      required:
      - title
      - license
      - latest_version
      - versions
      - version
      - created_at
      - updated_at
      - content_blobs
      - model_type
      - model_format
      - environment
      additionalProperties: false
    assayAttributes:
      type: object
      properties:
        tags:
          "$ref": "#/components/schemas/tags"
        title:
          "$ref": "#/components/schemas/nonEmptyString"
        description:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        assay_class:
          type: object
          properties:
            title:
              "$ref": "#/components/schemas/nonEmptyString"
            key:
              "$ref": "#/components/schemas/nonEmptyString"
            description:
              type: string
          required:
          - title
          - key
          additionalProperties: false
        assay_type:
          type: object
          properties:
            label:
              "$ref": "#/components/schemas/nonEmptyString"
            uri:
              "$ref": "#/components/schemas/uriString"
          required:
          - label
          - uri
          additionalProperties: false
        technology_type:
          type: object
          properties:
            label:
              "$ref": "#/components/schemas/nonEmptyString"
            uri:
              "$ref": "#/components/schemas/nullableUriString"
          required:
          - label
          - uri
        discussion_links:
          "$ref": "#/components/schemas/assetLinkList"
      required:
      - title
      - description
      - assay_class
      - assay_type
      - technology_type
      additionalProperties: false
    tags:
      "$ref": "#/components/schemas/nonEmptyStringList"
    ontologyTermsList:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        "$ref": "#/components/schemas/ontologyTerm"
    ontologyTerm:
      type: object
      properties:
        label:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        identifier:
          "$ref": "#/components/schemas/uriString"
      required:
      - identifier
    anySkeleton:
      properties:
        id:
          "$ref": "#/components/schemas/nonEmptyString"
        type:
          "$ref": "#/components/schemas/anyType"
        attributes:
          type: object
          properties:
            title:
              "$ref": "#/components/schemas/nonEmptyString"
          required:
          - title
          additionalProperties: false
        links:
          "$ref": "#/components/schemas/links"
      required:
      - id
      - type
      - attributes
      - links
      additionalProperties: false
    collectionItem:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/nonEmptyString"
        type:
          "$ref": "#/components/schemas/collectionItemType"
        attributes:
          type: object
          properties:
            comment:
              "$ref": "#/components/schemas/nullableNonEmptyString"
            order:
              "$ref": "#/components/schemas/nullableInteger"
          required:
          - comment
          - order
          additionalProperties: false
        relationships:
          type: object
          properties:
            asset:
              "$ref": "#/components/schemas/singleReferenceWithTitle"
            collection:
              "$ref": "#/components/schemas/singleReference"
          required:
          - collection
          additionalProperties: false
        links:
          "$ref": "#/components/schemas/links"
        meta:
          "$ref": "#/components/schemas/collectionItemMeta"
      required:
      - id
      - type
      - attributes
      - relationships
      - links
      - meta
      additionalProperties: false
    contentBlobsList:
      type: array
      minItems: 1
      items:
        "$ref": "#/components/schemas/contentBlob"
    optionalContentBlobsList:
      type: array
      minItems: 0
      items:
        "$ref": "#/components/schemas/contentBlob"
    contentBlobSlotsList:
      type: array
      minItems: 1
      items:
        "$ref": "#/components/schemas/contentBlobSlot"
    contentBlobSlot:
      oneOf:
      - "$ref": "#/components/schemas/remoteContentBlob"
      - "$ref": "#/components/schemas/contentBlobPlaceholder"
    remoteContentBlob:
      properties:
        url:
          "$ref": "#/components/schemas/nullableUriString"
        original_filename:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        content_type:
          "$ref": "#/components/schemas/nullableNonEmptyString"
      required:
      - url
      additionalProperties: false
    contentBlobPlaceholder:
      properties:
        original_filename:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        content_type:
          "$ref": "#/components/schemas/nullableNonEmptyString"
      required:
      - original_filename
      - content_type
      additionalProperties: false
    contentBlob:
      properties:
        original_filename:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        url:
          "$ref": "#/components/schemas/nullableUriString"
        md5sum:
          "$ref": "#/components/schemas/nullableMd5sumString"
        sha1sum:
          "$ref": "#/components/schemas/nullableSha1sumString"
        content_type:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        link:
          "$ref": "#/components/schemas/uriString"
        size:
          "$ref": "#/components/schemas/nullableInteger"
      required:
      - original_filename
      - url
      - md5sum
      - sha1sum
      - content_type
      - link
      - size
      additionalProperties: false
    version:
      type: object
      properties:
        version:
          type: number
        revision_comments:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        url:
          "$ref": "#/components/schemas/uriString"
        doi:
          "$ref": "#/components/schemas/nullableNonEmptyString"
      required:
      - version
      - revision_comments
      - url
      additionalProperties: false
    gitVersion:
      type: object
      properties:
        version:
          type: number
        revision_comments:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        url:
          "$ref": "#/components/schemas/uriString"
        commit:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        ref:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        tree:
          "$ref": "#/components/schemas/uriString"
        remote:
          "$ref": "#/components/schemas/uriString"
        doi:
          "$ref": "#/components/schemas/nullableNonEmptyString"
      required:
      - version
      - revision_comments
      - url
      - commit
      - ref
      - tree
      additionalProperties: false
    workflowInput:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        name:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        description:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        type:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        default_value:
          "$ref": "#/components/schemas/nullableNonEmptyString"
    workflowStep:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        name:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        description:
          "$ref": "#/components/schemas/nullableNonEmptyString"
    workflowOutput:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        name:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        description:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        type:
          "$ref": "#/components/schemas/nullableNonEmptyString"
    projectMembersList:
      type: array
      items:
        type: object
        properties:
          person_id:
            "$ref": "#/components/schemas/nonEmptyString"
          institution_id:
            "$ref": "#/components/schemas/nonEmptyString"
        required:
        - person_id
        - institution_id
        additionalProperties: false
    sampleAttributeMap:
      type: object
      additionalProperties:
        type: string
    anyType:
      type: string
      minLength: 1
      enum:
      - assays
      - collections
      - collection_items
      - content_blobs
      - data_files
      - documents
      - file_templates
      - events
      - human_diseases
      - institutions
      - investigations
      - models
      - organisms
      - people
      - presentations
      - programmes
      - projects
      - publications
      - sample_types
      - sops
      - studies
      - workflows
    assetType:
      type: string
      minLength: 1
      enum:
      - collections
      - data_files
      - documents
      - models
      - publications
      - sops
      - workflows
    assayType:
      type: string
      minLength: 1
      enum:
      - assays
    contentBlobType:
      type: string
      minLength: 1
      enum:
      - content_blobs
    collectionType:
      type: string
      minLength: 1
      enum:
      - collections
    collectionItemType:
      type: string
      minLength: 1
      enum:
      - collection_items
    dataFileType:
      type: string
      minLength: 1
      enum:
      - data_files
    documentType:
      type: string
      minLength: 1
      enum:
      - documents
    eventType:
      type: string
      minLength: 1
      enum:
      - events
    fileTemplateType:
      type: string
      minLength: 1
      enum:
      - file_templates
    humanDiseaseType:
      type: string
      minLength: 1
      enum:
      - humanDiseases
    investigationType:
      type: string
      minLength: 1
      enum:
      - investigations
    institutionType:
      type: string
      minLength: 1
      enum:
      - institutions
    modelType:
      type: string
      minLength: 1
      enum:
      - models
    organismType:
      type: string
      minLength: 1
      enum:
      - organisms
    peopleType:
      type: string
      minLength: 1
      enum:
      - people
    placeholderType:
      type: string
      minLength: 1
      enum:
      - placeholders
    presentationType:
      type: string
      minLength: 1
      enum:
      - presentations
    programmeType:
      type: string
      minLength: 1
      enum:
      - programmes
    programmeDataType:
      type: object
      properties:
        avatar:
          "$ref": "#/components/schemas/nullableUriString"
        title:
          "$ref": "#/components/schemas/nonEmptyString"
        description:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        web_page:
          "$ref": "#/components/schemas/nullableUriString"
        funding_details:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        funding_codes:
          "$ref": "#/components/schemas/tags"
        discussion_links:
          "$ref": "#/components/schemas/assetLinkList"
      required:
      - avatar
      - title
      - description
      - web_page
      - funding_details
      - funding_codes
      additionalProperties: false
    projectType:
      type: string
      minLength: 1
      enum:
      - projects
    publicationType:
      type: string
      minLength: 1
      enum:
      - publications
    sampleTypeType:
      type: string
      minLength: 1
      enum:
      - sample_types
    sampleType:
      type: string
      minLength: 1
      enum:
      - samples
    sampleAttributeType:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/nonEmptyString"
        type:
          "$ref": "#/components/schemas/sampleAttributeTypeType"
        attributes:
          type: object
          properties:
            title:
              "$ref": "#/components/schemas/nonEmptyString"
            base_type:
              "$ref": "#/components/schemas/sampleAttributeBaseType"
            regexp:
              "$ref": "#/components/schemas/nonEmptyString"
          required:
          - title
          - base_type
          - regexp
          additionalProperties: false
        links:
          "$ref": "#/components/schemas/indexLinks"
      required:
      - id
      - type
      - attributes
      - links
    sampleAttributeBaseType:
      type: string
      minLength: 1
      enum:
      - Integer
      - Float
      - String
      - DateTime
      - Date
      - Text
      - Boolean
      - SeekStrain
      - SeekSample
      - CV
      - SeekDataFile
    sampleAttributeTypeType:
      type: string
      minLength: 1
      enum:
      - sample_attribute_types
    sopType:
      type: string
      minLength: 1
      enum:
      - sops
    studyType:
      type: string
      minLength: 1
      enum:
      - studies
    workflowType:
      type: string
      minLength: 1
      enum:
      - workflows
    assayPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/assayType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                assay_class:
                  type: object
                  properties:
                    key:
                      "$ref": "#/components/schemas/nonEmptyString"
                  required:
                  - key
                  additionalProperties: false
                assay_type:
                  type: object
                  properties:
                    uri:
                      "$ref": "#/components/schemas/uriString"
                  required:
                  - uri
                  additionalProperties: false
                technology_type:
                  type: object
                  properties:
                    uri:
                      "$ref": "#/components/schemas/uriString"
                  required:
                  - uri
                  additionalProperties: false
                policy:
                  "$ref": "#/components/schemas/policy"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPostList"
              required:
              - title
              - assay_class
              - assay_type
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                study:
                  "$ref": "#/components/schemas/singleReference"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                data_files:
                  "$ref": "#/components/schemas/multipleReferences"
                documents:
                  "$ref": "#/components/schemas/multipleReferences"
                models:
                  "$ref": "#/components/schemas/multipleReferences"
                sops:
                  "$ref": "#/components/schemas/multipleReferences"
                organisms:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - study
              additionalProperties: false
          required:
          - type
          - attributes
          - relationships
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: assays
          attributes:
            title: A Maximal experimental Assay
            assay_class:
              key: EXP
            assay_type:
              uri: http://jermontology.org/ontology/JERMOntology#Transcriptomics
            technology_type:
              uri: http://jermontology.org/ontology/JERMOntology#RNA-Seq
            other_creators: Anonymous creator
            description: A Western Blot Assay
            policy:
              access: download
              permissions:
              - resource:
                  id: '185'
                  type: projects
                access: manage
            tags:
            - alan
          relationships:
            study:
              data:
                id: '32'
                type: studies
            publications:
              data:
              - id: '11'
                type: publications
            organisms:
              data:
              - id: '9'
                type: organisms
            sops:
              data:
              - id: '17'
                type: sops
            data_files:
              data:
              - id: '9'
                type: data_files
            documents:
              data:
              - id: '9'
                type: documents
            creators:
              data:
              - id: '163'
                type: people
    assayPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/assayType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                assay_class:
                  type: object
                  properties:
                    key:
                      "$ref": "#/components/schemas/nonEmptyString"
                  required:
                  - key
                  additionalProperties: false
                assay_type:
                  type: object
                  properties:
                    uri:
                      "$ref": "#/components/schemas/uriString"
                  required:
                  - uri
                  additionalProperties: false
                technology_type:
                  type: object
                  properties:
                    uri:
                      "$ref": "#/components/schemas/uriString"
                  required:
                  - uri
                  additionalProperties: false
                policy:
                  "$ref": "#/components/schemas/policy"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPatchList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                study:
                  "$ref": "#/components/schemas/singleReference"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                data_files:
                  "$ref": "#/components/schemas/multipleReferences"
                documents:
                  "$ref": "#/components/schemas/multipleReferences"
                models:
                  "$ref": "#/components/schemas/multipleReferences"
                sops:
                  "$ref": "#/components/schemas/multipleReferences"
                organisms:
                  "$ref": "#/components/schemas/multipleReferences"
              additionalProperties: false
          required:
          - id
          - type
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: assays
          id: '42'
          attributes:
            title: A Maximal Assay
            assay_class:
              key: EXP
            assay_type:
              uri: http://jermontology.org/ontology/JERMOntology#Transcriptomics
            technology_type:
              uri: http://jermontology.org/ontology/JERMOntology#RNA-Seq
            other_creators: Anonymous creator
            description: A Western Blot Assay
            policy:
              access: download
              permissions:
              - resource:
                  id: '235'
                  type: projects
                access: manage
            tags: []
          relationships:
            study:
              data:
                id: '49'
                type: studies
            publications:
              data:
              - id: '16'
                type: publications
            organisms:
              data:
              - id: '14'
                type: organisms
            sops:
              data:
              - id: '22'
                type: sops
            data_files:
              data:
              - id: '14'
                type: data_files
            documents:
              data:
              - id: '14'
                type: documents
            creators:
              data:
              - id: '208'
                type: people
    collectionPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/collectionType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                license:
                  "$ref": "#/components/schemas/nullableLicense"
                policy:
                  "$ref": "#/components/schemas/policy"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPostList"
              required:
              - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - projects
              additionalProperties: false
          required:
          - type
          - attributes
          - relationships
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: collections
          attributes:
            title: A Maximal Collection
            description: This is the description
            tags:
            - tag1
            - tag2
            license: CC-BY-4.0
            other_creators: John Smith, Jane Smith
            policy:
              access: view
              permissions:
              - resource:
                  id: '528'
                  type: projects
                access: edit
          relationships:
            creators:
              data:
              - id: '474'
                type: people
            projects:
              data:
              - id: '528'
                type: projects
    collectionPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/collectionType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                license:
                  "$ref": "#/components/schemas/nullableLicense"
                policy:
                  "$ref": "#/components/schemas/policy"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPatchList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
              additionalProperties: false
          required:
          - id
          - type
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: collections
          id: '8'
          attributes:
            title: A Maximally Patched Collection
            description: A collection of very interesting things
            tags:
            - tag1
            - tag2
            - tag3
            license: CC-BY-4.0
            other_creators: John Smith, Jane Smith
            policy:
              access: no_access
              permissions:
              - resource:
                  id: '562'
                  type: projects
                access: edit
          relationships:
            creators:
              data:
              - id: '506'
                type: people
            projects:
              data:
              - id: '562'
                type: projects
    collectionItemPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/collectionItemType"
            attributes:
              type: object
              properties:
                comment:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                order:
                  "$ref": "#/components/schemas/nullableInteger"
              additionalProperties: false
            relationships:
              type: object
              properties:
                asset:
                  "$ref": "#/components/schemas/singleReference"
              required:
              - asset
              additionalProperties: false
          required:
          - type
          - relationships
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: collection_items
          attributes:
            comment: A fine addition to the collection indeed
            order: 3
          relationships:
            asset:
              data:
                id: '42'
                type: sops
    collectionItemPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/collectionItemType"
            attributes:
              type: object
              properties:
                comment:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                order:
                  "$ref": "#/components/schemas/nullableInteger"
              additionalProperties: false
            relationships:
              type: object
              properties:
                asset:
                  "$ref": "#/components/schemas/singleReference"
              required:
              - asset
              additionalProperties: false
          required:
          - id
          - type
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          id: '20'
          type: collection_items
          attributes:
            comment: A fine addition to the collection indeed!!!
            order: 5
          relationships:
            asset:
              data:
                id: '45'
                type: sops
    dataFilePost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/dataFileType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                license:
                  "$ref": "#/components/schemas/nullableLicense"
                policy:
                  "$ref": "#/components/schemas/policy"
                content_blobs:
                  "$ref": "#/components/schemas/contentBlobSlotsList"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPostList"
              required:
              - title
              - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                events:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - projects
              additionalProperties: false
          required:
          - type
          - attributes
          - relationships
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: data_files
          attributes:
            title: A Maximal Data File
            description: This is the description
            tags:
            - tag1
            - tag2
            license: CC-BY-4.0
            other_creators: John Smith, Jane Smith
            content_blobs:
            - original_filename: a_pdf_file.pdf
              content_type: application/pdf
            policy:
              access: download
              permissions:
              - resource:
                  id: '489'
                  type: projects
                access: edit
          relationships:
            creators:
              data:
              - id: '429'
                type: people
            projects:
              data:
              - id: '489'
                type: projects
            assays:
              data:
              - id: '76'
                type: assays
            publications:
              data:
              - id: '37'
                type: publications
            events:
              data:
              - id: '17'
                type: events
            workflows:
              data:
              - id: '15'
                type: workflows
    dataFilePatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/dataFileType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                license:
                  "$ref": "#/components/schemas/nullableLicense"
                policy:
                  "$ref": "#/components/schemas/policy"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPatchList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                events:
                  "$ref": "#/components/schemas/multipleReferences"
              additionalProperties: false
          required:
          - id
          - type
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: data_files
          id: '38'
          attributes:
            title: A Maximally Patched Data File
            description: Study of the Human Genome
            tags:
            - tag1
            - tag2
            - tag3
            license: CC-BY-4.0
            other_creators: John Smith, Jane Smith
            policy:
              access: no_access
              permissions:
              - resource:
                  id: '524'
                  type: projects
                access: edit
          relationships:
            creators:
              data:
              - id: '468'
                type: people
            projects:
              data:
              - id: '524'
                type: projects
            assays:
              data:
              - id: '81'
                type: assays
            publications:
              data:
              - id: '42'
                type: publications
            events:
              data:
              - id: '22'
                type: events
            workflows:
              data:
              - id: '20'
                type: workflows
    documentPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/documentType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                license:
                  "$ref": "#/components/schemas/nullableLicense"
                policy:
                  "$ref": "#/components/schemas/policy"
                content_blobs:
                  "$ref": "#/components/schemas/contentBlobSlotsList"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPostList"
              required:
              - title
              - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - projects
              additionalProperties: false
          required:
          - type
          - attributes
          - relationships
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: documents
          attributes:
            title: A Maximal Document
            description: This is the description
            tags:
            - tag1
            - tag2
            license: CC-BY-4.0
            other_creators: John Smith, Jane Smith
            content_blobs:
            - original_filename: a_pdf_file.pdf
              content_type: application/pdf
            policy:
              access: download
              permissions:
              - resource:
                  id: '724'
                  type: projects
                access: edit
          relationships:
            creators:
              data:
              - id: '670'
                type: people
            projects:
              data:
              - id: '724'
                type: projects
            assays:
              data:
              - id: '102'
                type: assays
            workflows:
              data:
              - id: '27'
                type: workflows
    documentPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/documentType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                license:
                  "$ref": "#/components/schemas/nullableLicense"
                policy:
                  "$ref": "#/components/schemas/policy"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPatchList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
              additionalProperties: false
          required:
          - id
          - type
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: documents
          id: '46'
          attributes:
            title: A Maximally Patched Document
            description: A report about the thing that happened
            tags:
            - tag1
            - tag2
            - tag3
            license: CC-BY-4.0
            other_creators: John Smith, Jane Smith
            policy:
              access: no_access
              permissions:
              - resource:
                  id: '754'
                  type: projects
                access: edit
          relationships:
            creators:
              data:
              - id: '698'
                type: people
            projects:
              data:
              - id: '754'
                type: projects
            assays:
              data:
              - id: '107'
                type: assays
            workflows:
              data:
              - id: '32'
                type: workflows
    eventPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/eventType"
            attributes:
              type: object
              properties:
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                url:
                  "$ref": "#/components/schemas/nullableUriString"
                address:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                city:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                country:
                  "$ref": "#/components/schemas/nullableCountryString"
                start_date:
                  "$ref": "#/components/schemas/dateTimeString"
                end_date:
                  "$ref": "#/components/schemas/nullableDateTimeString"
                policy:
                  "$ref": "#/components/schemas/policy"
              required:
              - title
              - start_date
              additionalProperties: false
            relationships:
              type: object
              properties:
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                data_files:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                presentations:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - projects
              additionalProperties: false
          required:
          - type
          - attributes
          - relationships
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: events
          attributes:
            title: A Maximal Event
            description: This is the description
            policy:
              access: view
              permissions:
              - resource:
                  id: '462'
                  type: projects
                access: edit
            url: http://www.example.com/events/123
            address: Sofienstr 2
            city: Heidelberg
            country: Germany
            start_date: '2017-01-01T00:20:00.000Z'
            end_date: '2017-01-01T00:22:00.000Z'
          relationships:
            projects:
              data:
              - id: '462'
                type: projects
            data_files:
              data:
              - id: '25'
                type: data_files
            presentations:
              data:
              - id: '9'
                type: presentations
            publications:
              data:
              - id: '31'
                type: publications
    eventPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/eventType"
            attributes:
              type: object
              properties:
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                url:
                  "$ref": "#/components/schemas/nullableUriString"
                address:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                city:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                country:
                  "$ref": "#/components/schemas/nullableCountryString"
                start_date:
                  "$ref": "#/components/schemas/dateTimeString"
                end_date:
                  "$ref": "#/components/schemas/dateTimeString"
                policy:
                  "$ref": "#/components/schemas/policy"
              additionalProperties: false
            relationships:
              type: object
              properties:
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                data_files:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                presentations:
                  "$ref": "#/components/schemas/multipleReferences"
              additionalProperties: false
          required:
          - id
          - type
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: events
          id: '16'
          attributes:
            title: A Maximally Patched Event
            description: A thing happening
            policy:
              access: no_access
              permissions:
              - resource:
                  id: '485'
                  type: projects
                access: edit
            url: http://www.example.com/events/123
            address: Sofienstr 2
            city: Heidelberg
            country: DE
            start_date: '2017-01-01T00:20:00.000Z'
            end_date: '2017-01-01T00:22:00.000Z'
          relationships:
            projects:
              data:
              - id: '485'
                type: projects
            data_files:
              data:
              - id: '30'
                type: data_files
            presentations:
              data:
              - id: '14'
                type: presentations
            publications:
              data:
              - id: '36'
                type: publications
    institutionPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/institutionType"
            attributes:
              type: object
              properties:
                avatar:
                  "$ref": "#/components/schemas/nullableUriString"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                country:
                  "$ref": "#/components/schemas/nullableCountryString"
                city:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                address:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                web_page:
                  "$ref": "#/components/schemas/nullableUriString"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPostList"
              required:
              - title
              additionalProperties: false
          required:
          - type
          - attributes
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: institutions
          attributes:
            title: Post Institution 849 Max
            country: United Kingdom
            city: Manchester
            address: Manchester Centre for Integrative Systems Biology, MIB/CEAS,
              The University of Manchester Faraday Building, Sackville Street, Manchester
              M60 1QD United Kingdom
            web_page: http://www.mib.ac.uk/
    institutionPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/institutionType"
            attributes:
              type: object
              properties:
                avatar:
                  "$ref": "#/components/schemas/nullableUriString"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                country:
                  "$ref": "#/components/schemas/nullableCountryString"
                city:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                address:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                web_page:
                  "$ref": "#/components/schemas/nullableUriString"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPatchList"
              additionalProperties: false
          required:
          - id
          - type
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: institutions
          id: '863'
          attributes:
            title: Patched institution
            web_page: http://my.institution.com
            country: Germany
            city: Heidelberg
            address: NoName street 23
    investigationPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/investigationType"
            attributes:
              type: object
              properties:
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                policy:
                  "$ref": "#/components/schemas/policy"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPostList"
              required:
              - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - projects
              additionalProperties: false
          required:
          - type
          - attributes
          - relationships
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: investigations
          attributes:
            title: A Maximal Investigation
            policy:
              access: download
              permissions:
              - resource:
                  type: projects
                  id: '243'
                access: manage
              - resource:
                  type: projects
                  id: '274'
                access: manage
            description: This is a more complex investigation
            other_creators: Max Blumenthal, Ed Snowden
          relationships:
            projects:
              data:
              - type: projects
                id: '243'
              - type: projects
                id: '274'
            publications:
              data:
              - id: '19'
                type: publications
            creators:
              data:
              - id: '214'
                type: people
    investigationPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/investigationType"
            attributes:
              type: object
              properties:
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                policy:
                  "$ref": "#/components/schemas/policy"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPatchList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
              additionalProperties: false
          required:
          - id
          - type
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: investigations
          id: '101'
          attributes:
            title: A Maximal Investigation
            policy:
              access: download
              permissions:
              - resource:
                  type: projects
                  id: '388'
                access: manage
              - resource:
                  type: projects
                  id: '419'
                access: manage
            description: This is a more complex investigation
            other_creators: Max Blumenthal, Ed Snowden
          relationships:
            projects:
              data:
              - type: projects
                id: '388'
              - type: projects
                id: '419'
            publications:
              data:
              - id: '30'
                type: publications
            creators:
              data:
              - id: '342'
                type: people
    modelPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/modelType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                license:
                  "$ref": "#/components/schemas/nullableLicense"
                policy:
                  "$ref": "#/components/schemas/policy"
                content_blobs:
                  "$ref": "#/components/schemas/contentBlobSlotsList"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                model_type:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                model_format:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                environment:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPostList"
              required:
              - title
              - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                organisms:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - projects
              additionalProperties: false
          required:
          - type
          - attributes
          - relationships
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: models
          attributes:
            title: A Maximal Model
            description: This is the description
            tags:
            - tag1
            - tag2
            license: CC-BY-4.0
            other_creators: John Smith, Jane Smith
            content_blobs:
            - original_filename: docs.pdf
              content_type: application/pdf
            - original_filename: the_model.xml
              content_type: application/xml
            policy:
              access: download
              permissions:
              - resource:
                  id: '660'
                  type: projects
                access: edit
            model_type: Linear equations
            model_format: SBML
            environment: JWS Online
            discussion_links:
            - label: Google
              url: http://google.com
          relationships:
            creators:
              data:
              - id: '604'
                type: people
            organisms:
              data:
              - id: '23'
                type: organisms
            projects:
              data:
              - id: '660'
                type: projects
            assays:
              data:
              - id: '94'
                type: assays
            publications:
              data:
              - id: '57'
                type: publications
    modelPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/modelType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                license:
                  "$ref": "#/components/schemas/nullableLicense"
                policy:
                  "$ref": "#/components/schemas/policy"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                model_type:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                model_format:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                environment:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPatchList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                organisms:
                  "$ref": "#/components/schemas/multipleReferences"
              additionalProperties: false
          required:
          - id
          - type
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: models
          id: '113'
          attributes:
            title: A Maximally Patched Model
            description: A simulation of a thing
            tags:
            - tag1
            - tag2
            - tag3
            license: CC-BY-4.0
            other_creators: John Smith, Jane Smith
            policy:
              access: no_access
              permissions:
              - resource:
                  id: '694'
                  type: projects
                access: edit
            model_type: Linear equations
            model_format: SBML
            environment: JWS Online
            discussion_links:
            - id: '59'
              url: http://yahoo.com
              label: Yahoo
            - label: fish
              url: https://fish.com
          relationships:
            creators:
              data:
              - id: '639'
                type: people
            organisms:
              data:
              - id: '28'
                type: organisms
            projects:
              data:
              - id: '694'
                type: projects
            assays:
              data:
              - id: '99'
                type: assays
            publications:
              data:
              - id: '62'
                type: publications
    personPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/peopleType"
            attributes:
              type: object
              properties:
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                first_name:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                last_name:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                email:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                web_page:
                  "$ref": "#/components/schemas/nullableUriString"
                orcid:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                expertise:
                  "$ref": "#/components/schemas/nonEmptyStringList"
                tools:
                  "$ref": "#/components/schemas/nonEmptyStringList"
                phone:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                skype_name:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
              required:
              - first_name
              - last_name
              additionalProperties: false
          required:
          - type
          - attributes
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: people
          attributes:
            first_name: Post
            last_name: Person702
            email: maxtest702@test.com
            description: A person with all possible details
            web_page: http://www.website.com
            orcid: https://orcid.org/0000-0001-9842-9718
            phone: 34-167-552266
            skype_name: postedSkype
            expertise:
            - modeling
            - programming
            tools:
            - CeriusII
            - Gromacs
            - Python
    personPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/peopleType"
            attributes:
              type: object
              properties:
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                first_name:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                last_name:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                email:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                web_page:
                  "$ref": "#/components/schemas/nullableUriString"
                orcid:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                expertise:
                  "$ref": "#/components/schemas/nonEmptyStringList"
                tools:
                  "$ref": "#/components/schemas/nonEmptyStringList"
                phone:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                skype_name:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
              additionalProperties: false
          required:
          - id
          - type
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          id: '716'
          type: people
          attributes:
            first_name: Patched
            last_name: Name
            email: patched@email.com
            description: A person with all possible details
            web_page: http://www.website.com
            orcid: https://orcid.org/0000-0001-9842-9718
            phone: 34-167-552266
            skype_name: patchedSkype
            expertise:
            - modeling
            - programming
            tools:
            - CeriusII
            - Gromacs
            - Python
    presentationPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/presentationType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                license:
                  "$ref": "#/components/schemas/nullableLicense"
                policy:
                  "$ref": "#/components/schemas/policy"
                content_blobs:
                  "$ref": "#/components/schemas/contentBlobSlotsList"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPostList"
              required:
              - title
              - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                events:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - projects
              additionalProperties: false
          required:
          - type
          - attributes
          - relationships
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: presentations
          attributes:
            title: A Maximal Presentation
            description: This is the description
            tags:
            - tag1
            - tag2
            license: CC-BY-4.0
            other_creators: John Smith, Jane Smith
            content_blobs:
            - original_filename: a_pdf_file.pdf
              content_type: application/pdf
            policy:
              access: download
              permissions:
              - resource:
                  id: '565'
                  type: projects
                access: edit
          relationships:
            creators:
              data:
              - id: '509'
                type: people
            projects:
              data:
              - id: '565'
                type: projects
            publications:
              data:
              - id: '45'
                type: publications
            events:
              data:
              - id: '23'
                type: events
            workflows:
              data:
              - id: '21'
                type: workflows
    presentationPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/presentationType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                license:
                  "$ref": "#/components/schemas/nullableLicense"
                policy:
                  "$ref": "#/components/schemas/policy"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPatchList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                events:
                  "$ref": "#/components/schemas/multipleReferences"
              additionalProperties: false
          required:
          - id
          - type
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: presentations
          id: '22'
          attributes:
            title: A Maximally Patched Presentation
            description: Presenting the research about the thing
            tags:
            - tag1
            - tag2
            - tag3
            license: CC-BY-4.0
            other_creators: John Smith, Jane Smith
            policy:
              access: no_access
              permissions:
              - resource:
                  id: '600'
                  type: projects
                access: edit
          relationships:
            creators:
              data:
              - id: '548'
                type: people
            projects:
              data:
              - id: '600'
                type: projects
            publications:
              data:
              - id: '50'
                type: publications
            events:
              data:
              - id: '28'
                type: events
            workflows:
              data:
              - id: '26'
                type: workflows
    programmePost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/programmeType"
            attributes:
              type: object
              properties:
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                web_page:
                  "$ref": "#/components/schemas/nullableUriString"
                funding_details:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                funding_codes:
                  "$ref": "#/components/schemas/tags"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPostList"
              required:
              - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                administrators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
              additionalProperties: false
          required:
          - type
          - attributes
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: programmes
          attributes:
            title: Post Programme Max
            description: A very exciting programme
            web_page: http://www.synbiochem.co.uk
            funding_details: Someone is funding this for me
            funding_codes:
            - BMBF
            - DFG
          relationships:
            projects:
              data:
              - id: '809'
                type: projects
            administrators:
              data:
              - id: '748'
                type: people
              - id: '749'
                type: people
    programmePatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/programmeType"
            attributes:
              type: object
              properties:
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                web_page:
                  "$ref": "#/components/schemas/nullableUriString"
                funding_details:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                funding_codes:
                  "$ref": "#/components/schemas/tags"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPatchList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                administrators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
              additionalProperties: false
          required:
          - id
          - type
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          id: '22'
          type: programmes
          attributes:
            title: Changed title
            description: A very exciting programme patched!
            web_page: http://www.synbiochem.co.uk
            funding_details: Someone ELSE is funding this for me
            funding_codes:
            - AVH
          relationships:
            projects:
              data:
              - id: '890'
                type: projects
            administrators:
              data:
              - id: '818'
                type: people
    projectPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/projectType"
            attributes:
              type: object
              properties:
                avatar:
                  "$ref": "#/components/schemas/nullableUriString"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                web_page:
                  "$ref": "#/components/schemas/nullableUriString"
                wiki_page:
                  "$ref": "#/components/schemas/nullableUriString"
                default_policy:
                  "$ref": "#/components/schemas/policy"
                default_license:
                  "$ref": "#/components/schemas/nullableLicense"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPostList"
              required:
              - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                programmes:
                  "$ref": "#/components/schemas/multipleReferences"
                organisms:
                  "$ref": "#/components/schemas/multipleReferences"
              additionalProperties: false
          required:
          - type
          - attributes
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: projects
          attributes:
            avatar: 
            title: Post Project Max
            description: A Taverna project
            web_page: http://www.taverna.org.uk
            wiki_page: http://www.mygrid.org.uk
            default_license: Other (Open)
            default_policy:
              access: no_access
              permissions:
              - resource:
                  id: '3'
                  type: people
                access: manage
              - resource:
                  id: '4'
                  type: projects
                access: download
              - resource:
                  id: '4'
                  type: institutions
                access: view
          relationships:
            programmes:
              data:
              - id: '1'
                type: programmes
            organisms:
              data:
              - id: '1'
                type: organisms
    projectPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/projectType"
            attributes:
              type: object
              properties:
                avatar:
                  "$ref": "#/components/schemas/nullableUriString"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                web_page:
                  "$ref": "#/components/schemas/nullableUriString"
                wiki_page:
                  "$ref": "#/components/schemas/nullableUriString"
                default_policy:
                  "$ref": "#/components/schemas/policy"
                default_license:
                  "$ref": "#/components/schemas/nullableLicense"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPatchList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                programmes:
                  "$ref": "#/components/schemas/multipleReferences"
                organisms:
                  "$ref": "#/components/schemas/multipleReferences"
              additionalProperties: false
          required:
          - id
          - type
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          id: '83'
          type: projects
          attributes:
            avatar: 
            title: Updated Project
            description: with a new description!
            web_page: http://www.taverna.org.uk
            wiki_page: http://www.mygrid.org.uk
            default_license: Other (Open)
            default_policy:
              access: no_access
              permissions:
              - resource:
                  id: '68'
                  type: people
                access: manage
              - resource:
                  id: '83'
                  type: projects
                access: download
              - resource:
                  id: '72'
                  type: institutions
                access: view
          relationships:
            programmes:
              data:
              - id: '6'
                type: programmes
            organisms:
              data:
              - id: '6'
                type: organisms
    samplePost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/sampleType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                attribute_map:
                  "$ref": "#/components/schemas/sampleAttributeMap"
                policy:
                  "$ref": "#/components/schemas/policy"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPostList"
              required:
              - attribute_map
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                people:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                data_files:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                sample_type:
                  "$ref": "#/components/schemas/singleReference"
              required:
              - projects
              - sample_type
              additionalProperties: false
          required:
          - type
          - attributes
          - relationships
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: samples
          attributes:
            attribute_map:
              the_title: Hello
              a_real_number: '2.6'
            tags: []
          relationships:
            sample_type:
              data:
                id: '3'
                type: sample_types
            creators:
              data:
              - id: '373'
                type: people
            projects:
              data:
              - id: '425'
                type: projects
    samplePatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/sampleType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                attribute_map:
                  "$ref": "#/components/schemas/sampleAttributeMap"
                policy:
                  "$ref": "#/components/schemas/policy"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPatchList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                people:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                data_files:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                sample_type:
                  "$ref": "#/components/schemas/singleReference"
              additionalProperties: false
          required:
          - type
          - id
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: samples
          id: '8'
          attributes:
            attribute_map:
              the_title: changed title
            tags: []
          relationships:
            projects:
              data:
              - id: '452'
                type: projects
    sampleTypePost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/sampleTypeType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                sample_attributes:
                  type: array
                  minItems: 1
                  uniqueItems: true
                  items:
                    "$ref": "#/components/schemas/sampleTypeSampleAttributePost"
              required:
              - title
              - sample_attributes
              additionalProperties: false
            relationships:
              type: object
              properties:
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - projects
              additionalProperties: false
          required:
          - type
          - attributes
          - relationships
          additionalProperties: false
      required:
      - data
      additionalProperties: false
    sampleTypePatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/sampleTypeType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                sample_attributes:
                  type: array
                  minItems: 1
                  uniqueItems: true
                  items:
                    "$ref": "#/components/schemas/sampleTypeSampleAttributePatch"
              additionalProperties: false
            relationships:
              type: object
              properties:
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
              additionalProperties: false
          required:
          - type
          - id
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: sample_types
          id: '23'
          attributes:
            title: This is a new title.
            sample_attributes:
            - id: '39'
              title: This is a new attribute title
              sample_attribute_type:
                title: String attribute type 16
            tags: []
          relationships:
            projects:
              data:
              - id: '908'
                type: projects
            assays:
              data:
              - id: '127'
                type: assays
    sampleTypeSampleAttributePost:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/nonEmptyString"
        title:
          "$ref": "#/components/schemas/nonEmptyString"
        description:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        pid:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        sample_attribute_type:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            title:
              "$ref": "#/components/schemas/nonEmptyString"
          oneOf:
          - required:
            - id
          - required:
            - title
        required:
          type: boolean
        pos:
          "$ref": "#/components/schemas/nullableInteger"
        unit:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        is_title:
          type: boolean
        sample_controlled_vocab_id:
          "$ref": "#/components/schemas/nullableInteger"
        linked_sample_type_id:
          "$ref": "#/components/schemas/nullableInteger"
      required:
      - title
      - sample_attribute_type
      additionalProperties: false
    sampleTypeSampleAttributePatch:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/nonEmptyString"
        title:
          "$ref": "#/components/schemas/nonEmptyString"
        description:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        pid:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        sample_attribute_type:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            title:
              "$ref": "#/components/schemas/nonEmptyString"
          oneOf:
          - required:
            - id
          - required:
            - title
        required:
          type: boolean
        pos:
          "$ref": "#/components/schemas/nullableInteger"
        unit:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        is_title:
          type: boolean
        sample_controlled_vocab_id:
          "$ref": "#/components/schemas/nullableInteger"
        linked_sample_type_id:
          "$ref": "#/components/schemas/nullableInteger"
        _destroy:
          type: boolean
      required: []
      additionalProperties: false
    sopPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/sopType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                license:
                  "$ref": "#/components/schemas/nullableLicense"
                policy:
                  "$ref": "#/components/schemas/policy"
                content_blobs:
                  "$ref": "#/components/schemas/contentBlobSlotsList"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPostList"
              required:
              - title
              - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - projects
              additionalProperties: false
          required:
          - type
          - attributes
          - relationships
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: sops
          attributes:
            title: A Maximal SOP
            description: This is the description
            tags:
            - tag1
            - tag2
            license: CC-BY-4.0
            other_creators: John Smith, Jane Smith
            content_blobs:
            - original_filename: a_pdf_file.pdf
              content_type: application/pdf
            policy:
              access: download
              permissions:
              - resource:
                  id: '86'
                  type: projects
                access: edit
          relationships:
            creators:
              data:
              - id: '71'
                type: people
            projects:
              data:
              - id: '86'
                type: projects
            assays:
              data:
              - id: '11'
                type: assays
            workflows:
              data:
              - id: '3'
                type: workflows
    sopPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/sopType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                license:
                  "$ref": "#/components/schemas/nullableLicense"
                policy:
                  "$ref": "#/components/schemas/policy"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPatchList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
              additionalProperties: false
          required:
          - id
          - type
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: sops
          id: '16'
          attributes:
            title: A Maximally Patched SOP
            description: Protocol
            tags:
            - tag1
            - tag2
            - tag3
            license: CC-BY-4.0
            other_creators: John Smith, Jane Smith
            policy:
              access: no_access
              permissions:
              - resource:
                  id: '176'
                  type: projects
                access: edit
          relationships:
            creators:
              data:
              - id: '155'
                type: people
            projects:
              data:
              - id: '176'
                type: projects
            assays:
              data:
              - id: '26'
                type: assays
            workflows:
              data:
              - id: '10'
                type: workflows
    studyPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/studyType"
            attributes:
              type: object
              properties:
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                experimentalists:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                policy:
                  "$ref": "#/components/schemas/policy"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPostList"
              required:
              - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                investigation:
                  "$ref": "#/components/schemas/singleReference"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - investigation
              additionalProperties: false
          required:
          - type
          - attributes
          - relationships
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: studies
          attributes:
            title: A Maximal Study
            description: The Study of many things
            experimentalists: Wet lab people
            other_creators: Marie Curie
            policy:
              access: download
              permissions:
              - resource:
                  id: '604'
                  type: projects
                access: view
          relationships:
            investigation:
              data:
                id: '113'
                type: investigations
            publications:
              data:
              - id: '51'
                type: publications
            creators:
              data:
              - id: '553'
                type: people
    studyPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/studyType"
            attributes:
              type: object
              properties:
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                experimentalists:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                policy:
                  "$ref": "#/components/schemas/policy"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPatchList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                investigation:
                  "$ref": "#/components/schemas/singleReference"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
              additionalProperties: false
          required:
          - id
          - type
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: studies
          id: '114'
          attributes:
            title: A Maximal Study
            description: The Study of many things
            experimentalists: Wet lab people
            other_creators: Marie Curie
            policy:
              access: download
              permissions:
              - resource:
                  id: '649'
                  type: projects
                access: view
          relationships:
            investigation:
              data:
                id: '132'
                type: investigations
            publications:
              data:
              - id: '56'
                type: publications
            creators:
              data:
              - id: '593'
                type: people
    workflowPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              "$ref": "#/components/schemas/workflowType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                edam_topics:
                  "$ref": "#/components/schemas/ontologyTermsList"
                edam_operations:
                  "$ref": "#/components/schemas/ontologyTermsList"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                workflow_class:
                  type: object
                  properties:
                    key:
                      "$ref": "#/components/schemas/nonEmptyString"
                  required:
                  - key
                license:
                  "$ref": "#/components/schemas/nullableLicense"
                policy:
                  "$ref": "#/components/schemas/policy"
                content_blobs:
                  "$ref": "#/components/schemas/contentBlobSlotsList"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPostList"
              required:
              - title
              - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                sops:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - projects
              additionalProperties: false
          required:
          - type
          - attributes
          - relationships
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: workflows
          attributes:
            title: A Maximal Workflow
            description: This is the description
            workflow_class:
              key: cwl
            tags:
            - tag1
            - tag2
            edam_operations:
            - label: Clustering
              identifier: http://edamontology.org/operation_3432
            - label: Expression correlation analysis
              identifier: http://edamontology.org/operation_3463
            edam_topics:
            - label: Biomedical science
              identifier: http://edamontology.org/topic_3344
            - label: Chemistry
              identifier: http://edamontology.org/topic_3314
            license: CC-BY-4.0
            other_creators: John Smith, Jane Smith
            content_blobs:
            - original_filename: rp2-to-rp2path.cwl
              content_type: application/x-yaml
            policy:
              access: download
              permissions:
              - resource:
                  id: '965'
                  type: projects
                access: edit
          relationships:
            creators:
              data:
              - id: '889'
                type: people
            projects:
              data:
              - id: '965'
                type: projects
            assays:
              data:
              - id: '130'
                type: assays
            publications:
              data:
              - id: '78'
                type: publications
            presentations:
              data:
              - id: '29'
                type: presentations
            data_files:
              data:
              - id: '55'
                type: data_files
            documents:
              data:
              - id: '64'
                type: documents
            sops:
              data:
              - id: '50'
                type: sops
    workflowPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/workflowType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                edam_topics:
                  "$ref": "#/components/schemas/ontologyTermsList"
                edam_operations:
                  "$ref": "#/components/schemas/ontologyTermsList"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                workflow_class:
                  type: object
                  properties:
                    key:
                      "$ref": "#/components/schemas/nonEmptyString"
                  required:
                  - key
                license:
                  "$ref": "#/components/schemas/nullableLicense"
                policy:
                  "$ref": "#/components/schemas/policy"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkPatchList"
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                sops:
                  "$ref": "#/components/schemas/multipleReferences"
              additionalProperties: false
          required:
          - id
          - type
          additionalProperties: false
      required:
      - data
      additionalProperties: false
      example:
        data:
          type: workflows
          id: '44'
          attributes:
            title: A Maximally Patched Workflow
            description: A workflow to do important stuff
            workflow_class:
              key: cwl
            tags:
            - tag1
            - tag2
            - tag3
            edam_operations:
            - label: Clustering
              identifier: http://edamontology.org/operation_3432
            - label: Correlation
              identifier: http://edamontology.org/operation_3465
            edam_topics:
            - label: Chemistry
              identifier: http://edamontology.org/topic_3314
            - label: Sample collections
              identifier: http://edamontology.org/topic_3277
            license: CC-BY-4.0
            other_creators: John Smith, Jane Smith
            policy:
              access: no_access
              permissions:
              - resource:
                  id: '996'
                  type: projects
                access: edit
          relationships:
            creators:
              data:
              - id: '918'
                type: people
            projects:
              data:
              - id: '996'
                type: projects
            assays:
              data:
              - id: '135'
                type: assays
            publications:
              data:
              - id: '83'
                type: publications
            presentations:
              data:
              - id: '32'
                type: presentations
            data_files:
              data:
              - id: '58'
                type: data_files
            documents:
              data:
              - id: '67'
                type: documents
            sops:
              data:
              - id: '53'
                type: sops
    okResponse:
      type: object
      properties:
        status:
          "$ref": "#/components/schemas/nonEmptyString"
      required:
      - status
      additionalProperties: false
      example:
        status: ok
    notImplementedResponse:
      type: object
      properties:
        errors:
          "$ref": "#/components/schemas/errorsArray"
    unprocessableEntityResponse:
      type: object
      properties:
        errors:
          "$ref": "#/components/schemas/errorsArray"
      example:
        errors:
        - detail: id specified by the PUT request does not match object-id in the
            JSON input
    badRequestResponse:
      type: object
      properties:
        errors:
          "$ref": "#/components/schemas/errorsArray"
      example:
        errors:
        - title: You do not have permission
          detail: No permission
    forbiddenResponse:
      type: object
      properties:
        errors:
          "$ref": "#/components/schemas/errorsArray"
    notFoundResponse:
      type: object
      properties:
        errors:
          "$ref": "#/components/schemas/errorsArray"
      example:
        errors:
        - title: Not found
          detail: Couldn't find Institution with 'id'=[70]
    indexResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 0
          uniqueItems: true
          items:
            "$ref": "#/components/schemas/anySkeleton"
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
        meta:
          "$ref": "#/components/schemas/baseMeta"
        links:
          "$ref": "#/components/schemas/indexLinks"
      required:
      - data
      - jsonapi
      - meta
      - links
      additionalProperties: false
    assayResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/assayType"
            attributes:
              type: object
              properties:
                snapshots:
                  "$ref": "#/components/schemas/snapshotsList"
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                assay_class:
                  type: object
                  properties:
                    title:
                      "$ref": "#/components/schemas/nonEmptyString"
                    key:
                      "$ref": "#/components/schemas/nonEmptyString"
                    description:
                      "$ref": "#/components/schemas/nullableNonEmptyString"
                  required:
                  - title
                  - key
                  additionalProperties: false
                assay_type:
                  type: object
                  properties:
                    label:
                      "$ref": "#/components/schemas/nullableNonEmptyString"
                    uri:
                      "$ref": "#/components/schemas/uriString"
                  required:
                  - uri
                  additionalProperties: false
                technology_type:
                  type: object
                  properties:
                    label:
                      "$ref": "#/components/schemas/nullableNonEmptyString"
                    uri:
                      "$ref": "#/components/schemas/nullableUriString"
                  required:
                  - uri
                  additionalProperties: false
                policy:
                  "$ref": "#/components/schemas/policy"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkList"
                position:
                  "$ref": "#/components/schemas/nullableInteger"
              required:
              - title
              - assay_class
              - assay_type
              - technology_type
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                submitter:
                  "$ref": "#/components/schemas/multipleReferences"
                organisms:
                  "$ref": "#/components/schemas/multipleReferences"
                people:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                investigation:
                  "$ref": "#/components/schemas/singleReference"
                study:
                  "$ref": "#/components/schemas/singleReference"
                data_files:
                  "$ref": "#/components/schemas/multipleReferences"
                documents:
                  "$ref": "#/components/schemas/multipleReferences"
                models:
                  "$ref": "#/components/schemas/multipleReferences"
                sops:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                placeholders:
                  "$ref": "#/components/schemas/multipleReferences"
                human_diseases:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - creators
              - submitter
              - organisms
              - people
              - projects
              - investigation
              - study
              - data_files
              - documents
              - models
              - sops
              - publications
              - placeholders
              - human_diseases
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/links"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    collectionResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/collectionType"
            attributes:
              "$ref": "#/components/schemas/collectionAttributes"
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                submitter:
                  "$ref": "#/components/schemas/multipleReferences"
                people:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                items:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - creators
              - submitter
              - people
              - projects
              - publications
              - items
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/collectionLinks"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        included:
          type: array
          minItems: 0
          uniqueItems: true
          items:
            "$ref": "#/components/schemas/collectionItem"
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    collectionItemResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/collectionItem"
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    collectionItemsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 0
          uniqueItems: true
          items:
            "$ref": "#/components/schemas/collectionItem"
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
        meta:
          "$ref": "#/components/schemas/baseMeta"
        links:
          "$ref": "#/components/schemas/indexLinks"
      required:
      - data
      - jsonapi
      - meta
      additionalProperties: false
    contentBlobResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/contentBlobType"
            attributes:
              type: object
              properties:
                original_filename:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                url:
                  "$ref": "#/components/schemas/nullableUriString"
                md5sum:
                  "$ref": "#/components/schemas/nullableMd5sumString"
                sha1sum:
                  "$ref": "#/components/schemas/nullableSha1sumString"
                content_type:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                size:
                  "$ref": "#/components/schemas/nullableInteger"
              required:
              - original_filename
              - url
              - md5sum
              - sha1sum
              - content_type
              - size
              additionalProperties: false
            relationships:
              type: object
              properties:
                asset:
                  "$ref": "#/components/schemas/singleReference"
              required:
              - asset
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/downloadableLinks"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    dataFileResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/dataFileType"
            attributes:
              "$ref": "#/components/schemas/contributedTypeAttributes"
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                submitter:
                  "$ref": "#/components/schemas/multipleReferences"
                people:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                investigations:
                  "$ref": "#/components/schemas/multipleReferences"
                studies:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                events:
                  "$ref": "#/components/schemas/multipleReferences"
                file_template:
                  "$ref": "#/components/schemas/singleReference"
                placeholder:
                  "$ref": "#/components/schemas/singleReference"
              required:
              - creators
              - submitter
              - people
              - projects
              - investigations
              - studies
              - assays
              - publications
              - events
              - file_template
              - placeholder
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/links"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    documentResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/documentType"
            attributes:
              "$ref": "#/components/schemas/contributedTypeAttributes"
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                submitter:
                  "$ref": "#/components/schemas/multipleReferences"
                people:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                investigations:
                  "$ref": "#/components/schemas/multipleReferences"
                studies:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - creators
              - submitter
              - people
              - projects
              - investigations
              - studies
              - assays
              - publications
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/links"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    eventResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/eventType"
            attributes:
              type: object
              properties:
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                url:
                  "$ref": "#/components/schemas/nullableUriString"
                address:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                city:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                country:
                  "$ref": "#/components/schemas/nullableCountryString"
                start_date:
                  "$ref": "#/components/schemas/dateTimeString"
                end_date:
                  "$ref": "#/components/schemas/nullableDateTimeString"
                policy:
                  "$ref": "#/components/schemas/policy"
              required:
              - title
              - description
              - start_date
              - end_date
              additionalProperties: false
            relationships:
              type: object
              properties:
                submitter:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                data_files:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                presentations:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - projects
              - data_files
              - publications
              - presentations
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/links"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    institutionResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/institutionType"
            attributes:
              type: object
              properties:
                avatar:
                  "$ref": "#/components/schemas/nullableUriString"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                country:
                  "$ref": "#/components/schemas/nullableCountryString"
                country_code:
                  "$ref": "#/components/schemas/nullableCountryCodeString"
                city:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                address:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                web_page:
                  "$ref": "#/components/schemas/nullableUriString"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkList"
              required:
              - title
              - country
              - city
              - address
              - web_page
              additionalProperties: false
            relationships:
              type: object
              properties:
                people:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - people
              - projects
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/links"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    investigationResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/investigationType"
            attributes:
              type: object
              properties:
                snapshots:
                  "$ref": "#/components/schemas/snapshotsList"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                policy:
                  "$ref": "#/components/schemas/policy"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkList"
                position:
                  "$ref": "#/components/schemas/nullableInteger"
              required:
              - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                submitter:
                  "$ref": "#/components/schemas/multipleReferences"
                people:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                studies:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                data_files:
                  "$ref": "#/components/schemas/multipleReferences"
                documents:
                  "$ref": "#/components/schemas/multipleReferences"
                models:
                  "$ref": "#/components/schemas/multipleReferences"
                sops:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - creators
              - submitter
              - people
              - projects
              - studies
              - assays
              - data_files
              - documents
              - models
              - sops
              - publications
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/links"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    modelResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/modelType"
            attributes:
              "$ref": "#/components/schemas/modelAttributes"
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                submitter:
                  "$ref": "#/components/schemas/multipleReferences"
                people:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                investigations:
                  "$ref": "#/components/schemas/multipleReferences"
                studies:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                organisms:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - creators
              - submitter
              - people
              - projects
              - investigations
              - studies
              - assays
              - publications
              - organisms
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/links"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    organismResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/organismType"
            attributes:
              type: object
              properties:
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                concept_uri:
                  "$ref": "#/components/schemas/nullableUriString"
                ontology_id:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
              required:
              - title
              - concept_uri
              - ontology_id
              additionalProperties: false
            relationships:
              type: object
              properties:
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                models:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - projects
              - assays
              - models
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/links"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    personResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/peopleType"
            attributes:
              type: object
              properties:
                avatar:
                  "$ref": "#/components/schemas/nullableUriString"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                first_name:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                last_name:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                web_page:
                  "$ref": "#/components/schemas/nullableUriString"
                orcid:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                mbox_sha1sum:
                  "$ref": "#/components/schemas/nullableSha1sumString"
                expertise:
                  "$ref": "#/components/schemas/nonEmptyStringList"
                tools:
                  "$ref": "#/components/schemas/nonEmptyStringList"
                phone:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                skype_name:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                login:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
              required:
              - title
              - first_name
              - last_name
              - mbox_sha1sum
              additionalProperties: false
            relationships:
              type: object
              properties:
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                institutions:
                  "$ref": "#/components/schemas/multipleReferences"
                investigations:
                  "$ref": "#/components/schemas/multipleReferences"
                studies:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                data_files:
                  "$ref": "#/components/schemas/multipleReferences"
                documents:
                  "$ref": "#/components/schemas/multipleReferences"
                models:
                  "$ref": "#/components/schemas/multipleReferences"
                sops:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                presentations:
                  "$ref": "#/components/schemas/multipleReferences"
                events:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - projects
              - institutions
              - investigations
              - studies
              - assays
              - data_files
              - documents
              - models
              - sops
              - publications
              - presentations
              - events
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/links"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    presentationResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/presentationType"
            attributes:
              "$ref": "#/components/schemas/contributedTypeAttributes"
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                submitter:
                  "$ref": "#/components/schemas/multipleReferences"
                people:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                investigations:
                  "$ref": "#/components/schemas/multipleReferences"
                studies:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                events:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - creators
              - submitter
              - people
              - projects
              - investigations
              - studies
              - assays
              - publications
              - events
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/links"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    programmeResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/programmeType"
            attributes:
              "$ref": "#/components/schemas/programmeDataType"
            relationships:
              type: object
              properties:
                administrators:
                  "$ref": "#/components/schemas/multipleReferences"
                people:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                institutions:
                  "$ref": "#/components/schemas/multipleReferences"
                investigations:
                  "$ref": "#/components/schemas/multipleReferences"
                studies:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                data_files:
                  "$ref": "#/components/schemas/multipleReferences"
                documents:
                  "$ref": "#/components/schemas/multipleReferences"
                models:
                  "$ref": "#/components/schemas/multipleReferences"
                sops:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                presentations:
                  "$ref": "#/components/schemas/multipleReferences"
                events:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - people
              - projects
              - institutions
              - investigations
              - studies
              - assays
              - data_files
              - documents
              - models
              - sops
              - publications
              - presentations
              - events
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/links"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    projectResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/projectType"
            attributes:
              type: object
              properties:
                avatar:
                  "$ref": "#/components/schemas/nullableUriString"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                web_page:
                  "$ref": "#/components/schemas/nullableUriString"
                wiki_page:
                  "$ref": "#/components/schemas/nullableUriString"
                default_policy:
                  "$ref": "#/components/schemas/policy"
                default_license:
                  "$ref": "#/components/schemas/nullableLicense"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkList"
                start_date:
                  "$ref": "#/components/schemas/nullableDateString"
                end_date:
                  "$ref": "#/components/schemas/nullableDateString"
                members:
                  "$ref": "#/components/schemas/projectMembersList"
                use_default_policy:
                  type: boolean
              required:
              - title
              - description
              - web_page
              - wiki_page
              additionalProperties: false
            relationships:
              type: object
              properties:
                organisms:
                  "$ref": "#/components/schemas/multipleReferences"
                people:
                  "$ref": "#/components/schemas/multipleReferences"
                institutions:
                  "$ref": "#/components/schemas/multipleReferences"
                investigations:
                  "$ref": "#/components/schemas/multipleReferences"
                studies:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                data_files:
                  "$ref": "#/components/schemas/multipleReferences"
                documents:
                  "$ref": "#/components/schemas/multipleReferences"
                models:
                  "$ref": "#/components/schemas/multipleReferences"
                sops:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                presentations:
                  "$ref": "#/components/schemas/multipleReferences"
                events:
                  "$ref": "#/components/schemas/multipleReferences"
                programmes:
                  "$ref": "#/components/schemas/multipleReferences"
                workflows:
                  "$ref": "#/components/schemas/multipleReferences"
                file_templates:
                  "$ref": "#/components/schemas/multipleReferences"
                placeholders:
                  "$ref": "#/components/schemas/multipleReferences"
                human_diseases:
                  "$ref": "#/components/schemas/multipleReferences"
                project_administrators:
                  "$ref": "#/components/schemas/multipleReferences"
                pals:
                  "$ref": "#/components/schemas/multipleReferences"
                asset_housekeepers:
                  "$ref": "#/components/schemas/multipleReferences"
                asset_gatekeepers:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - organisms
              - people
              - institutions
              - investigations
              - studies
              - assays
              - data_files
              - documents
              - models
              - sops
              - publications
              - presentations
              - events
              - programmes
              - file_templates
              - placeholders
              - human_diseases
              - project_administrators
              - pals
              - asset_housekeepers
              - asset_gatekeepers
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/links"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    publicationResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/publicationType"
            attributes:
              type: object
              properties:
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                journal:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                published_date:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                doi:
                  "$ref": "#/components/schemas/nullableUriString"
                pubmed_id:
                  "$ref": "#/components/schemas/nullableInteger"
                abstract:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                citation:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                editor:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                booktitle:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                publisher:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                url:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                link_to_pub:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                publication_type:
                  "$ref": "#/components/schemas/nonEmptyString"
                authors:
                  "$ref": "#/components/schemas/nonEmptyStringList"
                content_blobs:
                  "$ref": "#/components/schemas/optionalContentBlobsList"
                policy:
                  "$ref": "#/components/schemas/policy"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkList"
                misc_links:
                  "$ref": "#/components/schemas/assetLinkList"
                tags:
                  "$ref": "#/components/schemas/tags"
                latest_version:
                  type: number
                versions:
                  type: array
                  minItems: 1
                  uniqueItems: true
                  items:
                    "$ref": "#/components/schemas/version"
                version:
                  type: number
                revision_comments:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                created_at:
                  "$ref": "#/components/schemas/dateTimeString"
                updated_at:
                  "$ref": "#/components/schemas/dateTimeString"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
              required:
              - title
              - journal
              - published_date
              - pubmed_id
              - citation
              - publication_type
              - link_to_pub
              additionalProperties: false
            relationships:
              type: object
              properties:
                people:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                investigations:
                  "$ref": "#/components/schemas/multipleReferences"
                studies:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                data_files:
                  "$ref": "#/components/schemas/multipleReferences"
                models:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                presentations:
                  "$ref": "#/components/schemas/multipleReferences"
                events:
                  "$ref": "#/components/schemas/multipleReferences"
                workflows:
                  "$ref": "#/components/schemas/multipleReferences"
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                submitter:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - people
              - projects
              - investigations
              - studies
              - assays
              - data_files
              - models
              - publications
              - presentations
              - events
              - workflows
              - creators
              - submitter
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/links"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    sampleResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/sampleType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                created_at:
                  "$ref": "#/components/schemas/dateTimeString"
                updated_at:
                  "$ref": "#/components/schemas/dateTimeString"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                attribute_map:
                  "$ref": "#/components/schemas/sampleAttributeMap"
                policy:
                  "$ref": "#/components/schemas/policy"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkList"
              required:
              - title
              - attribute_map
              - tags
              - other_creators
              - created_at
              - updated_at
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                submitter:
                  "$ref": "#/components/schemas/multipleReferences"
                people:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                data_files:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                sample_type:
                  "$ref": "#/components/schemas/singleReference"
              required:
              - submitter
              - projects
              - people
              - creators
              - assays
              - data_files
              - sample_type
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/links"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    sampleTypeResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/sampleTypeType"
            attributes:
              type: object
              properties:
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                sample_attributes:
                  "$ref": "#/components/schemas/sampleTypeSampleAttributesResponse"
                tags:
                  "$ref": "#/components/schemas/tags"
              required:
              - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                submitter:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                samples:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - submitter
              - projects
              - assays
              - samples
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/links"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    sampleTypeSampleAttributesResponse:
      type: array
      minItems: 1
      uniqueItems: true
      items:
        "$ref": "#/components/schemas/sampleTypeSampleAttributeResponse"
    sampleTypeSampleAttributeResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/nonEmptyString"
        title:
          "$ref": "#/components/schemas/nonEmptyString"
        description:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        pid:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        sample_attribute_type:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            title:
              "$ref": "#/components/schemas/nonEmptyString"
            base_type:
              "$ref": "#/components/schemas/sampleAttributeBaseType"
            regexp:
              "$ref": "#/components/schemas/nonEmptyString"
          required: []
        required:
          type: boolean
        pos:
          "$ref": "#/components/schemas/nullableInteger"
        unit:
          "$ref": "#/components/schemas/nullableNonEmptyString"
        is_title:
          type: boolean
        sample_controlled_vocab_id:
          "$ref": "#/components/schemas/nullableInteger"
        linked_sample_type_id:
          "$ref": "#/components/schemas/nullableInteger"
      required:
      - title
      - sample_attribute_type
      additionalProperties: false
    searchResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 0
          uniqueItems: true
          items:
            "$ref": "#/components/schemas/anySkeleton"
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
        meta:
          "$ref": "#/components/schemas/baseMeta"
      required:
      - data
      - jsonapi
      - meta
      additionalProperties: false
    sopResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/sopType"
            attributes:
              "$ref": "#/components/schemas/contributedTypeAttributes"
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                submitter:
                  "$ref": "#/components/schemas/multipleReferences"
                people:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                investigations:
                  "$ref": "#/components/schemas/multipleReferences"
                studies:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - creators
              - submitter
              - people
              - projects
              - investigations
              - studies
              - assays
              - publications
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/links"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    studyResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/studyType"
            attributes:
              type: object
              properties:
                snapshots:
                  "$ref": "#/components/schemas/snapshotsList"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                experimentalists:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                policy:
                  "$ref": "#/components/schemas/policy"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkList"
                position:
                  "$ref": "#/components/schemas/nullableInteger"
              required:
              - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                submitter:
                  "$ref": "#/components/schemas/multipleReferences"
                people:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                investigation:
                  "$ref": "#/components/schemas/singleReference"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                data_files:
                  "$ref": "#/components/schemas/multipleReferences"
                documents:
                  "$ref": "#/components/schemas/multipleReferences"
                models:
                  "$ref": "#/components/schemas/multipleReferences"
                sops:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - creators
              - submitter
              - people
              - projects
              - investigation
              - assays
              - data_files
              - documents
              - models
              - sops
              - publications
              additionalProperties: false
            links:
              "$ref": "#/components/schemas/links"
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
    workflowResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              "$ref": "#/components/schemas/nonEmptyString"
            type:
              "$ref": "#/components/schemas/workflowType"
            attributes:
              type: object
              properties:
                tags:
                  "$ref": "#/components/schemas/tags"
                edam_topics:
                  "$ref": "#/components/schemas/ontologyTermsList"
                edam_operations:
                  "$ref": "#/components/schemas/ontologyTermsList"
                title:
                  "$ref": "#/components/schemas/nonEmptyString"
                description:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                workflow_class:
                  type: object
                  properties:
                    title:
                      "$ref": "#/components/schemas/nonEmptyString"
                    key:
                      "$ref": "#/components/schemas/nullableNonEmptyString"
                    description:
                      "$ref": "#/components/schemas/nullableNonEmptyString"
                  required:
                  - title
                  - key
                  additionalProperties: false
                license:
                  "$ref": "#/components/schemas/nullableLicense"
                latest_version:
                  type: number
                versions:
                  type: array
                  minItems: 1
                  uniqueItems: true
                  items:
                    oneOf:
                    - "$ref": "#/components/schemas/version"
                    - "$ref": "#/components/schemas/gitVersion"
                version:
                  type: number
                revision_comments:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                doi:
                  "$ref": "#/components/schemas/nullableNonEmptyString"
                created_at:
                  "$ref": "#/components/schemas/dateTimeString"
                updated_at:
                  "$ref": "#/components/schemas/dateTimeString"
                content_blobs:
                  "$ref": "#/components/schemas/contentBlobsList"
                policy:
                  "$ref": "#/components/schemas/policy"
                other_creators:
                  "$ref": "#/components/schemas/nullableOtherCreatorsString"
                creators:
                  "$ref": "#/components/schemas/assetsCreatorsList"
                internals:
                  type: object
                  properties:
                    inputs:
                      type: array
                      items:
                        "$ref": "#/components/schemas/workflowInput"
                    steps:
                      type: array
                      items:
                        "$ref": "#/components/schemas/workflowStep"
                    outputs:
                      type: array
                      items:
                        "$ref": "#/components/schemas/workflowOutput"
                discussion_links:
                  "$ref": "#/components/schemas/assetLinkList"
              required:
              - title
              - workflow_class
              - license
              - latest_version
              - versions
              - version
              - created_at
              - updated_at
              - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  "$ref": "#/components/schemas/multipleReferences"
                submitter:
                  "$ref": "#/components/schemas/multipleReferences"
                people:
                  "$ref": "#/components/schemas/multipleReferences"
                projects:
                  "$ref": "#/components/schemas/multipleReferences"
                investigations:
                  "$ref": "#/components/schemas/multipleReferences"
                studies:
                  "$ref": "#/components/schemas/multipleReferences"
                assays:
                  "$ref": "#/components/schemas/multipleReferences"
                publications:
                  "$ref": "#/components/schemas/multipleReferences"
                sops:
                  "$ref": "#/components/schemas/multipleReferences"
              required:
              - creators
              - submitter
              - people
              - projects
              - investigations
              - studies
              - assays
              - publications
              - sops
              additionalProperties: false
            links:
              type: object
              properties:
                self:
                  "$ref": "#/components/schemas/uriString"
                diagram:
                  "$ref": "#/components/schemas/uriString"
              required:
              - self
              additionalProperties: false
            meta:
              "$ref": "#/components/schemas/meta"
          required:
          - id
          - type
          - attributes
          - relationships
          - links
          - meta
          additionalProperties: false
        jsonapi:
          "$ref": "#/components/schemas/JsonApiVersion"
      required:
      - data
      - jsonapi
      additionalProperties: false
  responses:
    badRequest:
      description: Bad request
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/badRequestResponse"
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/forbiddenResponse"
    notFound:
      description: Not found
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/notFoundResponse"
    unprocessableEntity:
      description: Unprocessable entity
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/unprocessableEntityResponse"
    notImplemented:
      description: Not implemented
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/notImplementedResponse"
paths:
  "/search":
    parameters:
    - name: q
      in: query
      required: true
      description: 'The text to search for

        '
      schema:
        type: string
      example: lactate inhibition
    - name: search_type
      in: query
      required: false
      description: The type of resource to return
      schema:
        type: string
        enum:
        - assays
        - collections
        - data_files
        - events
        - institutions
        - investigations
        - models
        - people
        - presentations
        - programmes
        - projects
        - publications
        - sample_types
        - sops
        - studies
        - workflows
      example: data_files
    get:
      operationId: search
      summary: Search SEEK for a given query
      description: "<a name=\"searchOperation\"></a>**search** returns a list of references
        to resources\r\n\r\n* of the specified type\r\n* that are visible to the authenticated
        user, and\r\n* contain the specified test\r\n"
      tags:
      - search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/searchResponse"
              examples:
                response:
                  value:
                    data:
                    - id: '1213'
                      type: data_files
                      attributes:
                        title: Lactate flux inhibition data
                      links:
                        self: "/data_files/1213"
                    - id: '70'
                      type: data_files
                      attributes:
                        title: Characterization of kinetics of the lactate dehydrogenase
                          of S. pyogenes
                      links:
                        self: "/data_files/70"
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: https://fairdomhub.org
                      api_version: '0.1'
  "/assays":
    get:
      operationId: listAssays
      summary: List assays
      description: '<a name="listAssays"></a>The **listAssays** operation returns
        a JSON object containing a list of all the <a href="#assays">**Assays**</a>
        to which the authenticated user has access.

        '
      tags:
      - list
      - assays
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data: []
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/assays?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/assays?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/assays?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
    post:
      operationId: createAssay
      summary: Create a new assay
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="createAssay"></a>A **createAssay** operation creates a new instance of a <a href="#assays">**Assay**</a>. The instance is populated with the content of the body of the API call.

        The **createAssay** operation returns a JSON object representing the newly created <a href="#assays">**Assay**</a> and redirects to its URL.
      tags:
      - create
      - assays
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/assayPost"
        description: The assay to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/assayResponse"
              examples:
                response:
                  value:
                    data:
                      id: '28'
                      type: assays
                      attributes:
                        policy:
                          access: download
                          permissions:
                          - resource:
                              id: '185'
                              type: projects
                            access: manage
                        discussion_links: []
                        snapshots: []
                        title: A Maximal experimental Assay
                        description: A Western Blot Assay
                        other_creators: Anonymous creator
                        position: 
                        assay_class:
                          title: Experimental assay
                          key: EXP
                          description: An experimental assay class description
                        assay_type:
                          label: Transcriptomics
                          uri: http://jermontology.org/ontology/JERMOntology#Transcriptomics
                        technology_type:
                          label: Rna-seq
                          uri: http://jermontology.org/ontology/JERMOntology#RNA-Seq
                        tags:
                        - alan
                        creators:
                        - profile: "/people/163"
                          family_name: Last
                          given_name: Person138
                          affiliation: 'An Institution: 167'
                          orcid: 
                      relationships:
                        creators:
                          data:
                          - id: '163'
                            type: people
                        submitter:
                          data:
                          - id: '163'
                            type: people
                        organisms:
                          data:
                          - id: '9'
                            type: organisms
                        human_diseases:
                          data: []
                        people:
                          data:
                          - id: '163'
                            type: people
                        projects:
                          data:
                          - id: '185'
                            type: projects
                        investigation:
                          data:
                            id: '36'
                            type: investigations
                        study:
                          data:
                            id: '32'
                            type: studies
                        data_files:
                          data:
                          - id: '9'
                            type: data_files
                        models:
                          data: []
                        sops:
                          data:
                          - id: '17'
                            type: sops
                        publications:
                          data:
                          - id: '11'
                            type: publications
                        placeholders:
                          data: []
                        documents:
                          data:
                          - id: '9'
                            type: documents
                      links:
                        self: "/assays/28"
                      meta:
                        created: '2022-05-12T14:13:51.000Z'
                        modified: '2022-05-12T14:13:51.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: ac059da0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/assays/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The assay to be fetched, updated or deleted
      schema:
        type: integer
    patch:
      operationId: updateAssay
      summary: Update an assay
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updateAssay"></a>An **updateAssay** operation will modify the information held about the specified <a href="#assays">**Assay**</a>. This operation is only available if the authenticated user has access to the <a href="#assays">**Assay**</a>.

        The **updateAssay** operation returns a JSON object representing the modified <a href="#assays">**Assay**</a>.
      tags:
      - update
      - assays
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/assayPatch"
        description: The assay to patch
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/assayResponse"
              examples:
                response:
                  value:
                    data:
                      id: '42'
                      type: assays
                      attributes:
                        policy:
                          access: download
                          permissions:
                          - resource:
                              id: '235'
                              type: projects
                            access: manage
                        discussion_links: []
                        snapshots: []
                        title: A Maximal Assay
                        description: A Western Blot Assay
                        other_creators: Anonymous creator
                        position: 
                        assay_class:
                          title: Experimental assay
                          key: EXP
                          description: An experimental assay class description
                        assay_type:
                          label: Transcriptomics
                          uri: http://jermontology.org/ontology/JERMOntology#Transcriptomics
                        technology_type:
                          label: Rna-seq
                          uri: http://jermontology.org/ontology/JERMOntology#RNA-Seq
                        tags: []
                        creators:
                        - profile: "/people/208"
                          family_name: Last
                          given_name: Person178
                          affiliation: 'An Institution: 212'
                          orcid: 
                      relationships:
                        creators:
                          data:
                          - id: '208'
                            type: people
                        submitter:
                          data:
                          - id: '208'
                            type: people
                        organisms:
                          data:
                          - id: '14'
                            type: organisms
                        human_diseases:
                          data: []
                        people:
                          data:
                          - id: '208'
                            type: people
                        projects:
                          data:
                          - id: '235'
                            type: projects
                        investigation:
                          data:
                            id: '53'
                            type: investigations
                        study:
                          data:
                            id: '49'
                            type: studies
                        data_files:
                          data:
                          - id: '14'
                            type: data_files
                        models:
                          data: []
                        sops:
                          data:
                          - id: '22'
                            type: sops
                        publications:
                          data:
                          - id: '16'
                            type: publications
                        placeholders:
                          data: []
                        documents:
                          data:
                          - id: '14'
                            type: documents
                      links:
                        self: "/assays/42"
                      meta:
                        created: '2022-05-12T14:13:57.000Z'
                        modified: '2022-05-12T14:13:57.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: afae3a70-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    get:
      operationId: readAssay
      summary: Fetch an assay
      description: |
        <a name="readAssay"></a>A **readAssay** operation will return information about the <a href="#assays">Assay</a> identified, provided the authenticated user has access to it.

        The **readAssay** operation returns a JSON object representing the <a href="#assays">**Assay**</a>.
      tags:
      - read
      - assays
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/assayResponse"
              examples:
                response:
                  value:
                    data:
                      id: '41'
                      type: assays
                      attributes:
                        policy:
                          access: no_access
                          permissions: []
                        discussion_links:
                        - id: '20'
                          label: Slack
                          url: http://www.slack.com/
                        snapshots: []
                        title: A Maximal Modelling Assay
                        description: A Western Blot Assay
                        other_creators: Anonymous creator
                        position: 
                        assay_class:
                          title: Modelling analysis
                          key: MODEL
                          description: 
                        assay_type:
                          label: Model analysis type
                          uri: http://jermontology.org/ontology/JERMOntology#Model_analysis_type
                        technology_type:
                          label: 
                          uri: 
                        tags: []
                        creators:
                        - profile: "/people/206"
                          family_name: One
                          given_name: Some
                          affiliation: University of Somewhere
                          orcid: 
                      relationships:
                        creators:
                          data:
                          - id: '206'
                            type: people
                        submitter:
                          data:
                          - id: '195'
                            type: people
                        organisms:
                          data:
                          - id: '13'
                            type: organisms
                        human_diseases:
                          data: []
                        people:
                          data:
                          - id: '195'
                            type: people
                          - id: '206'
                            type: people
                        projects:
                          data:
                          - id: '221'
                            type: projects
                        investigation:
                          data:
                            id: '51'
                            type: investigations
                        study:
                          data:
                            id: '47'
                            type: studies
                        data_files:
                          data:
                          - id: '13'
                            type: data_files
                        models:
                          data:
                          - id: '37'
                            type: models
                        sops:
                          data:
                          - id: '21'
                            type: sops
                        publications:
                          data:
                          - id: '15'
                            type: publications
                        placeholders:
                          data: []
                        documents:
                          data:
                          - id: '13'
                            type: documents
                      links:
                        self: "/assays/41"
                      meta:
                        created: '2022-05-12T14:13:56.000Z'
                        modified: '2022-05-12T14:13:56.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: af63c0b0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    delete:
      operationId: deleteAssay
      summary: Delete an assay
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: "<a name=\"deleteAssay\"></a>A **deleteAssay** operation will delete
        the specified <a href=\"#assays\">**Assay**</a>, if the authenticated user
        has sufficient access to it.\n\n"
      tags:
      - delete
      - assays
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/collections":
    get:
      operationId: listCollections
      summary: List collections
      description: '<a name="listCollections"></a>The **listCollections** operation
        returns a JSON object containing a list of all the <a href="#collections">**Collections**</a>
        to which the authenticated user has access.

        '
      tags:
      - list
      - collections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data:
                    - id: '5'
                      type: collections
                      attributes:
                        title: A Maximal Collection
                      links:
                        self: "/collections/5"
                    - id: '4'
                      type: collections
                      attributes:
                        title: A Minimal Collection
                      links:
                        self: "/collections/4"
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/collections?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/collections?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/collections?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
    post:
      operationId: createCollection
      summary: Create a new collection
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="createCollection"></a>A **createCollection** operation creates a new, empty <a href="#collections">**Collection**</a>.

        The **createCollection** operation returns a JSON object representing the newly created <a href="#collections">**Collection**</a> and redirects to its URL.
      tags:
      - create
      - collections
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/collectionPost"
        description: The collection to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/collectionResponse"
              examples:
                response:
                  value:
                    data:
                      id: '2'
                      type: collections
                      attributes:
                        policy:
                          access: view
                          permissions:
                          - resource:
                              id: '528'
                              type: projects
                            access: edit
                        discussion_links: []
                        title: A Maximal Collection
                        license: CC-BY-4.0
                        description: This is the description
                        tags:
                        - tag1
                        - tag2
                        created_at: '2022-05-12T14:14:32.000Z'
                        updated_at: '2022-05-12T14:14:32.000Z'
                        creators:
                        - profile: "/people/474"
                          family_name: Last
                          given_name: Person405
                          affiliation: 'An Institution: 486'
                          orcid: 
                        other_creators: John Smith, Jane Smith
                      relationships:
                        creators:
                          data:
                          - id: '474'
                            type: people
                        submitter:
                          data:
                          - id: '473'
                            type: people
                        people:
                          data:
                          - id: '473'
                            type: people
                          - id: '474'
                            type: people
                        projects:
                          data:
                          - id: '528'
                            type: projects
                        publications:
                          data: []
                        items:
                          data: []
                      links:
                        self: "/collections/2"
                        items: "/collections/2/items"
                      meta:
                        created: '2022-05-12T14:14:32.000Z'
                        modified: '2022-05-12T14:14:32.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: c46d3700-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/collections/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The collection to fetch
      schema:
        type: integer
      example: 1152
    get:
      operationId: readCollection
      summary: Fetch a collection
      description: |
        <a name="readCollection"></a>A **readCollection** operation will return information about the <a href="#collections">Collection</a> identified, provided the authenticated user has access to it.

        The **readCollection** operation returns a JSON object representing the <a href="#collections">**Collection**</a>.
      tags:
      - read
      - collections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/collectionResponse"
              examples:
                response:
                  value:
                    data:
                      id: '7'
                      type: collections
                      attributes:
                        policy:
                          access: download
                          permissions: []
                        discussion_links:
                        - id: '46'
                          label: Slack
                          url: http://www.slack.com/
                        title: A Maximal Collection
                        license: 
                        description: A collection of very interesting things
                        tags:
                        - Collection-tag1
                        - Collection-tag2
                        - Collection-tag3
                        - Collection-tag4
                        - Collection-tag5
                        created_at: '2022-05-12T14:14:34.000Z'
                        updated_at: '2022-05-12T14:14:35.000Z'
                        creators:
                        - profile: "/people/496"
                          family_name: One
                          given_name: Some
                          affiliation: University of Somewhere
                          orcid: 
                        other_creators: Joe Bloggs
                      relationships:
                        creators:
                          data:
                          - id: '496'
                            type: people
                        submitter:
                          data:
                          - id: '497'
                            type: people
                        people:
                          data:
                          - id: '496'
                            type: people
                          - id: '497'
                            type: people
                        projects:
                          data:
                          - id: '554'
                            type: projects
                        publications:
                          data:
                          - id: '44'
                            type: publications
                        items:
                          data:
                          - id: '7'
                            type: collection_items
                          - id: '8'
                            type: collection_items
                          - id: '9'
                            type: collection_items
                          - id: '10'
                            type: collection_items
                          - id: '11'
                            type: collection_items
                          - id: '12'
                            type: collection_items
                      links:
                        self: "/collections/7"
                        items: "/collections/7/items"
                      meta:
                        created: '2022-05-12T14:14:34.000Z'
                        modified: '2022-05-12T14:14:35.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: c608e4f0-b42b-013a-0f20-0a81884ed284
                    included:
                    - id: '7'
                      type: collection_items
                      attributes:
                        comment: Readme!
                        order: 1
                      relationships:
                        collection:
                          data:
                            id: '7'
                            type: collections
                        asset:
                          data:
                            id: '33'
                            type: documents
                          meta:
                            title: Readme
                      links:
                        self: "/collections/7/items/7"
                      meta:
                        created: '2022-05-12T14:14:34.000Z'
                        modified: '2022-05-12T14:14:34.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                    - id: '8'
                      type: collection_items
                      attributes:
                        comment: Secret info
                        order: 2
                      relationships:
                        collection:
                          data:
                            id: '7'
                            type: collections
                      links:
                        self: "/collections/7/items/8"
                      meta:
                        created: '2022-05-12T14:14:35.000Z'
                        modified: '2022-05-12T14:14:35.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                    - id: '9'
                      type: collection_items
                      attributes:
                        comment: The protocol
                        order: 3
                      relationships:
                        collection:
                          data:
                            id: '7'
                            type: collections
                        asset:
                          data:
                            id: '34'
                            type: sops
                          meta:
                            title: Protocol
                      links:
                        self: "/collections/7/items/9"
                      meta:
                        created: '2022-05-12T14:14:35.000Z'
                        modified: '2022-05-12T14:14:35.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                    - id: '10'
                      type: collection_items
                      attributes:
                        comment: Data 1
                        order: 4
                      relationships:
                        collection:
                          data:
                            id: '7'
                            type: collections
                        asset:
                          data:
                            id: '42'
                            type: data_files
                          meta:
                            title: Data 1
                      links:
                        self: "/collections/7/items/10"
                      meta:
                        created: '2022-05-12T14:14:35.000Z'
                        modified: '2022-05-12T14:14:35.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                    - id: '11'
                      type: collection_items
                      attributes:
                        comment: Data 2
                        order: 5
                      relationships:
                        collection:
                          data:
                            id: '7'
                            type: collections
                        asset:
                          data:
                            id: '43'
                            type: data_files
                          meta:
                            title: Data 2
                      links:
                        self: "/collections/7/items/11"
                      meta:
                        created: '2022-05-12T14:14:35.000Z'
                        modified: '2022-05-12T14:14:35.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                    - id: '12'
                      type: collection_items
                      attributes:
                        comment: Bad data
                        order: 6
                      relationships:
                        collection:
                          data:
                            id: '7'
                            type: collections
                      links:
                        self: "/collections/7/items/12"
                      meta:
                        created: '2022-05-12T14:14:35.000Z'
                        modified: '2022-05-12T14:14:35.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    patch:
      operationId: updateCollection
      summary: Update a collection
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updateCollection"></a>An **updateCollection** operation will modify the information held about the specified <a href="#collections">**Collection**</a>. This operation is only available if the authenticated user has access to the <a href="#collections">**Collection**</a>.

        To add and remove things from the collection, see the <a href="#collection_items">**Collection Item**</a> API.

        The **updateCollection** operation returns a JSON object representing the modified <a href="#collections">**Collection**</a>.
      tags:
      - update
      - collections
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/collectionPatch"
        description: The collection to patch.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/collectionResponse"
              examples:
                response:
                  value:
                    data:
                      id: '8'
                      type: collections
                      attributes:
                        policy:
                          access: no_access
                          permissions:
                          - resource:
                              id: '562'
                              type: projects
                            access: edit
                        discussion_links: []
                        title: A Maximally Patched Collection
                        license: CC-BY-4.0
                        description: A collection of very interesting things
                        tags:
                        - tag1
                        - tag2
                        - tag3
                        created_at: '2022-05-12T14:14:36.000Z'
                        updated_at: '2022-05-12T14:14:36.000Z'
                        creators:
                        - profile: "/people/506"
                          family_name: Last
                          given_name: Person432
                          affiliation: 'An Institution: 518'
                          orcid: 
                        other_creators: John Smith, Jane Smith
                      relationships:
                        creators:
                          data:
                          - id: '506'
                            type: people
                        submitter:
                          data:
                          - id: '505'
                            type: people
                        people:
                          data:
                          - id: '505'
                            type: people
                          - id: '506'
                            type: people
                        projects:
                          data:
                          - id: '562'
                            type: projects
                        publications:
                          data: []
                        items:
                          data: []
                      links:
                        self: "/collections/8"
                        items: "/collections/8/items"
                      meta:
                        created: '2022-05-12T14:14:36.000Z'
                        modified: '2022-05-12T14:14:36.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: c6c654e0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    delete:
      operationId: deleteCollection
      summary: Delete a collection
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: "<a name=\"deleteCollection\"></a>A **deleteCollection** operation
        will delete the specified <a href=\"#collections\">**Collection**</a>, if
        the authenticated user has sufficient access to it.\n\n"
      tags:
      - delete
      - collections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/collections/{collection_id}/items":
    parameters:
    - name: collection_id
      in: path
      required: true
      description: The ID of the collection
      schema:
        type: integer
      example: 123
    get:
      operationId: listCollectionItems
      summary: List translation items in a collection
      description: '<a name="listCollectionItems"></a>The **listCollectionItems**
        operation returns a JSON object containing a list of all the <a href="#collection_items">**Collection
        Items**</a> in the specified collection.

        '
      tags:
      - list
      - collections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/collectionItemsResponse"
              examples:
                response:
                  value:
                    data: []
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/collections/10/items"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
    post:
      operationId: createCollectionItem
      summary: Add a new item to a collection
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="createCollectionItem"></a>A **createCollectionItem** operation adds a <a href="#collectionItem">**Collection Item**</a> to an existing <a href="#collections">**Collection**</a>, providing the authenticated user has sufficient access to the collection.

        The **createCollectionItem** operation returns a JSON object representing the newly created <a href="#collection_items">**Collection Item**</a> and redirects to its URL.
      tags:
      - create
      - collections
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/collectionItemPost"
        description: The collection item to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/collectionItemResponse"
              examples:
                response:
                  value:
                    data:
                      id: '14'
                      type: collection_items
                      attributes:
                        comment: A fine addition to the collection indeed
                        order: 3
                      relationships:
                        collection:
                          data:
                            id: '9'
                            type: collections
                        asset:
                          data:
                            id: '42'
                            type: sops
                          meta:
                            title: This Sop
                      links:
                        self: "/collections/9/items/14"
                      meta:
                        created: '2022-05-12T14:15:04.000Z'
                        modified: '2022-05-12T14:15:04.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/collections/{collection_id}/items/{id}":
    parameters:
    - name: collection_id
      in: path
      required: true
      description: The ID of the collection
      schema:
        type: integer
      example: 123
    - name: id
      in: path
      required: true
      description: The ID of the item in the collection
      schema:
        type: integer
      example: 1152
    get:
      operationId: readCollectionItem
      summary: Fetch an item from a collection
      description: |
        <a name="readCollectionItem"></a>A **readCollectionItem** operation will return information about the <a href="#collection_items">CollectionItem</a> identified, provided the authenticated user has access to it.

        The **readCollectionItem** operation returns a JSON object representing the <a href="#collection_items">**Collection Item**</a>.
      tags:
      - read
      - collections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/collectionItemResponse"
              examples:
                response:
                  value:
                    data:
                      id: '19'
                      type: collection_items
                      attributes:
                        comment: A document
                        order: 1
                      relationships:
                        collection:
                          data:
                            id: '14'
                            type: collections
                        asset:
                          data:
                            id: '57'
                            type: documents
                          meta:
                            title: This Document
                      links:
                        self: "/collections/14/items/19"
                      meta:
                        created: '2022-05-12T14:15:05.000Z'
                        modified: '2022-05-12T14:15:05.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    patch:
      operationId: updateCollectionItem
      summary: Update an item in a collection
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updateCollectionItem"></a>An **updateCollectionItem** operation will modify the information held about the specified <a href="#collection_items">**CollectionItem**</a>. This operation is only available if the authenticated user has access to the <a href="#collections">**Collection**</a>.

        The **updateCollectionItem** operation returns a JSON object representing the modified <a href="#collection_items">**Collection Item**</a>.
      tags:
      - update
      - collections
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/collectionItemPatch"
        description: The collection item to patch.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/collectionItemResponse"
              examples:
                response:
                  value:
                    data:
                      id: '20'
                      type: collection_items
                      attributes:
                        comment: A fine addition to the collection indeed!!!
                        order: 5
                      relationships:
                        collection:
                          data:
                            id: '15'
                            type: collections
                        asset:
                          data:
                            id: '45'
                            type: sops
                          meta:
                            title: This Sop
                      links:
                        self: "/collections/15/items/20"
                      meta:
                        created: '2022-05-12T14:15:05.000Z'
                        modified: '2022-05-12T14:15:06.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    delete:
      operationId: deleteCollectionItem
      summary: Remove an item from a collection
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: "<a name=\"deleteCollectionItem\"></a>A **deleteCollectionItem**
        operation will remove the specified <a href=\"#collection_items\">**Collection
        Item**</a> from its associated <a href=\"#collections\">**Collection**</a>,
        if the authenticated user has sufficient access to the collection.\n\n"
      tags:
      - delete
      - collections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/data_files":
    get:
      operationId: listDataFiles
      summary: List data files
      description: '<a name="listDataFiles"></a>The **listDataFiles** operation returns
        a JSON object containing a list of all the <a href="#dataFiles">**DataFiles**</a>
        to which the authenticated user has access.

        '
      tags:
      - list
      - dataFiles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data: []
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/data_files?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/data_files?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/data_files?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
    post:
      operationId: createDataFile
      summary: Create a new data file
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="createDataFile"></a>A **createDataFile** operation creates a new instance of a <a href="#dataFiles">**DataFile**</a>. The instance is populated with the content of the body of the API call.

        Please note that when linking a data file to a workflow it currently isn't possible to define the relationship type (e.g test data, example data) through the api.

        The **createDataFile** operation returns a JSON object representing the newly created <a href="#dataFiles">**DataFile**</a> and redirects to its URL.
      tags:
      - create
      - dataFiles
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/dataFilePost"
        description: The dataFile to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/dataFileResponse"
              examples:
                response:
                  value:
                    data:
                      id: '32'
                      type: data_files
                      attributes:
                        policy:
                          access: download
                          permissions:
                          - resource:
                              id: '489'
                              type: projects
                            access: edit
                        discussion_links: []
                        title: A Maximal Data File
                        license: CC-BY-4.0
                        description: This is the description
                        latest_version: 1
                        tags:
                        - tag1
                        - tag2
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/data_files/32?version=1
                          doi: 
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:14:26.000Z'
                        updated_at: '2022-05-12T14:14:26.000Z'
                        doi: 
                        content_blobs:
                        - original_filename: a_pdf_file.pdf
                          url: 
                          md5sum: 
                          sha1sum: 
                          content_type: application/pdf
                          link: http://localhost:3000/data_files/32/content_blobs/191
                          size: 
                        creators:
                        - profile: "/people/429"
                          family_name: Last
                          given_name: Person366
                          affiliation: 'An Institution: 441'
                          orcid: 
                        other_creators: John Smith, Jane Smith
                      relationships:
                        creators:
                          data:
                          - id: '429'
                            type: people
                        submitter:
                          data:
                          - id: '428'
                            type: people
                        people:
                          data:
                          - id: '428'
                            type: people
                          - id: '429'
                            type: people
                        projects:
                          data:
                          - id: '489'
                            type: projects
                        investigations:
                          data:
                          - id: '105'
                            type: investigations
                        studies:
                          data:
                          - id: '89'
                            type: studies
                        assays:
                          data:
                          - id: '76'
                            type: assays
                        publications:
                          data:
                          - id: '37'
                            type: publications
                        events:
                          data:
                          - id: '17'
                            type: events
                        workflows:
                          data:
                          - id: '15'
                            type: workflows
                        placeholder:
                          data: 
                        file_template:
                          data: 
                      links:
                        self: "/data_files/32?version=1"
                      meta:
                        created: '2022-05-12T14:14:26.000Z'
                        modified: '2022-05-12T14:14:26.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: c1514df0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/data_files/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The data file to fetch
      schema:
        type: integer
      example: 1152
    get:
      operationId: readDataFile
      summary: Fetch a data file
      description: |
        <a name="readDataFile"></a>A **readDataFile** operation will return information about the <a href="#dataFiles">DataFile</a> identified, provided the authenticated user has access to it.

        Please note that currently the type of relationship between a linked workflow and data file (e.g. test or example data) isn't described through the api.

        The **readDataFile** operation returns a JSON object representing the <a href="#dataFiles">**DataFile**</a>.
      parameters:
      - name: version
        in: query
        required: true
        description: The version of the data file to get
        schema:
          type: integer
        example: 2
      tags:
      - read
      - dataFiles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/dataFileResponse"
              examples:
                response:
                  value:
                    data:
                      id: '37'
                      type: data_files
                      attributes:
                        policy:
                          access: no_access
                          permissions: []
                        discussion_links:
                        - id: '44'
                          label: Slack
                          url: http://www.slack.com/
                        title: A Maximal DataFile
                        license: 
                        description: Results - Sampling conformations of ATP-Mg inside
                          the binding pocket
                        latest_version: 1
                        tags:
                        - DataFile-tag1
                        - DataFile-tag2
                        - DataFile-tag3
                        - DataFile-tag4
                        - DataFile-tag5
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/data_files/37?version=1
                          doi: 
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:14:30.000Z'
                        updated_at: '2022-05-12T14:14:30.000Z'
                        doi: 
                        content_blobs:
                        - original_filename: a_pdf_file.pdf
                          url: 
                          md5sum: 565ae8a7a743c3bfd9f15c69647f5b8b
                          sha1sum: b9d2148740050b7f37975edd0fb97faa508ff767
                          content_type: application/pdf
                          link: http://localhost:3000/data_files/37/content_blobs/202
                          size: 8827
                        creators:
                        - profile: "/people/464"
                          family_name: One
                          given_name: Some
                          affiliation: University of Somewhere
                          orcid: 
                        other_creators: Blogs, Joe
                      relationships:
                        creators:
                          data:
                          - id: '464'
                            type: people
                        submitter:
                          data:
                          - id: '465'
                            type: people
                        people:
                          data:
                          - id: '464'
                            type: people
                          - id: '465'
                            type: people
                        projects:
                          data:
                          - id: '522'
                            type: projects
                        investigations:
                          data:
                          - id: '109'
                            type: investigations
                        studies:
                          data:
                          - id: '93'
                            type: studies
                        assays:
                          data:
                          - id: '80'
                            type: assays
                        publications:
                          data:
                          - id: '41'
                            type: publications
                        events:
                          data:
                          - id: '21'
                            type: events
                        workflows:
                          data:
                          - id: '19'
                            type: workflows
                        placeholder:
                          data: 
                        file_template:
                          data: 
                      links:
                        self: "/data_files/37?version=1"
                      meta:
                        created: '2022-05-12T14:14:30.000Z'
                        modified: '2022-05-12T14:14:30.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: c380b160-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    patch:
      operationId: updateDataFile
      summary: Update a data file
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updateDataFile"></a>An **updateDataFile** operation will modify the information held about the specified <a href="#dataFiles">**DataFile**</a>. This operation is only available if the authenticated user has access to the <a href="#dataFiles">**DataFile**</a>.

        Please note that when linking a data file to a workflow it currently isn't possible to define the relationship type (e.g test data, example data) through the api.

        The **updateDataFile** operation returns a JSON object representing the modified <a href="#dataFiles">**DataFile**</a>.
      tags:
      - update
      - dataFiles
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/dataFilePatch"
        description: The data file to patch
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/dataFileResponse"
              examples:
                response:
                  value:
                    data:
                      id: '38'
                      type: data_files
                      attributes:
                        policy:
                          access: no_access
                          permissions:
                          - resource:
                              id: '524'
                              type: projects
                            access: edit
                        discussion_links: []
                        title: A Maximally Patched Data File
                        license: CC-BY-4.0
                        description: Study of the Human Genome
                        latest_version: 1
                        tags:
                        - tag1
                        - tag2
                        - tag3
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/data_files/38?version=1
                          doi: 
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:14:31.000Z'
                        updated_at: '2022-05-12T14:14:31.000Z'
                        doi: 
                        content_blobs:
                        - original_filename: a_pdf_file.pdf
                          url: 
                          md5sum: 565ae8a7a743c3bfd9f15c69647f5b8b
                          sha1sum: b9d2148740050b7f37975edd0fb97faa508ff767
                          content_type: application/pdf
                          link: http://localhost:3000/data_files/38/content_blobs/203
                          size: 8827
                        creators:
                        - profile: "/people/468"
                          family_name: Last
                          given_name: Person400
                          affiliation: 'An Institution: 480'
                          orcid: 
                        other_creators: John Smith, Jane Smith
                      relationships:
                        creators:
                          data:
                          - id: '468'
                            type: people
                        submitter:
                          data:
                          - id: '467'
                            type: people
                        people:
                          data:
                          - id: '467'
                            type: people
                          - id: '468'
                            type: people
                        projects:
                          data:
                          - id: '524'
                            type: projects
                        investigations:
                          data:
                          - id: '110'
                            type: investigations
                        studies:
                          data:
                          - id: '94'
                            type: studies
                        assays:
                          data:
                          - id: '81'
                            type: assays
                        publications:
                          data:
                          - id: '42'
                            type: publications
                        events:
                          data:
                          - id: '22'
                            type: events
                        workflows:
                          data:
                          - id: '20'
                            type: workflows
                        placeholder:
                          data: 
                        file_template:
                          data: 
                      links:
                        self: "/data_files/38?version=1"
                      meta:
                        created: '2022-05-12T14:14:31.000Z'
                        modified: '2022-05-12T14:14:31.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: c3f75540-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    delete:
      operationId: deleteDataFile
      summary: Delete a data file
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: "<a name=\"deleteDataFile\"></a>A **deleteDataFile** operation
        will delete the specified <a href=\"#dataFiles\">**DataFile**</a>, if the
        authenticated user has sufficient access to it.\n\n"
      tags:
      - delete
      - dataFiles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/{asset_types}/{id}/content_blobs/{blob_id}":
    parameters:
    - name: asset_types
      in: path
      required: true
      description: The types of asset being fetched, uploaded or downloaded
      schema:
        type: string
      example: data_files
    - name: id
      in: path
      required: true
      description: The asset content to fetch, upload or download
      schema:
        type: integer
      example: 1152
    - name: blob_id
      in: path
      required: true
      description: The asset identifier to fetch, upload or download
      schema:
        type: integer
      example: 1831
    put:
      operationId: uploadAssetContent
      summary: Upload content to an existing content blob placeholder
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: <a name="uploadAssetContent"></a>Upload the message body into the
        blob of the identified asset
      tags:
      - upload
      - contentBlobs
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        description: The blob content to fetch, upload or download
      responses:
        '200':
          description: Success
    get:
      operationId: readContentBlob
      summary: Fetch information on a content blob
      description: |
        <a name="readContentBlob"></a>A **readContentBlob** operation will return information about the <a href="#contentBlobs">ContentBlob</a> identified, provided the authenticated user has access to it.

        The **readContentBlob** operation may return
        * a JSON object representing the <a href="#contentBlobs">**ContentBlob**</a>.
        * a csv file, if **text/csv** is specified in the **Accept** header and if the content blob can be converted into a csv or is already a csv
      tags:
      - read
      - contentBlobs
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/contentBlobResponse"
            text/csv:
              schema:
                "$ref": "#/components/schemas/contentBlobResponse"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/forbiddenResponse"
            text/csv:
              schema:
                "$ref": "#/components/schemas/forbiddenResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/notFoundResponse"
            text/csv:
              schema:
                "$ref": "#/components/schemas/notFoundResponse"
  "/{asset_types}/{id}/content_blobs/{blob_id}/download":
    parameters:
    - name: asset_types
      in: path
      required: true
      description: The typs of asset being downloaded
      schema:
        type: string
      example: data_files
    - name: id
      in: path
      required: true
      description: The asset to fetch
      schema:
        type: integer
      example: 1152
    - name: blob_id
      in: path
      required: true
      description: The blob to download
      schema:
        type: integer
      example: 1831
    get:
      operationId: downloadAssetContent
      summary: Download content
      description: <a name="downloadAssetContent"></a>Return the identified content
        of the identified asset
      tags:
      - download
      - contentBlobs
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/forbiddenResponse"
        '404':
          description: Not found
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/notFoundResponse"
  "/documents":
    get:
      operationId: listDocuments
      summary: List documents
      description: '<a name="listDocuments"></a>The **listDocuments** operation returns
        a JSON object containing a list of all the <a href="#documents">**Documents**</a>
        to which the authenticated user has access.

        '
      tags:
      - list
      - documents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data:
                    - id: '43'
                      type: documents
                      attributes:
                        title: A Maximal Document
                      links:
                        self: "/documents/43"
                    - id: '42'
                      type: documents
                      attributes:
                        title: A Minimal Document
                      links:
                        self: "/documents/42"
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/documents?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/documents?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/documents?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
    post:
      operationId: createDocument
      summary: Create a new document
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="createDocument"></a>A **createDocument** operation creates a new instance of a <a href="#documents">**Document**</a>. The instance is populated with the content of the body of the API call.

        The **createDocument** operation returns a JSON object representing the newly created <a href="#documents">**Document**</a> and redirects to its URL.
      tags:
      - create
      - documents
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/documentPost"
        description: The document to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/documentResponse"
              examples:
                response:
                  value:
                    data:
                      id: '40'
                      type: documents
                      attributes:
                        policy:
                          access: download
                          permissions:
                          - resource:
                              id: '724'
                              type: projects
                            access: edit
                        discussion_links: []
                        title: A Maximal Document
                        license: CC-BY-4.0
                        description: This is the description
                        latest_version: 1
                        tags:
                        - tag1
                        - tag2
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/documents/40?version=1
                          doi: 
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:14:56.000Z'
                        updated_at: '2022-05-12T14:14:56.000Z'
                        doi: 
                        content_blobs:
                        - original_filename: a_pdf_file.pdf
                          url: 
                          md5sum: 
                          sha1sum: 
                          content_type: application/pdf
                          link: http://localhost:3000/documents/40/content_blobs/296
                          size: 
                        creators:
                        - profile: "/people/670"
                          family_name: Last
                          given_name: Person567
                          affiliation: 'An Institution: 682'
                          orcid: 
                        other_creators: John Smith, Jane Smith
                      relationships:
                        creators:
                          data:
                          - id: '670'
                            type: people
                        submitter:
                          data:
                          - id: '669'
                            type: people
                        people:
                          data:
                          - id: '669'
                            type: people
                          - id: '670'
                            type: people
                        projects:
                          data:
                          - id: '724'
                            type: projects
                        investigations:
                          data:
                          - id: '142'
                            type: investigations
                        studies:
                          data:
                          - id: '123'
                            type: studies
                        assays:
                          data:
                          - id: '102'
                            type: assays
                        publications:
                          data: []
                        workflows:
                          data:
                          - id: '27'
                            type: workflows
                      links:
                        self: "/documents/40?version=1"
                      meta:
                        created: '2022-05-12T14:14:56.000Z'
                        modified: '2022-05-12T14:14:56.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: d31be300-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/documents/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The document to fetch
      schema:
        type: integer
      example: 1152
    get:
      operationId: readDocument
      summary: Fetch a document
      description: |
        <a name="readDocument"></a>A **readDocument** operation will return information about the <a href="#documents">Document</a> identified, provided the authenticated user has access to it.

        The **readDocument** operation returns a JSON object representing the <a href="#documents">**Document**</a>.
      tags:
      - read
      - documents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/documentResponse"
              examples:
                response:
                  value:
                    data:
                      id: '45'
                      type: documents
                      attributes:
                        policy:
                          access: download
                          permissions: []
                        discussion_links:
                        - id: '64'
                          label: Slack
                          url: http://www.slack.com/
                        title: A Maximal Document
                        license: 
                        description: The important report we did for ~important-milestone~
                        latest_version: 1
                        tags:
                        - Document-tag1
                        - Document-tag2
                        - Document-tag3
                        - Document-tag4
                        - Document-tag5
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/documents/45?version=1
                          doi: 
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:14:59.000Z'
                        updated_at: '2022-05-12T14:14:59.000Z'
                        doi: 
                        content_blobs:
                        - original_filename: min file
                          url: 
                          md5sum: 726de0a3f94d65056b909b9736e10349
                          sha1sum: fbcc0dee4b5415de4c82ef5b137d8231fec1331b
                          content_type: application/pdf
                          link: http://localhost:3000/documents/45/content_blobs/307
                          size: 8
                        creators:
                        - profile: "/people/694"
                          family_name: One
                          given_name: Some
                          affiliation: University of Somewhere
                          orcid: 
                        other_creators: Blogs, Joe
                      relationships:
                        creators:
                          data:
                          - id: '694'
                            type: people
                        submitter:
                          data:
                          - id: '695'
                            type: people
                        people:
                          data:
                          - id: '694'
                            type: people
                          - id: '695'
                            type: people
                        projects:
                          data:
                          - id: '752'
                            type: projects
                        investigations:
                          data:
                          - id: '146'
                            type: investigations
                        studies:
                          data:
                          - id: '127'
                            type: studies
                        assays:
                          data:
                          - id: '106'
                            type: assays
                        publications:
                          data:
                          - id: '64'
                            type: publications
                        workflows:
                          data:
                          - id: '31'
                            type: workflows
                      links:
                        self: "/documents/45?version=1"
                      meta:
                        created: '2022-05-12T14:14:59.000Z'
                        modified: '2022-05-12T14:14:59.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: d4e110c0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    patch:
      operationId: updateDocument
      summary: Update a document
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updateDocument"></a>An **updateDocument** operation will modify the information held about the specified <a href="#documents">**Document**</a>. This operation is only available if the authenticated user has access to the <a href="#documents">**Document**</a>.

        The **updateDocument** operation returns a JSON object representing the modified <a href="#documents">**Document**</a>.
      tags:
      - update
      - documents
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/documentPatch"
        description: The document to patch.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/documentResponse"
              examples:
                response:
                  value:
                    data:
                      id: '46'
                      type: documents
                      attributes:
                        policy:
                          access: no_access
                          permissions:
                          - resource:
                              id: '754'
                              type: projects
                            access: edit
                        discussion_links: []
                        title: A Maximally Patched Document
                        license: CC-BY-4.0
                        description: A report about the thing that happened
                        latest_version: 1
                        tags:
                        - tag1
                        - tag2
                        - tag3
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/documents/46?version=1
                          doi: 
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:15:00.000Z'
                        updated_at: '2022-05-12T14:15:00.000Z'
                        doi: 
                        content_blobs:
                        - original_filename: file-46
                          url: 
                          md5sum: eec66d7c547bef3ad06b28ca02221152
                          sha1sum: 90e91b27d49aced501f11290f8fd93b44b9311c1
                          content_type: application/pdf
                          link: http://localhost:3000/documents/46/content_blobs/309
                          size: 9
                        creators:
                        - profile: "/people/698"
                          family_name: Last
                          given_name: Person590
                          affiliation: 'An Institution: 710'
                          orcid: 
                        other_creators: John Smith, Jane Smith
                      relationships:
                        creators:
                          data:
                          - id: '698'
                            type: people
                        submitter:
                          data:
                          - id: '697'
                            type: people
                        people:
                          data:
                          - id: '697'
                            type: people
                          - id: '698'
                            type: people
                        projects:
                          data:
                          - id: '754'
                            type: projects
                        investigations:
                          data:
                          - id: '147'
                            type: investigations
                        studies:
                          data:
                          - id: '128'
                            type: studies
                        assays:
                          data:
                          - id: '107'
                            type: assays
                        publications:
                          data: []
                        workflows:
                          data:
                          - id: '32'
                            type: workflows
                      links:
                        self: "/documents/46?version=1"
                      meta:
                        created: '2022-05-12T14:15:00.000Z'
                        modified: '2022-05-12T14:15:00.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: d53f2850-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    delete:
      operationId: deleteDocument
      summary: Delete a document
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: "<a name=\"deleteDocument\"></a>A **deleteDocument** operation
        will delete the specified <a href=\"#documents\">**Document**</a>, if the
        authenticated user has sufficient access to it.\n\n"
      tags:
      - delete
      - documents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/events":
    get:
      operationId: listEvents
      summary: List events
      description: '<a name="listEvents"></a>The **listEvents** operation returns
        a JSON object containing a list of all the <a href="#events">**Events**</a>
        to which the authenticated user has access.

        '
      tags:
      - list
      - events
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data: []
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/events?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/events?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/events?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
    post:
      operationId: createEvent
      summary: Create a new event
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="createEvent"></a>A **createEvent** operation creates a new instance of a <a href="#events">**Event**</a>. The instance is populated with the content of the body of the API call.

        The **createEvent** operation returns a JSON object representing the newly created <a href="#events">**Event**</a> and redirects to its URL.
      tags:
      - create
      - events
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/eventPost"
        description: The event to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/eventResponse"
              examples:
                response:
                  value:
                    data:
                      id: '10'
                      type: events
                      attributes:
                        policy:
                          access: view
                          permissions:
                          - resource:
                              id: '462'
                              type: projects
                            access: edit
                        title: A Maximal Event
                        description: This is the description
                        url: http://www.example.com/events/123
                        address: Sofienstr 2
                        city: Heidelberg
                        country: Germany
                        start_date: '2017-01-01T00:20:00.000Z'
                        end_date: '2017-01-01T00:22:00.000Z'
                      relationships:
                        submitter:
                          data:
                          - id: '407'
                            type: people
                        projects:
                          data:
                          - id: '462'
                            type: projects
                        data_files:
                          data:
                          - id: '25'
                            type: data_files
                        publications:
                          data:
                          - id: '31'
                            type: publications
                        presentations:
                          data:
                          - id: '9'
                            type: presentations
                      links:
                        self: "/events/10"
                      meta:
                        created: '2022-05-12T14:14:23.000Z'
                        modified: '2022-05-12T14:14:23.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: bf5b56c0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/events/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The event to fetch
      schema:
        type: integer
      example: 75
    get:
      operationId: readEvent
      summary: Fetch an event
      description: |
        <a name="readEvent"></a>A **readEvent** operation will return information about the <a href="#events">Event</a> identified, provided the authenticated user has access to it.

        The **readEvent** operation returns a JSON object representing the <a href="#events">**Event**</a>.
      tags:
      - read
      - events
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/eventResponse"
              examples:
                response:
                  value:
                    data:
                      id: '15'
                      type: events
                      attributes:
                        policy:
                          access: no_access
                          permissions: []
                        title: A Maximal Event
                        description: All you ever wanted to know about headaches
                        url: http://www.headache-center.org
                        address: Sofienstr 2
                        city: Heidelberg
                        country: Germany
                        start_date: '2017-01-01T00:20:00.000Z'
                        end_date: '2017-01-01T00:22:00.000Z'
                      relationships:
                        submitter:
                          data:
                          - id: '423'
                            type: people
                        projects:
                          data:
                          - id: '483'
                            type: projects
                        data_files:
                          data:
                          - id: '29'
                            type: data_files
                        publications:
                          data:
                          - id: '35'
                            type: publications
                        presentations:
                          data:
                          - id: '13'
                            type: presentations
                      links:
                        self: "/events/15"
                      meta:
                        created: '2022-05-12T14:14:25.000Z'
                        modified: '2022-05-12T14:14:25.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: c0799e00-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    patch:
      operationId: updateEvent
      summary: Update an event
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updateEvent"></a>An **updateEvent** operation will modify the information held about the specified <a href="#events">**Event**</a>. This operation is only available if the authenticated user has access to the <a href="#events">**Event**</a>.

        The **updateEvent** operation returns a JSON object representing the modified <a href="#events">**Event**</a>.
      tags:
      - update
      - events
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/eventPatch"
        description: The event to update.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/eventResponse"
              examples:
                response:
                  value:
                    data:
                      id: '16'
                      type: events
                      attributes:
                        policy:
                          access: no_access
                          permissions:
                          - resource:
                              id: '485'
                              type: projects
                            access: edit
                        title: A Maximally Patched Event
                        description: A thing happening
                        url: http://www.example.com/events/123
                        address: Sofienstr 2
                        city: Heidelberg
                        country: Germany
                        start_date: '2017-01-01T00:20:00.000Z'
                        end_date: '2017-01-01T00:22:00.000Z'
                      relationships:
                        submitter:
                          data:
                          - id: '425'
                            type: people
                        projects:
                          data:
                          - id: '485'
                            type: projects
                        data_files:
                          data:
                          - id: '30'
                            type: data_files
                        publications:
                          data:
                          - id: '36'
                            type: publications
                        presentations:
                          data:
                          - id: '14'
                            type: presentations
                      links:
                        self: "/events/16"
                      meta:
                        created: '2022-05-12T14:14:26.000Z'
                        modified: '2022-05-12T14:14:26.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: c0cb0120-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    delete:
      operationId: deleteEvent
      summary: Delete an event
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: "<a name=\"deleteEvent\"></a>A **deleteEvent** operation will delete
        the specified <a href=\"#events\">**Event**</a>, if the authenticated user
        has sufficient access to it.\n\n"
      tags:
      - delete
      - events
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/institutions":
    get:
      operationId: listInstitutions
      summary: List institutions
      description: '<a name="listInstitutions"></a>The **listInstitutions** operation
        returns a JSON object containing a list of all the <a href="#institutions">**Institutions**</a>
        to which the authenticated user has access.

        '
      tags:
      - list
      - institutions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data:
                    - id: '855'
                      type: institutions
                      attributes:
                        title: A Maximal Institution
                      links:
                        self: "/institutions/855"
                    - id: '853'
                      type: institutions
                      attributes:
                        title: A Minimal Institution
                      links:
                        self: "/institutions/853"
                    - id: '854'
                      type: institutions
                      attributes:
                        title: 'An Institution: 852'
                      links:
                        self: "/institutions/854"
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/institutions?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/institutions?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/institutions?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
    post:
      operationId: createInstitution
      summary: Create a new institution
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="createInstitution"></a>A **createInstitution** operation creates a new instance of a <a href="#institutions">**Institution**</a>. The instance is populated with the content of the body of the API call.

        The **createInstitution** operation returns a JSON object representing the newly created <a href="#institutions">**Institution**</a> and redirects to its URL.
      tags:
      - create
      - institutions
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/institutionPost"
        description: The institution to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/institutionResponse"
              examples:
                response:
                  value:
                    data:
                      id: '849'
                      type: institutions
                      attributes:
                        discussion_links: []
                        avatar: 
                        title: Post Institution 849 Max
                        country: United Kingdom
                        country_code: GB
                        city: Manchester
                        address: Manchester Centre for Integrative Systems Biology,
                          MIB/CEAS, The University of Manchester Faraday Building,
                          Sackville Street, Manchester M60 1QD United Kingdom
                        web_page: http://www.mib.ac.uk/
                      relationships:
                        people:
                          data: []
                        projects:
                          data: []
                      links:
                        self: "/institutions/849"
                      meta:
                        created: '2022-05-12T14:15:18.000Z'
                        modified: '2022-05-12T14:15:18.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: e038aee0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/institutions/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The institution to fetch, patch or delete
      schema:
        type: integer
      example: 142
    get:
      operationId: readInstitution
      summary: Fetch an institution
      description: |
        <a name="readInstitution"></a>A **readInstitution** operation will return information about the <a href="#institutions">Institution</a> identified, provided the authenticated user has access to it.

        The **readInstitution** operation returns a JSON object representing the <a href="#institutions">**Institution**</a>.
      tags:
      - read
      - institutions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/institutionResponse"
              examples:
                response:
                  value:
                    data:
                      id: '860'
                      type: institutions
                      attributes:
                        discussion_links:
                        - id: '76'
                          label: Slack
                          url: http://www.slack.com/
                        avatar: 
                        title: A Maximal Institution
                        country: United Kingdom
                        country_code: GB
                        city: Manchester
                        address: Manchester Centre for Integrative Systems Biology,
                          MIB/CEAS, The University of Manchester Faraday Building,
                          Sackville Street, Manchester M60 1QD United Kingdom
                        web_page: http://www.mib.ac.uk/
                      relationships:
                        people:
                          data: []
                        projects:
                          data: []
                      links:
                        self: "/institutions/860"
                      meta:
                        created: '2022-05-12T14:15:19.000Z'
                        modified: '2022-05-12T14:15:19.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: e0959080-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    patch:
      operationId: updateInstitution
      summary: Update an institution
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updateInstitution"></a>An **updateInstitution** operation will modify the information held about the specified <a href="#institutions">**Institution**</a>. This operation is only available if the authenticated user has access to the <a href="#institutions">**Institution**</a>.

        The **updateInstitution** operation returns a JSON object representing the modified <a href="#institutions">**Institution**</a>.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/institutionPatch"
        description: The data with which to update the institution.
      tags:
      - update
      - institutions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/institutionResponse"
              examples:
                response:
                  value:
                    data:
                      id: '863'
                      type: institutions
                      attributes:
                        discussion_links: []
                        avatar: 
                        title: Patched institution
                        country: Germany
                        country_code: DE
                        city: Heidelberg
                        address: NoName street 23
                        web_page: http://my.institution.com
                      relationships:
                        people:
                          data: []
                        projects:
                          data: []
                      links:
                        self: "/institutions/863"
                      meta:
                        created: '2022-05-12T14:15:19.000Z'
                        modified: '2022-05-12T14:15:19.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: e0b43d80-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    delete:
      operationId: deleteInstitution
      summary: Delete an institution
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: "<a name=\"deleteInstitution\"></a>A **deleteInstitution** operation
        will delete the specified <a href=\"#institutions\">**Institution**</a>, if
        the authenticated user has sufficient access to it.\n\n"
      tags:
      - delete
      - institutions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/investigations":
    get:
      operationId: listInvestigations
      summary: List investigations
      description: '<a name="listInvestigations"></a>The **listInvestigations** operation
        returns a JSON object containing a list of all the <a href="#investigations">**Investigations**</a>
        to which the authenticated user has access.

        '
      tags:
      - list
      - investigations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data:
                    - id: '77'
                      type: investigations
                      attributes:
                        title: Investigation61
                      links:
                        self: "/investigations/77"
                    - id: '72'
                      type: investigations
                      attributes:
                        title: A Minimal Investigation
                      links:
                        self: "/investigations/72"
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/investigations?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/investigations?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/investigations?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
    post:
      operationId: createInvestigation
      summary: Create a new investigation
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="createInvestigation"></a>A **createInvestigation** operation creates a new instance of a <a href="#investigations">**Investigation**</a>. The instance is populated with the content of the body of the API call.

        The **createInvestigation** operation returns a JSON object representing the newly created <a href="#investigations">**Investigation**</a> and redirects to its URL.
      tags:
      - create
      - investigations
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/investigationPost"
        description: The investigation to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/investigationResponse"
              examples:
                response:
                  value:
                    data:
                      id: '62'
                      type: investigations
                      attributes:
                        policy:
                          access: download
                          permissions:
                          - resource:
                              id: '243'
                              type: projects
                            access: manage
                          - resource:
                              id: '274'
                              type: projects
                            access: manage
                        discussion_links: []
                        snapshots: []
                        title: A Maximal Investigation
                        description: This is a more complex investigation
                        other_creators: Max Blumenthal, Ed Snowden
                        position: 
                        creators:
                        - profile: "/people/214"
                          family_name: Last
                          given_name: Person183
                          affiliation: 'An Institution: 218, An Institution: 247'
                          orcid: 
                      relationships:
                        creators:
                          data:
                          - id: '214'
                            type: people
                        submitter:
                          data:
                          - id: '214'
                            type: people
                        people:
                          data:
                          - id: '214'
                            type: people
                        projects:
                          data:
                          - id: '243'
                            type: projects
                          - id: '274'
                            type: projects
                        studies:
                          data: []
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data:
                          - id: '19'
                            type: publications
                        documents:
                          data: []
                      links:
                        self: "/investigations/62"
                      meta:
                        created: '2022-05-12T14:14:02.000Z'
                        modified: '2022-05-12T14:14:02.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: b289d510-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/investigations/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The investigation to fetch, patch or delete
      schema:
        type: integer
      example: 56
    get:
      operationId: readInvestigation
      summary: Fetch an investigation
      description: |
        <a name="readInvestigation"></a>A **readInvestigation** operation will return information about the <a href="#investigations">Investigation</a> identified, provided the authenticated user has access to it.

        The **readInvestigation** operation returns a JSON object representing the <a href="#investigations">**Investigation**</a>.
      tags:
      - read
      - investigations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/investigationResponse"
              examples:
                response:
                  value:
                    data:
                      id: '93'
                      type: investigations
                      attributes:
                        policy:
                          access: no_access
                          permissions: []
                        discussion_links:
                        - id: '38'
                          label: Slack
                          url: http://www.slack.com/
                        snapshots: []
                        title: A Maximal Investigation
                        description: Investigation of the Human Genome
                        other_creators: Max Blumenthal, Ed Snowden
                        position: 
                        creators:
                        - profile: "/people/325"
                          family_name: One
                          given_name: Some
                          affiliation: University of Somewhere
                          orcid: 
                      relationships:
                        creators:
                          data:
                          - id: '325'
                            type: people
                        submitter:
                          data:
                          - id: '326'
                            type: people
                        people:
                          data:
                          - id: '325'
                            type: people
                          - id: '326'
                            type: people
                        projects:
                          data:
                          - id: '370'
                            type: projects
                        studies:
                          data:
                          - id: '79'
                            type: studies
                        assays:
                          data:
                          - id: '67'
                            type: assays
                        data_files:
                          data:
                          - id: '22'
                            type: data_files
                        models:
                          data:
                          - id: '68'
                            type: models
                        sops:
                          data:
                          - id: '30'
                            type: sops
                        publications:
                          data:
                          - id: '27'
                            type: publications
                        documents:
                          data:
                          - id: '22'
                            type: documents
                      links:
                        self: "/investigations/93"
                      meta:
                        created: '2022-05-12T14:14:15.000Z'
                        modified: '2022-05-12T14:14:15.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: ba5b9630-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    patch:
      operationId: updateInvestigation
      summary: Update an investigation
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updateInvestigation"></a>An **updateInvestigation** operation will modify the information held about the specified <a href="#investigations">**Investigation**</a>. This operation is only available if the authenticated user has access to the <a href="#investigations">**Investigation**</a>.

        The **updateInvestigation** operation returns a JSON object representing the modified <a href="#investigations">**Investigation**</a>.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/investigationPatch"
        description: The investigation to patch.
      tags:
      - update
      - investigations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/investigationResponse"
              examples:
                response:
                  value:
                    data:
                      id: '101'
                      type: investigations
                      attributes:
                        policy:
                          access: download
                          permissions:
                          - resource:
                              id: '388'
                              type: projects
                            access: manage
                          - resource:
                              id: '419'
                              type: projects
                            access: manage
                        discussion_links: []
                        snapshots: []
                        title: A Maximal Investigation
                        description: This is a more complex investigation
                        other_creators: Max Blumenthal, Ed Snowden
                        position: 
                        creators:
                        - profile: "/people/342"
                          family_name: Last
                          given_name: Person293
                          affiliation: 'An Institution: 349, An Institution: 378'
                          orcid: 
                      relationships:
                        creators:
                          data:
                          - id: '342'
                            type: people
                        submitter:
                          data:
                          - id: '342'
                            type: people
                        people:
                          data:
                          - id: '342'
                            type: people
                        projects:
                          data:
                          - id: '388'
                            type: projects
                          - id: '419'
                            type: projects
                        studies:
                          data: []
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data:
                          - id: '30'
                            type: publications
                        documents:
                          data: []
                      links:
                        self: "/investigations/101"
                      meta:
                        created: '2022-05-12T14:14:19.000Z'
                        modified: '2022-05-12T14:14:19.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: bccdc6f0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    delete:
      operationId: deleteInvestigation
      summary: Delete an investigation
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: "<a name=\"deleteInvestigation\"></a>A **deleteInvestigation**
        operation will delete the specified <a href=\"#investigations\">**Investigation**</a>,
        if the authenticated user has sufficient access to it.\n\n"
      tags:
      - delete
      - investigations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/models":
    get:
      operationId: listModels
      summary: List models
      description: '<a name="listModels"></a>The **listModels** operation returns
        a JSON object containing a list of all the <a href="#models">**Models**</a>
        to which the authenticated user has access.

        '
      tags:
      - list
      - models
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data: []
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/models?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/models?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/models?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
    post:
      operationId: createModel
      summary: Create a new model
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="createModel"></a>A **createModel** operation creates a new instance of a <a href="#models">**Model**</a>. The instance is populated with the content of the body of the API call.

        The **createModel** operation returns a JSON object representing the newly created <a href="#models">**Model**</a> and redirects to its URL.
      tags:
      - create
      - models
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/modelPost"
        description: The model to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/modelResponse"
              examples:
                response:
                  value:
                    data:
                      id: '100'
                      type: models
                      attributes:
                        policy:
                          access: download
                          permissions:
                          - resource:
                              id: '660'
                              type: projects
                            access: edit
                        discussion_links:
                        - id: '54'
                          label: Google
                          url: http://google.com
                        title: A Maximal Model
                        license: CC-BY-4.0
                        description: This is the description
                        latest_version: 1
                        tags:
                        - tag1
                        - tag2
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/models/100?version=1
                          doi: 
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:14:48.000Z'
                        updated_at: '2022-05-12T14:14:48.000Z'
                        doi: 
                        content_blobs:
                        - original_filename: docs.pdf
                          url: 
                          md5sum: 
                          sha1sum: 
                          content_type: application/pdf
                          link: http://localhost:3000/models/100/content_blobs/267
                          size: 
                        - original_filename: the_model.xml
                          url: 
                          md5sum: 
                          sha1sum: 
                          content_type: application/xml
                          link: http://localhost:3000/models/100/content_blobs/268
                          size: 
                        creators:
                        - profile: "/people/604"
                          family_name: Last
                          given_name: Person513
                          affiliation: 'An Institution: 616'
                          orcid: 
                        other_creators: John Smith, Jane Smith
                        model_type: Linear equations
                        model_format: SBML
                        environment: JWS Online
                        model_image_link: 
                      relationships:
                        creators:
                          data:
                          - id: '604'
                            type: people
                        submitter:
                          data:
                          - id: '603'
                            type: people
                        organisms:
                          data:
                          - id: '23'
                            type: organisms
                        people:
                          data:
                          - id: '603'
                            type: people
                          - id: '604'
                            type: people
                        projects:
                          data:
                          - id: '660'
                            type: projects
                        investigations:
                          data:
                          - id: '134'
                            type: investigations
                        studies:
                          data:
                          - id: '115'
                            type: studies
                        assays:
                          data:
                          - id: '94'
                            type: assays
                        publications:
                          data:
                          - id: '57'
                            type: publications
                      links:
                        self: "/models/100?version=1"
                      meta:
                        created: '2022-05-12T14:14:48.000Z'
                        modified: '2022-05-12T14:14:48.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: ce6d1100-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/models/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The model to fetch, patch or delete
      schema:
        type: integer
      example: 139
    get:
      operationId: readModel
      summary: Fetch a model
      description: |
        <a name="readModel"></a>A **readModel** operation will return information about the <a href="#models">Model</a> identified, provided the authenticated user has access to it.

        The **readModel** operation returns a JSON object representing the <a href="#models">**Model**</a>.
      parameters:
      - name: version
        in: query
        required: true
        description: The version of the model to get
        schema:
          type: integer
        example: 2
      tags:
      - read
      - models
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/modelResponse"
              examples:
                response:
                  value:
                    data:
                      id: '111'
                      type: models
                      attributes:
                        policy:
                          access: no_access
                          permissions: []
                        discussion_links:
                        - id: '58'
                          label: Slack
                          url: http://www.slack.com/
                        title: A Maximal Model
                        license: 
                        description: Hidden Markov Model
                        latest_version: 1
                        tags:
                        - Model-tag1
                        - Model-tag2
                        - Model-tag3
                        - Model-tag4
                        - Model-tag5
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/models/111?version=1
                          doi: 
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:14:52.000Z'
                        updated_at: '2022-05-12T14:14:52.000Z'
                        doi: 
                        content_blobs:
                        - original_filename: cronwright.xml
                          url: 
                          md5sum: 6b9283ed4ca52a081398b715aaeb8113
                          sha1sum: 454e4b6067f577b680bb8538772b12ebcdb6c4a4
                          content_type: application/xml
                          link: http://localhost:3000/models/111/content_blobs/280
                          size: 5933
                        - original_filename: rightfield.xls
                          url: 
                          md5sum: '01788bca93265d80e8127ca0039bb69b'
                          sha1sum: ffd634ac7564083ab7b66bc3eb2053cbc3d608f5
                          content_type: application/vnd.ms-excel
                          link: http://localhost:3000/models/111/content_blobs/281
                          size: 9216
                        creators:
                        - profile: "/people/635"
                          family_name: One
                          given_name: Some
                          affiliation: University of Somewhere
                          orcid: 
                        other_creators: Blogs, Joe
                        model_type: Ordinary differential equations (ODE)
                        model_format: SBML
                        environment: JWS Online
                        model_image_link: 
                      relationships:
                        creators:
                          data:
                          - id: '635'
                            type: people
                        submitter:
                          data:
                          - id: '636'
                            type: people
                        organisms:
                          data:
                          - id: '27'
                            type: organisms
                        people:
                          data:
                          - id: '635'
                            type: people
                          - id: '636'
                            type: people
                        projects:
                          data:
                          - id: '692'
                            type: projects
                        investigations:
                          data:
                          - id: '138'
                            type: investigations
                        studies:
                          data:
                          - id: '119'
                            type: studies
                        assays:
                          data:
                          - id: '98'
                            type: assays
                        publications:
                          data:
                          - id: '61'
                            type: publications
                      links:
                        self: "/models/111?version=1"
                      meta:
                        created: '2022-05-12T14:14:52.000Z'
                        modified: '2022-05-12T14:14:52.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: d075f6c0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    patch:
      operationId: updateModel
      summary: Update a model
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updateModel"></a>An **updateModel** operation will modify the information held about the specified <a href="#models">**Model**</a>. This operation is only available if the authenticated user has access to the <a href="#models">**Model**</a>.

        The **updateModel** operation returns a JSON object representing the modified <a href="#models">**Model**</a>.
      tags:
      - update
      - models
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/modelPatch"
        description: The model to patch.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/modelResponse"
              examples:
                response:
                  value:
                    data:
                      id: '113'
                      type: models
                      attributes:
                        policy:
                          access: no_access
                          permissions:
                          - resource:
                              id: '694'
                              type: projects
                            access: edit
                        discussion_links:
                        - id: '59'
                          label: Yahoo
                          url: http://yahoo.com
                        - id: '60'
                          label: fish
                          url: https://fish.com
                        title: A Maximally Patched Model
                        license: CC-BY-4.0
                        description: A simulation of a thing
                        latest_version: 1
                        tags:
                        - tag1
                        - tag2
                        - tag3
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/models/113?version=1
                          doi: 
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:14:53.000Z'
                        updated_at: '2022-05-12T14:14:53.000Z'
                        doi: 
                        content_blobs:
                        - original_filename: cronwright.xml
                          url: 
                          md5sum: 6b9283ed4ca52a081398b715aaeb8113
                          sha1sum: 454e4b6067f577b680bb8538772b12ebcdb6c4a4
                          content_type: application/xml
                          link: http://localhost:3000/models/113/content_blobs/283
                          size: 5933
                        creators:
                        - profile: "/people/639"
                          family_name: Last
                          given_name: Person543
                          affiliation: 'An Institution: 651'
                          orcid: 
                        other_creators: John Smith, Jane Smith
                        model_type: Linear equations
                        model_format: SBML
                        environment: JWS Online
                        model_image_link: 
                      relationships:
                        creators:
                          data:
                          - id: '639'
                            type: people
                        submitter:
                          data:
                          - id: '638'
                            type: people
                        organisms:
                          data:
                          - id: '28'
                            type: organisms
                        people:
                          data:
                          - id: '638'
                            type: people
                          - id: '639'
                            type: people
                        projects:
                          data:
                          - id: '694'
                            type: projects
                        investigations:
                          data:
                          - id: '139'
                            type: investigations
                        studies:
                          data:
                          - id: '120'
                            type: studies
                        assays:
                          data:
                          - id: '99'
                            type: assays
                        publications:
                          data:
                          - id: '62'
                            type: publications
                      links:
                        self: "/models/113?version=1"
                      meta:
                        created: '2022-05-12T14:14:53.000Z'
                        modified: '2022-05-12T14:14:53.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: d103c0c0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    delete:
      operationId: deleteModel
      summary: Delete a model
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: "<a name=\"deleteModel\"></a>A **deleteModel** operation will delete
        the specified <a href=\"#models\">**Model**</a>, if the authenticated user
        has sufficient access to it.\n\n"
      tags:
      - delete
      - models
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/organisms":
    get:
      operationId: listOrganisms
      summary: List organisms
      description: '<a name="listOrganisms"></a>The **listOrganisms** operation returns
        a JSON object containing a list of all the <a href="#organisms">**Organisms**</a>
        to which the authenticated user has access.

        '
      tags:
      - list
      - organisms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data:
                    - id: '30'
                      type: organisms
                      attributes:
                        title: A Minimal Organism
                      links:
                        self: "/organisms/30"
                    - id: '31'
                      type: organisms
                      attributes:
                        title: A Maximal Organism
                      links:
                        self: "/organisms/31"
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/organisms?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/organisms?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/organisms?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
  "/organisms/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The organism to fetch, patch or delete
      schema:
        type: integer
      example: 1933753696
    get:
      operationId: readOrganism
      summary: Fetch an organism
      description: |
        <a name="readOrganism"></a>A **readOrganism** operation will return information about the <a href="#organisms">Organism</a> identified, provided the authenticated user has access to it.

        The **readOrganism** operation returns a JSON object representing the <a href="#organisms">**Organism**</a>.
      tags:
      - read
      - organisms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/organismResponse"
              examples:
                response:
                  value:
                    data:
                      id: '33'
                      type: organisms
                      attributes:
                        title: A Maximal Organism
                        concept_uri: http://purl.bioontology.org/ontology/NCBITAXON/9606
                        ontology_id: '23'
                      relationships:
                        projects:
                          data:
                          - id: '805'
                            type: projects
                        assays:
                          data:
                          - id: '111'
                            type: assays
                        models:
                          data:
                          - id: '123'
                            type: models
                      links:
                        self: "/organisms/33"
                      meta:
                        created: '2022-05-12T14:15:07.000Z'
                        modified: '2022-05-12T14:15:07.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: d9429190-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/people":
    get:
      operationId: listPeople
      summary: List people
      description: '<a name="listPeople"></a>The **listPeople** operation returns
        a JSON object containing a list of all the <a href="#people">**People**</a>
        to which the authenticated user has access.

        '
      tags:
      - list
      - people
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data:
                    - id: '703'
                      type: people
                      attributes:
                        title: default admin Last
                      links:
                        self: "/people/703"
                    - id: '704'
                      type: people
                      attributes:
                        title: Person593 Last
                      links:
                        self: "/people/704"
                    - id: '705'
                      type: people
                      attributes:
                        title: Person594 Last
                      links:
                        self: "/people/705"
                    - id: '707'
                      type: people
                      attributes:
                        title: Person595 Last
                      links:
                        self: "/people/707"
                    - id: '708'
                      type: people
                      attributes:
                        title: Maximilian Maxi-Mum
                      links:
                        self: "/people/708"
                    - id: '706'
                      type: people
                      attributes:
                        title: Minimal
                      links:
                        self: "/people/706"
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/people?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/people?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/people?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
    post:
      operationId: createPerson
      summary: Create a new person
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="createPerson"></a>A **createPerson** operation creates a new instance of a <a href="#people">**Person**</a>. The instance is populated with the content of the body of the API call.

        The **createPerson** operation returns a JSON object representing the newly created <a href="#people">**Person**</a> and redirects to its URL.
      tags:
      - create
      - people
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/personPost"
        description: The person to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/personResponse"
              examples:
                response:
                  value:
                    data:
                      id: '702'
                      type: people
                      attributes:
                        avatar: 
                        title: Post Person702
                        description: A person with all possible details
                        first_name: Post
                        last_name: Person702
                        orcid: https://orcid.org/0000-0001-9842-9718
                        mbox_sha1sum: b25ef1be931f15db5247361babfb132adf08ced7
                        expertise:
                        - modeling
                        - programming
                        tools:
                        - CeriusII
                        - Gromacs
                        - Python
                        login: 
                      relationships:
                        projects:
                          data: []
                        institutions:
                          data: []
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data: []
                        presentations:
                          data: []
                        events:
                          data: []
                        documents:
                          data: []
                      links:
                        self: "/people/702"
                      meta:
                        created: '2022-05-12T14:15:00.000Z'
                        modified: '2022-05-12T14:15:00.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: d5815c50-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/people/current":
    get:
      operationId: currentPerson
      summary: Fetch the currently authenticated user
      description: |
        <a name="currentPerson"></a>A **currentPerson** operation will return information about the current authenticated user.

        The **currentPerson** operation returns a JSON object representing the <a href="#people">**Person**</a>.

        If there is no current user, The **currentPerson** operation will return a 404 error.
      tags:
      - read
      - people
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/personResponse"
              examples:
                response:
                  value:
                    data:
                      id: '713'
                      type: people
                      attributes:
                        avatar: "/people/713/avatars/10"
                        title: Maximilian Maxi-Mum
                        description: A person with all possible details
                        first_name: Maximilian
                        last_name: Maxi-Mum
                        orcid: https://orcid.org/0000-0001-9842-9718
                        mbox_sha1sum: a19916c29e3857b918504789a62950d3542f94ec
                        expertise:
                        - fishing
                        - golf
                        tools:
                        - fishing rod
                        login: max_person_user
                      relationships:
                        projects:
                          data:
                          - id: '768'
                            type: projects
                        institutions:
                          data:
                          - id: '722'
                            type: institutions
                        investigations:
                          data:
                          - id: '149'
                            type: investigations
                        studies:
                          data:
                          - id: '130'
                            type: studies
                        assays:
                          data:
                          - id: '109'
                            type: assays
                        data_files:
                          data:
                          - id: '48'
                            type: data_files
                        models:
                          data:
                          - id: '121'
                            type: models
                        sops:
                          data:
                          - id: '41'
                            type: sops
                        publications:
                          data:
                          - id: '66'
                            type: publications
                        presentations:
                          data:
                          - id: '24'
                            type: presentations
                        events:
                          data:
                          - id: '34'
                            type: events
                        documents:
                          data:
                          - id: '48'
                            type: documents
                      links:
                        self: "/people/713"
                      meta:
                        created: '2022-05-12T14:15:02.000Z'
                        modified: '2022-05-12T14:15:02.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: d692ba90-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/people/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The person to fetch, patch or delete
      schema:
        type: integer
      example: 433
    get:
      operationId: readPerson
      summary: Fetch a person
      description: |
        <a name="readPerson"></a>A **readPerson** operation will return information about the <a href="#people">Person</a> identified, provided the authenticated user has access to it.

        The **readPerson** operation returns a JSON object representing the <a href="#people">**Person**</a>.
      tags:
      - read
      - people
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/personResponse"
              examples:
                response:
                  value:
                    data:
                      id: '713'
                      type: people
                      attributes:
                        avatar: "/people/713/avatars/10"
                        title: Maximilian Maxi-Mum
                        description: A person with all possible details
                        first_name: Maximilian
                        last_name: Maxi-Mum
                        orcid: https://orcid.org/0000-0001-9842-9718
                        mbox_sha1sum: a19916c29e3857b918504789a62950d3542f94ec
                        expertise:
                        - fishing
                        - golf
                        tools:
                        - fishing rod
                        login: max_person_user
                      relationships:
                        projects:
                          data:
                          - id: '768'
                            type: projects
                        institutions:
                          data:
                          - id: '722'
                            type: institutions
                        investigations:
                          data:
                          - id: '149'
                            type: investigations
                        studies:
                          data:
                          - id: '130'
                            type: studies
                        assays:
                          data:
                          - id: '109'
                            type: assays
                        data_files:
                          data:
                          - id: '48'
                            type: data_files
                        models:
                          data:
                          - id: '121'
                            type: models
                        sops:
                          data:
                          - id: '41'
                            type: sops
                        publications:
                          data:
                          - id: '66'
                            type: publications
                        presentations:
                          data:
                          - id: '24'
                            type: presentations
                        events:
                          data:
                          - id: '34'
                            type: events
                        documents:
                          data:
                          - id: '48'
                            type: documents
                      links:
                        self: "/people/713"
                      meta:
                        created: '2022-05-12T14:15:02.000Z'
                        modified: '2022-05-12T14:15:02.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: d692ba90-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    patch:
      operationId: updatePerson
      summary: Update a person
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updatePerson"></a>An **updatePerson** operation will modify the information held about the specified <a href="#people">**Person**</a>. This operation is only available if the authenticated user has access to the <a href="#people">**Person**</a>.

        The **updatePerson** operation returns a JSON object representing the modified <a href="#people">**Person**</a>.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/personPatch"
        description: The data with which to update the person.
      tags:
      - update
      - people
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/personResponse"
              examples:
                response:
                  value:
                    data:
                      id: '716'
                      type: people
                      attributes:
                        avatar: 
                        title: Patched Name
                        description: A person with all possible details
                        first_name: Patched
                        last_name: Name
                        orcid: https://orcid.org/0000-0001-9842-9718
                        mbox_sha1sum: 5f9cd9691c643af7e4506ff02cdb6629b9bb880f
                        expertise:
                        - modeling
                        - programming
                        tools:
                        - CeriusII
                        - Gromacs
                        - Python
                        login: user712
                      relationships:
                        projects:
                          data:
                          - id: '773'
                            type: projects
                        institutions:
                          data:
                          - id: '726'
                            type: institutions
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data: []
                        presentations:
                          data: []
                        events:
                          data: []
                        documents:
                          data: []
                      links:
                        self: "/people/716"
                      meta:
                        created: '2022-05-12T14:15:03.000Z'
                        modified: '2022-05-12T14:15:03.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: d71b7e10-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    delete:
      operationId: deletePerson
      summary: Delete a person
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: "<a name=\"deletePerson\"></a>A **deletePerson** operation will
        delete the specified <a href=\"#people\">**Person**</a>, if the authenticated
        user has sufficient access to it.\n\n"
      tags:
      - delete
      - people
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/presentations":
    get:
      operationId: listPresentations
      summary: List presentations
      description: '<a name="listPresentations"></a>The **listPresentations** operation
        returns a JSON object containing a list of all the <a href="#presentations">**Presentations**</a>
        to which the authenticated user has access.

        '
      tags:
      - list
      - presentations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data: []
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/presentations?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/presentations?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/presentations?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
    post:
      operationId: createPresentation
      summary: Create a new presentation
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="createPresentation"></a>A **createPresentation** operation creates a new instance of a <a href="#presentations">**Presentation**</a>. The instance is populated with the content of the body of the API call.

        The **createPresentation** operation returns a JSON object representing the newly created <a href="#presentations">**Presentation**</a> and redirects to its URL.
      tags:
      - create
      - presentations
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/presentationPost"
        description: The presentation to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/presentationResponse"
              examples:
                response:
                  value:
                    data:
                      id: '16'
                      type: presentations
                      attributes:
                        policy:
                          access: download
                          permissions:
                          - resource:
                              id: '565'
                              type: projects
                            access: edit
                        discussion_links: []
                        title: A Maximal Presentation
                        license: CC-BY-4.0
                        description: This is the description
                        latest_version: 1
                        tags:
                        - tag1
                        - tag2
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/presentations/16?version=1
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:14:36.000Z'
                        updated_at: '2022-05-12T14:14:36.000Z'
                        content_blobs:
                        - original_filename: a_pdf_file.pdf
                          url: 
                          md5sum: 
                          sha1sum: 
                          content_type: application/pdf
                          link: http://localhost:3000/presentations/16/content_blobs/231
                          size: 
                        creators:
                        - profile: "/people/509"
                          family_name: Last
                          given_name: Person434
                          affiliation: 'An Institution: 521'
                          orcid: 
                        other_creators: John Smith, Jane Smith
                      relationships:
                        creators:
                          data:
                          - id: '509'
                            type: people
                        submitter:
                          data:
                          - id: '508'
                            type: people
                        people:
                          data:
                          - id: '508'
                            type: people
                          - id: '509'
                            type: people
                        projects:
                          data:
                          - id: '565'
                            type: projects
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        publications:
                          data:
                          - id: '45'
                            type: publications
                        events:
                          data:
                          - id: '23'
                            type: events
                        workflows:
                          data:
                          - id: '21'
                            type: workflows
                      links:
                        self: "/presentations/16?version=1"
                      meta:
                        created: '2022-05-12T14:14:36.000Z'
                        modified: '2022-05-12T14:14:36.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: c7323e60-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/presentations/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The presentation to fetch, patch or delete
      schema:
        type: integer
      example: 253
    get:
      operationId: readPresentation
      summary: Fetch a presentation
      description: |
        <a name="readPresentation"></a>A **readPresentation** operation will return information about the <a href="#presentations">Presentation</a> identified, provided the authenticated user has access to it.

        The **readPresentation** operation returns a JSON object representing the <a href="#presentations">**Presentation**</a>.
      parameters:
      - name: version
        in: query
        required: true
        description: The version of the presentation to get
        schema:
          type: integer
        example: 1
      tags:
      - read
      - presentations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/presentationResponse"
              examples:
                response:
                  value:
                    data:
                      id: '21'
                      type: presentations
                      attributes:
                        policy:
                          access: no_access
                          permissions: []
                        discussion_links:
                        - id: '48'
                          label: Slack
                          url: http://www.slack.com/
                        title: A Maximal Presentation
                        license: 
                        description: Non-equilibrium Free Energy Calculations and
                          their caveats
                        latest_version: 1
                        tags:
                        - Presentation-tag1
                        - Presentation-tag2
                        - Presentation-tag3
                        - Presentation-tag4
                        - Presentation-tag5
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/presentations/21?version=1
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:14:40.000Z'
                        updated_at: '2022-05-12T14:14:40.000Z'
                        content_blobs:
                        - original_filename: test.pdf
                          url: 
                          md5sum: 726de0a3f94d65056b909b9736e10349
                          sha1sum: fbcc0dee4b5415de4c82ef5b137d8231fec1331b
                          content_type: application/pdf
                          link: http://localhost:3000/presentations/21/content_blobs/242
                          size: 8
                        creators:
                        - profile: "/people/544"
                          family_name: One
                          given_name: Some
                          affiliation: University of Somewhere
                          orcid: 
                        other_creators: Blogs, Joe
                      relationships:
                        creators:
                          data:
                          - id: '544'
                            type: people
                        submitter:
                          data:
                          - id: '545'
                            type: people
                        people:
                          data:
                          - id: '544'
                            type: people
                          - id: '545'
                            type: people
                        projects:
                          data:
                          - id: '598'
                            type: projects
                        investigations:
                          data:
                          - id: '112'
                            type: investigations
                        studies:
                          data:
                          - id: '96'
                            type: studies
                        assays:
                          data:
                          - id: '83'
                            type: assays
                        publications:
                          data:
                          - id: '49'
                            type: publications
                        events:
                          data:
                          - id: '27'
                            type: events
                        workflows:
                          data:
                          - id: '25'
                            type: workflows
                      links:
                        self: "/presentations/21?version=1"
                      meta:
                        created: '2022-05-12T14:14:40.000Z'
                        modified: '2022-05-12T14:14:40.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: c925d950-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    patch:
      operationId: updatePresentation
      summary: Update a presentation
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updatePresentation"></a>An **updatePresentation** operation will modify the information held about the specified <a href="#presentations">**Presentation**</a>. This operation is only available if the authenticated user has access to the <a href="#presentations">**Presentation**</a>.

        The **updatePresentation** operation returns a JSON object representing the modified <a href="#presentations">**Presentation**</a>.
      tags:
      - update
      - presentations
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/presentationPatch"
        description: The presentation to update.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/presentationResponse"
              examples:
                response:
                  value:
                    data:
                      id: '22'
                      type: presentations
                      attributes:
                        policy:
                          access: no_access
                          permissions:
                          - resource:
                              id: '600'
                              type: projects
                            access: edit
                        discussion_links: []
                        title: A Maximally Patched Presentation
                        license: CC-BY-4.0
                        description: Presenting the research about the thing
                        latest_version: 1
                        tags:
                        - tag1
                        - tag2
                        - tag3
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/presentations/22?version=1
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:14:40.000Z'
                        updated_at: '2022-05-12T14:14:40.000Z'
                        content_blobs:
                        - original_filename: test.pdf
                          url: 
                          md5sum: 1e8718d5f653a5b7d53a2d3635baad2c
                          sha1sum: 6e60dd9709cc5575923939c1ff094794440b39ff
                          content_type: application/pdf
                          link: http://localhost:3000/presentations/22/content_blobs/243
                          size: 9
                        creators:
                        - profile: "/people/548"
                          family_name: Last
                          given_name: Person468
                          affiliation: 'An Institution: 560'
                          orcid: 
                        other_creators: John Smith, Jane Smith
                      relationships:
                        creators:
                          data:
                          - id: '548'
                            type: people
                        submitter:
                          data:
                          - id: '547'
                            type: people
                        people:
                          data:
                          - id: '547'
                            type: people
                          - id: '548'
                            type: people
                        projects:
                          data:
                          - id: '600'
                            type: projects
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        publications:
                          data:
                          - id: '50'
                            type: publications
                        events:
                          data:
                          - id: '28'
                            type: events
                        workflows:
                          data:
                          - id: '26'
                            type: workflows
                      links:
                        self: "/presentations/22?version=1"
                      meta:
                        created: '2022-05-12T14:14:40.000Z'
                        modified: '2022-05-12T14:14:40.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: c98cf510-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    delete:
      operationId: deletePresentation
      summary: Delete a presentation
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: "<a name=\"deletePresentation\"></a>A **deletePresentation** operation
        will delete the specified <a href=\"#presentations\">**Presentation**</a>,
        if the authenticated user has sufficient access to it.\n\n"
      tags:
      - delete
      - presentations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/programmes":
    get:
      operationId: listProgrammes
      summary: List programmes
      description: '<a name="listProgrammes"></a>The **listProgrammes** operation
        returns a JSON object containing a list of all the <a href="#programmes">**Programmes**</a>
        to which the authenticated user has access.

        '
      tags:
      - list
      - programmes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data:
                    - id: '18'
                      type: programmes
                      attributes:
                        title: A Maximal Programme
                      links:
                        self: "/programmes/18"
                    - id: '17'
                      type: programmes
                      attributes:
                        title: 'A Programme: 15'
                      links:
                        self: "/programmes/17"
                    - id: '16'
                      type: programmes
                      attributes:
                        title: A Minimal Programme
                      links:
                        self: "/programmes/16"
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/programmes?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/programmes?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/programmes?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
    post:
      operationId: createProgramme
      summary: Create a new programme
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="createProgramme"></a>A **createProgramme** operation creates a new instance of a <a href="#programmes">**Programme**</a>. The instance is populated with the content of the body of the API call.

        The **createProgramme** operation returns a JSON object representing the newly created <a href="#programmes">**Programme**</a> and redirects to its URL.
      tags:
      - create
      - programmes
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/programmePost"
        description: The programme to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/programmeResponse"
              examples:
                response:
                  value:
                    data:
                      id: '14'
                      type: programmes
                      attributes:
                        discussion_links: []
                        avatar: 
                        title: Post Programme Max
                        description: A very exciting programme
                        web_page: http://www.synbiochem.co.uk
                        funding_details: Someone is funding this for me
                        funding_codes:
                        - BMBF
                        - DFG
                      relationships:
                        administrators:
                          data:
                          - id: '748'
                            type: people
                          - id: '749'
                            type: people
                        people:
                          data: []
                        projects:
                          data:
                          - id: '809'
                            type: projects
                        institutions:
                          data: []
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data: []
                        presentations:
                          data: []
                        events:
                          data: []
                        documents:
                          data: []
                      links:
                        self: "/programmes/14"
                      meta:
                        created: '2022-05-12T14:15:07.000Z'
                        modified: '2022-05-12T14:15:07.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: d975c550-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/programmes/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The programme to fetch, patch or delete
      schema:
        type: integer
      example: 3
    get:
      operationId: readProgramme
      summary: Fetch a programme
      description: |
        <a name="readProgramme"></a>A **readProgramme** operation will return information about the <a href="#programmes">Programme</a> identified, provided the authenticated user has access to it.

        The **readProgramme** operation returns a JSON object representing the <a href="#programmes">**Programme**</a>.
      tags:
      - read
      - programmes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/programmeResponse"
              examples:
                response:
                  value:
                    data:
                      id: '21'
                      type: programmes
                      attributes:
                        discussion_links:
                        - id: '74'
                          label: Slack
                          url: http://www.slack.com/
                        avatar: 
                        title: A Maximal Programme
                        description: A very exciting programme
                        web_page: http://www.synbiochem.co.uk
                        funding_details: Someone is funding this for me
                        funding_codes:
                        - DFG
                      relationships:
                        administrators:
                          data:
                          - id: '815'
                            type: people
                        people:
                          data:
                          - id: '814'
                            type: people
                        projects:
                          data:
                          - id: '885'
                            type: projects
                        institutions:
                          data:
                          - id: '824'
                            type: institutions
                        investigations:
                          data:
                          - id: '165'
                            type: investigations
                        studies:
                          data:
                          - id: '144'
                            type: studies
                        assays:
                          data:
                          - id: '121'
                            type: assays
                        data_files:
                          data:
                          - id: '52'
                            type: data_files
                        models:
                          data:
                          - id: '139'
                            type: models
                        sops:
                          data:
                          - id: '49'
                            type: sops
                        publications:
                          data:
                          - id: '70'
                            type: publications
                        presentations:
                          data:
                          - id: '26'
                            type: presentations
                        events:
                          data:
                          - id: '36'
                            type: events
                        documents:
                          data:
                          - id: '63'
                            type: documents
                      links:
                        self: "/programmes/21"
                      meta:
                        created: '2022-05-12T14:15:15.000Z'
                        modified: '2022-05-12T14:15:15.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: de8c5300-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    patch:
      operationId: updateProgramme
      summary: Update a programme
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updateProgramme"></a>An **updateProgramme** operation will modify the information held about the specified <a href="#programmes">**Programme**</a>. This operation is only available if the authenticated user has access to the <a href="#programmes">**Programme**</a>.

        The **updateProgramme** operation returns a JSON object representing the modified <a href="#programmes">**Programme**</a>.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/programmePatch"
        description: The data with which to update the programme.
      tags:
      - update
      - programmes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/programmeResponse"
              examples:
                response:
                  value:
                    data:
                      id: '22'
                      type: programmes
                      attributes:
                        discussion_links: []
                        avatar: 
                        title: Changed title
                        description: A very exciting programme patched!
                        web_page: http://www.synbiochem.co.uk
                        funding_details: Someone ELSE is funding this for me
                        funding_codes:
                        - AVH
                      relationships:
                        administrators:
                          data:
                          - id: '818'
                            type: people
                        people:
                          data: []
                        projects:
                          data:
                          - id: '890'
                            type: projects
                        institutions:
                          data: []
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data: []
                        presentations:
                          data: []
                        events:
                          data: []
                        documents:
                          data: []
                      links:
                        self: "/programmes/22"
                      meta:
                        created: '2022-05-12T14:15:16.000Z'
                        modified: '2022-05-12T14:15:16.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: dec2e450-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    delete:
      operationId: deleteProgramme
      summary: Delete a programme
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: "<a name=\"deleteProgramme\"></a>A **deleteProgramme** operation
        will delete the specified <a href=\"#programmes\">**Programme**</a>, if the
        authenticated user has sufficient access to it.\n\n"
      tags:
      - delete
      - programmes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/projects":
    get:
      operationId: listProjects
      summary: List projects
      description: '<a name="listProjects"></a>The **listProjects** operation returns
        a JSON object containing a list of all the <a href="#projects">**Projects**</a>
        to which the authenticated user has access.

        '
      tags:
      - list
      - projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data:
                    - id: '43'
                      type: projects
                      attributes:
                        title: A Maximal Project
                      links:
                        self: "/projects/43"
                    - id: '34'
                      type: projects
                      attributes:
                        title: 'A Project: -32'
                      links:
                        self: "/projects/34"
                    - id: '35'
                      type: projects
                      attributes:
                        title: 'A Project: -33'
                      links:
                        self: "/projects/35"
                    - id: '36'
                      type: projects
                      attributes:
                        title: 'A Project: -34'
                      links:
                        self: "/projects/36"
                    - id: '37'
                      type: projects
                      attributes:
                        title: 'A Project: -35'
                      links:
                        self: "/projects/37"
                    - id: '38'
                      type: projects
                      attributes:
                        title: 'A Project: -36'
                      links:
                        self: "/projects/38"
                    - id: '39'
                      type: projects
                      attributes:
                        title: 'A Project: -37'
                      links:
                        self: "/projects/39"
                    - id: '40'
                      type: projects
                      attributes:
                        title: 'A Project: -38'
                      links:
                        self: "/projects/40"
                    - id: '41'
                      type: projects
                      attributes:
                        title: 'A Project: -39'
                      links:
                        self: "/projects/41"
                    - id: '42'
                      type: projects
                      attributes:
                        title: 'A Project: -40'
                      links:
                        self: "/projects/42"
                    - id: '28'
                      type: projects
                      attributes:
                        title: 'A Project: -26'
                      links:
                        self: "/projects/28"
                    - id: '29'
                      type: projects
                      attributes:
                        title: 'A Project: -27'
                      links:
                        self: "/projects/29"
                    - id: '30'
                      type: projects
                      attributes:
                        title: 'A Project: -28'
                      links:
                        self: "/projects/30"
                    - id: '31'
                      type: projects
                      attributes:
                        title: 'A Project: -29'
                      links:
                        self: "/projects/31"
                    - id: '32'
                      type: projects
                      attributes:
                        title: 'A Project: -30'
                      links:
                        self: "/projects/32"
                    - id: '33'
                      type: projects
                      attributes:
                        title: 'A Project: -31'
                      links:
                        self: "/projects/33"
                    - id: '24'
                      type: projects
                      attributes:
                        title: 'A Project: -22'
                      links:
                        self: "/projects/24"
                    - id: '25'
                      type: projects
                      attributes:
                        title: 'A Project: -23'
                      links:
                        self: "/projects/25"
                    - id: '26'
                      type: projects
                      attributes:
                        title: 'A Project: -24'
                      links:
                        self: "/projects/26"
                    - id: '27'
                      type: projects
                      attributes:
                        title: 'A Project: -25'
                      links:
                        self: "/projects/27"
                    - id: '17'
                      type: projects
                      attributes:
                        title: 'A Project: -15'
                      links:
                        self: "/projects/17"
                    - id: '18'
                      type: projects
                      attributes:
                        title: 'A Project: -16'
                      links:
                        self: "/projects/18"
                    - id: '19'
                      type: projects
                      attributes:
                        title: 'A Project: -17'
                      links:
                        self: "/projects/19"
                    - id: '20'
                      type: projects
                      attributes:
                        title: 'A Project: -18'
                      links:
                        self: "/projects/20"
                    - id: '21'
                      type: projects
                      attributes:
                        title: 'A Project: -19'
                      links:
                        self: "/projects/21"
                    - id: '22'
                      type: projects
                      attributes:
                        title: 'A Project: -20'
                      links:
                        self: "/projects/22"
                    - id: '23'
                      type: projects
                      attributes:
                        title: 'A Project: -21'
                      links:
                        self: "/projects/23"
                    - id: '12'
                      type: projects
                      attributes:
                        title: A Minimal Project
                      links:
                        self: "/projects/12"
                    - id: '13'
                      type: projects
                      attributes:
                        title: 'A Project: -11'
                      links:
                        self: "/projects/13"
                    - id: '14'
                      type: projects
                      attributes:
                        title: 'A Project: -12'
                      links:
                        self: "/projects/14"
                    - id: '15'
                      type: projects
                      attributes:
                        title: 'A Project: -13'
                      links:
                        self: "/projects/15"
                    - id: '16'
                      type: projects
                      attributes:
                        title: 'A Project: -14'
                      links:
                        self: "/projects/16"
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/projects?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/projects?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/projects?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
    post:
      operationId: createProject
      summary: Create a new project
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="createProject"></a>A **createProject** operation creates a new instance of a <a href="#projects">**Project**</a>. The instance is populated with the content of the body of the API call.

        The **createProject** operation returns a JSON object representing the newly created <a href="#projects">**Project**</a> and redirects to its URL.
      tags:
      - create
      - projects
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/projectPost"
        description: The project to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/projectResponse"
              examples:
                response:
                  value:
                    data:
                      id: '6'
                      type: projects
                      attributes:
                        discussion_links: []
                        avatar: 
                        title: Post Project Max
                        description: A Taverna project
                        web_page: http://www.taverna.org.uk
                        wiki_page: http://www.mygrid.org.uk
                        default_license: Other (Open)
                        start_date: 
                        end_date: 
                        default_policy:
                          access: no_access
                          permissions:
                          - resource:
                              id: '3'
                              type: people
                            access: manage
                          - resource:
                              id: '4'
                              type: projects
                            access: download
                          - resource:
                              id: '4'
                              type: institutions
                            access: view
                        members: []
                        use_default_policy: false
                      relationships:
                        project_administrators:
                          data: []
                        pals:
                          data: []
                        asset_housekeepers:
                          data: []
                        asset_gatekeepers:
                          data: []
                        organisms:
                          data:
                          - id: '1'
                            type: organisms
                        human_diseases:
                          data: []
                        people:
                          data: []
                        institutions:
                          data: []
                        programmes:
                          data:
                          - id: '1'
                            type: programmes
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        data_files:
                          data: []
                        file_templates:
                          data: []
                        placeholders:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data: []
                        presentations:
                          data: []
                        events:
                          data: []
                        documents:
                          data: []
                        workflows:
                          data: []
                      links:
                        self: "/projects/6"
                      meta:
                        created: '2022-05-12T14:13:27.000Z'
                        modified: '2022-05-12T14:13:27.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: 9e21c0a0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/projects/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The project to fetch, patch or delete
      schema:
        type: integer
      example: 17
    get:
      operationId: readProject
      summary: Fetch a project
      description: |
        <a name="readProject"></a>A **readProject** operation will return information about the <a href="#projects">Project</a> identified, provided the authenticated user has access to it.

        The **readProject** operation returns a JSON object representing the <a href="#projects">**Project**</a>.
      tags:
      - read
      - projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/projectResponse"
              examples:
                response:
                  value:
                    data:
                      id: '79'
                      type: projects
                      attributes:
                        discussion_links:
                        - id: '8'
                          label: Slack
                          url: http://www.slack.com/
                        avatar: "/projects/79/avatars/2"
                        title: A Maximal Project
                        description: A Taverna project
                        web_page: http://www.taverna.org.uk
                        wiki_page: http://www.mygrid.org.uk
                        default_license: Other (Open)
                        start_date: '2010-01-01'
                        end_date: '2014-06-21'
                        default_policy:
                          access: no_access
                          permissions: []
                        members:
                        - person_id: '65'
                          institution_id: '68'
                        use_default_policy: true
                      relationships:
                        project_administrators:
                          data: []
                        pals:
                          data: []
                        asset_housekeepers:
                          data: []
                        asset_gatekeepers:
                          data: []
                        organisms:
                          data: []
                        human_diseases:
                          data: []
                        people:
                          data:
                          - id: '65'
                            type: people
                        institutions:
                          data:
                          - id: '68'
                            type: institutions
                        programmes:
                          data:
                          - id: '5'
                            type: programmes
                        investigations:
                          data:
                          - id: '14'
                            type: investigations
                        studies:
                          data:
                          - id: '12'
                            type: studies
                        assays:
                          data:
                          - id: '10'
                            type: assays
                        data_files:
                          data:
                          - id: '4'
                            type: data_files
                        file_templates:
                          data: []
                        placeholders:
                          data: []
                        models:
                          data:
                          - id: '14'
                            type: models
                        sops:
                          data:
                          - id: '4'
                            type: sops
                        publications:
                          data:
                          - id: '4'
                            type: publications
                        presentations:
                          data:
                          - id: '2'
                            type: presentations
                        events:
                          data:
                          - id: '2'
                            type: events
                        documents:
                          data:
                          - id: '4'
                            type: documents
                        workflows:
                          data:
                          - id: '2'
                            type: workflows
                      links:
                        self: "/projects/79"
                      meta:
                        created: '2022-05-12T14:13:36.000Z'
                        modified: '2022-05-12T14:13:36.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: a37a2df0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    patch:
      operationId: updateProject
      summary: Update a project
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updateProject"></a>An **updateProject** operation will modify the information held about the specified <a href="#projects">**Project**</a>. This operation is only available if the authenticated user has access to the <a href="#projects">**Project**</a>.

        The **updateProject** operation returns a JSON object representing the modified <a href="#projects">**Project**</a>.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/projectPatch"
        description: The data with which to update the project.
      tags:
      - update
      - projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/projectResponse"
              examples:
                response:
                  value:
                    data:
                      id: '83'
                      type: projects
                      attributes:
                        discussion_links: []
                        avatar: 
                        title: Updated Project
                        description: with a new description!
                        web_page: http://www.taverna.org.uk
                        wiki_page: http://www.mygrid.org.uk
                        default_license: Other (Open)
                        start_date: 
                        end_date: 
                        default_policy:
                          access: no_access
                          permissions:
                          - resource:
                              id: '68'
                              type: people
                            access: manage
                          - resource:
                              id: '83'
                              type: projects
                            access: download
                          - resource:
                              id: '72'
                              type: institutions
                            access: view
                        members: []
                        use_default_policy: false
                      relationships:
                        project_administrators:
                          data: []
                        pals:
                          data: []
                        asset_housekeepers:
                          data: []
                        asset_gatekeepers:
                          data: []
                        organisms:
                          data:
                          - id: '6'
                            type: organisms
                        human_diseases:
                          data: []
                        people:
                          data: []
                        institutions:
                          data: []
                        programmes:
                          data:
                          - id: '6'
                            type: programmes
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        data_files:
                          data: []
                        file_templates:
                          data: []
                        placeholders:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data: []
                        presentations:
                          data: []
                        events:
                          data: []
                        documents:
                          data: []
                        workflows:
                          data: []
                      links:
                        self: "/projects/83"
                      meta:
                        created: '2022-05-12T14:13:37.000Z'
                        modified: '2022-05-12T14:13:37.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: a3b98be0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    delete:
      operationId: deleteProject
      summary: Delete a project
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: "<a name=\"deleteProject\"></a>A **deleteProject** operation will
        delete the specified <a href=\"#projects\">**Project**</a>, if the authenticated
        user has sufficient access to it.\n\n"
      tags:
      - delete
      - projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/publications":
    get:
      operationId: listPublications
      summary: List publications
      description: '<a name="listPublications"></a>The **listPublications** operation
        returns a JSON object containing a list of all the <a href="#publications">**Publications**</a>
        to which the authenticated user has access.

        '
      tags:
      - list
      - publications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data:
                    - id: '74'
                      type: publications
                      attributes:
                        title: A Maximal Publication
                      links:
                        self: "/publications/74"
                    - id: '72'
                      type: publications
                      attributes:
                        title: A Minimal Publication
                      links:
                        self: "/publications/72"
                    - id: '73'
                      type: publications
                      attributes:
                        title: A Publication 72
                      links:
                        self: "/publications/73"
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/publications?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/publications?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/publications?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
  "/publications/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The publication to fetch, patch or delete
      schema:
        type: integer
      example: 240
    get:
      operationId: readPublication
      summary: Fetch a publication
      description: |
        <a name="readPublication"></a>A **readPublication** operation will return information about the <a href="#publications">Publication</a> identified, provided the authenticated user has access to it.

        The **readPublication** operation returns a JSON object representing the <a href="#publications">**Publication**</a>.
      tags:
      - read
      - publications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/publicationResponse"
              examples:
                response:
                  value:
                    data:
                      id: '77'
                      type: publications
                      attributes:
                        policy:
                          access: download
                          permissions: []
                        discussion_links:
                        - id: '79'
                          label: Slack
                          url: http://www.slack.com/
                        misc_links:
                        - id: '80'
                          label: A link
                          url: http://www.slack.com/
                        title: A Maximal Publication
                        latest_version: 1
                        tags: []
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/publications/77?version=1
                          doi: 10.5072/abcd
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:15:23.000Z'
                        updated_at: '2022-05-12T14:15:23.000Z'
                        doi: 10.5072/abcd
                        content_blobs:
                        - original_filename: min file
                          url: 
                          md5sum: 726de0a3f94d65056b909b9736e10349
                          sha1sum: fbcc0dee4b5415de4c82ef5b137d8231fec1331b
                          content_type: application/pdf
                          link: http://localhost:3000/publications/77/content_blobs/376
                          size: 8
                        creators: []
                        other_creators: 
                        journal: Journal of Molecular Biology
                        published_date: '2017-10-10'
                        pubmed_id: 873864488
                        abstract: Amazing insights into the mechanism of TF2
                        citation: JMB Oct 2017, 12:234-245
                        editor: Richling, S. and Baumann, M. and Heuveline, V.
                        booktitle: 'Proceedings of the 3rd bwHPC-Symposium: Heidelberg
                          2016'
                        publisher: Heidelberg University Library, heiBOOKS
                        url: 
                        link_to_pub: https://www.ncbi.nlm.nih.gov/pubmed/873864488
                        publication_type: Journal
                        authors:
                        - Author_non_registered LastNonReg
                        - Author_registered LastReg
                      relationships:
                        creators:
                          data: []
                        submitter:
                          data:
                          - id: '886'
                            type: people
                        people:
                          data:
                          - id: '886'
                            type: people
                        projects:
                          data:
                          - id: '963'
                            type: projects
                        investigations:
                          data:
                          - id: '177'
                            type: investigations
                        studies:
                          data:
                          - id: '154'
                            type: studies
                        assays:
                          data:
                          - id: '129'
                            type: assays
                        data_files:
                          data:
                          - id: '54'
                            type: data_files
                        models:
                          data:
                          - id: '149'
                            type: models
                        publications:
                          data:
                          - id: '76'
                            type: publications
                        presentations:
                          data:
                          - id: '28'
                            type: presentations
                        events:
                          data:
                          - id: '38'
                            type: events
                        workflows:
                          data:
                          - id: '36'
                            type: workflows
                      links:
                        self: "/publications/77?version=1"
                      meta:
                        created: '2022-05-12T14:15:23.000Z'
                        modified: '2022-05-12T14:15:23.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: e3085ca0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/samples":
    post:
      operationId: createSample
      summary: Create a new sample
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |-
        <a name="createSample"></a>A **createSample** operation creates a new, empty <a href="#samples">**Sample**</a>.

        The **createSample** operation returns a JSON object representing the newly created <a href="#samples">**Sample**</a> and redirects to its URL.
      tags:
      - create
      - samples
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/samplePost"
        description: The sample to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/sampleResponse"
              examples:
                response:
                  value:
                    data:
                      id: '2'
                      type: samples
                      attributes:
                        policy:
                          access: no_access
                          permissions: []
                        discussion_links: []
                        title: Hello
                        tags: []
                        created_at: '2022-05-12T14:14:19.000Z'
                        updated_at: '2022-05-12T14:14:19.000Z'
                        creators:
                        - profile: "/people/373"
                          family_name: Last
                          given_name: Person320
                          affiliation: 'An Institution: 381, An Institution: 383'
                          orcid: 
                        other_creators: 
                        attribute_map:
                          the_title: Hello
                          a_real_number: '2.6'
                      relationships:
                        creators:
                          data:
                          - id: '373'
                            type: people
                        submitter:
                          data:
                          - id: '373'
                            type: people
                        sample_type:
                          data:
                            id: '3'
                            type: sample_types
                        projects:
                          data:
                          - id: '425'
                            type: projects
                        data_files:
                          data: []
                        assays:
                          data: []
                        people:
                          data:
                          - id: '373'
                            type: people
                      links:
                        self: "/samples/2"
                      meta:
                        created: '2022-05-12T14:14:19.000Z'
                        modified: '2022-05-12T14:14:19.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: bd2f5d90-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/samples/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The sample to fetch, patch or delete
      schema:
        type: integer
    get:
      operationId: readSample
      summary: Fetch a sample
      description: |-
        <a name="readSampleType"></a>A **readSample** operation will return information about the <a href="#samples">Sample</a> identified, provided the authenticated user has access to it.

        The **readSample** operation returns a JSON object representing the <a href="#samples">**Sample**</a>.
      tags:
      - read
      - samples
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/sampleResponse"
              examples:
                response:
                  value:
                    data:
                      id: '7'
                      type: samples
                      attributes:
                        policy:
                          access: no_access
                          permissions: []
                        discussion_links: []
                        title: Fred Bloggs
                        tags: []
                        created_at: '2022-05-12T14:14:21.000Z'
                        updated_at: '2022-05-12T14:14:21.000Z'
                        creators: []
                        other_creators: 
                        attribute_map:
                          full_name: Fred Bloggs
                          address: HD
                          postcode: M13 9PL
                          CAPITAL key: key must remain capitalised
                      relationships:
                        creators:
                          data: []
                        submitter:
                          data:
                          - id: '395'
                            type: people
                        sample_type:
                          data:
                            id: '12'
                            type: sample_types
                        projects:
                          data:
                          - id: '448'
                            type: projects
                        data_files:
                          data: []
                        assays:
                          data: []
                        people:
                          data:
                          - id: '395'
                            type: people
                      links:
                        self: "/samples/7"
                      meta:
                        created: '2022-05-12T14:14:21.000Z'
                        modified: '2022-05-12T14:14:21.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: be5c9f80-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    patch:
      operationId: updateSample
      summary: Update a sample
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updateSample"></a>An **updateSample** operation will modify the information held about the specified <a href="#samples">**Sample**</a>. This operation is only available if the authenticated user has access to the <a href="#samples">**Sample**</a>.

        The **updateSample** operation returns a JSON object representing the modified <a href="#samples">**Sample**</a>.
      tags:
      - update
      - samples
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/samplePatch"
        description: The sample to update.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/sampleResponse"
              examples:
                response:
                  value:
                    data:
                      id: '8'
                      type: samples
                      attributes:
                        policy:
                          access: manage
                          permissions: []
                        discussion_links: []
                        title: changed title
                        tags: []
                        created_at: '2022-05-12T14:14:22.000Z'
                        updated_at: '2022-05-12T14:14:22.000Z'
                        creators: []
                        other_creators: 
                        attribute_map:
                          the_title: changed title
                      relationships:
                        creators:
                          data: []
                        submitter:
                          data:
                          - id: '397'
                            type: people
                        sample_type:
                          data:
                            id: '13'
                            type: sample_types
                        projects:
                          data:
                          - id: '452'
                            type: projects
                        data_files:
                          data: []
                        assays:
                          data: []
                        people:
                          data:
                          - id: '397'
                            type: people
                      links:
                        self: "/samples/8"
                      meta:
                        created: '2022-05-12T14:14:22.000Z'
                        modified: '2022-05-12T14:14:22.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: be8b9e60-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    delete:
      operationId: deleteSample
      summary: Delete a sample
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: <a name="deleteSample"></a>A **deleteSample** operation will delete
        the specified <a href="#samples">**Sample**</a>, if the authenticated user
        has sufficient access to it.
      tags:
      - delete
      - samples
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/sample_attribute_types":
    get:
      operationId: listSampleAttributeTypes
      summary: List possible sample attribute types
      description: <a name="listSampleAttributeTypes"></a>The **listSampleAttributeTypes**
        operation returns a JSON object containing a list of all the <a href="#sampleAttributeTypes">**SampleAttributeTypes**</a>
        to which the authenticated user has access.
      tags:
      - list
      - sampleAttributeTypes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data:
                    - id: '1'
                      type: sample_attribute_types
                      attributes:
                        title: Date time
                        base_type: DateTime
                        regexp: ".*"
                      links:
                        self: "/sample_attribute_types/1"
                    - id: '2'
                      type: sample_attribute_types
                      attributes:
                        title: Date
                        base_type: Date
                        regexp: ".*"
                      links:
                        self: "/sample_attribute_types/2"
                    - id: '3'
                      type: sample_attribute_types
                      attributes:
                        title: Real number
                        base_type: Float
                        regexp: ".*"
                      links:
                        self: "/sample_attribute_types/3"
                    - id: '4'
                      type: sample_attribute_types
                      attributes:
                        title: Integer
                        base_type: Integer
                        regexp: ".*"
                      links:
                        self: "/sample_attribute_types/4"
                    - id: '5'
                      type: sample_attribute_types
                      attributes:
                        title: Web link
                        base_type: String
                        regexp: |-
                          (?x-mi:(?=(?-mix:http|https):)
                                  ([a-zA-Z][\-+.a-zA-Z\d]*):                           (?# 1: scheme)
                                  (?:
                                     ((?:[\-_.!~*'()a-zA-Z\d;?:@&=+$,]|%[a-fA-F\d]{2})(?:[\-_.!~*'()a-zA-Z\d;\/?:@&=+$,\[\]]|%[a-fA-F\d]{2})*)                    (?# 2: opaque)
                                  |
                                     (?:(?:
                                       \/\/(?:
                                           (?:(?:((?:[\-_.!~*'()a-zA-Z\d;:&=+$,]|%[a-fA-F\d]{2})*)@)?        (?# 3: userinfo)
                                             (?:((?:(?:[a-zA-Z0-9\-.]|%\h\h)+|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|\[(?:(?:[a-fA-F\d]{1,4}:)*(?:[a-fA-F\d]{1,4}|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})|(?:(?:[a-fA-F\d]{1,4}:)*[a-fA-F\d]{1,4})?::(?:(?:[a-fA-F\d]{1,4}:)*(?:[a-fA-F\d]{1,4}|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}))?)\]))(?::(\d*))?))? (?# 4: host, 5: port)
                                         |
                                           ((?:[\-_.!~*'()a-zA-Z\d$,;:@&=+]|%[a-fA-F\d]{2})+)                 (?# 6: registry)
                                         )
                                       |
                                       (?!\/\/))                           (?# XXX: '\/\/' is the mark for hostport)
                                       (\/(?:[\-_.!~*'()a-zA-Z\d:@&=+$,]|%[a-fA-F\d]{2})*(?:;(?:[\-_.!~*'()a-zA-Z\d:@&=+$,]|%[a-fA-F\d]{2})*)*(?:\/(?:[\-_.!~*'()a-zA-Z\d:@&=+$,]|%[a-fA-F\d]{2})*(?:;(?:[\-_.!~*'()a-zA-Z\d:@&=+$,]|%[a-fA-F\d]{2})*)*)*)?                    (?# 7: path)
                                     )(?:\?((?:[\-_.!~*'()a-zA-Z\d;\/?:@&=+$,\[\]]|%[a-fA-F\d]{2})*))?                 (?# 8: query)
                                  )
                                  (?:\#((?:[\-_.!~*'()a-zA-Z\d;\/?:@&=+$,\[\]]|%[a-fA-F\d]{2})*))?                  (?# 9: fragment)
                                )
                      links:
                        self: "/sample_attribute_types/5"
                    - id: '6'
                      type: sample_attribute_types
                      attributes:
                        title: Email address
                        base_type: String
                        regexp: "(?-mix:\\A(?:[^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\u00ff]+|\\x22(?:[^\\x0d\\x22\\x5c\\u0080-\\u00ff]|\\x5c[\\x00-\\x7f])*\\x22)(?:\\x2e(?:[^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\u00ff]+|\\x22(?:[^\\x0d\\x22\\x5c\\u0080-\\u00ff]|\\x5c[\\x00-\\x7f])*\\x22))*\\x40(?:(?:(?:[a-zA-Z\\d](?:[-a-zA-Z\\d]*[a-zA-Z\\d])?)\\.)*(?:[a-zA-Z](?:[-a-zA-Z\\d]*[a-zA-Z\\d])?)\\.?)?[^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\u00ff]+\\z)"
                      links:
                        self: "/sample_attribute_types/6"
                    - id: '7'
                      type: sample_attribute_types
                      attributes:
                        title: Text
                        base_type: Text
                        regexp: ".*"
                      links:
                        self: "/sample_attribute_types/7"
                    - id: '8'
                      type: sample_attribute_types
                      attributes:
                        title: String
                        base_type: String
                        regexp: ".*"
                      links:
                        self: "/sample_attribute_types/8"
                    - id: '9'
                      type: sample_attribute_types
                      attributes:
                        title: CHEBI ID
                        base_type: String
                        regexp: CHEBI:[0-9]+
                      links:
                        self: "/sample_attribute_types/9"
                    - id: '10'
                      type: sample_attribute_types
                      attributes:
                        title: Boolean
                        base_type: Boolean
                        regexp: ".*"
                      links:
                        self: "/sample_attribute_types/10"
                    - id: '11'
                      type: sample_attribute_types
                      attributes:
                        title: SEEK Strain
                        base_type: SeekStrain
                        regexp: ".*"
                      links:
                        self: "/sample_attribute_types/11"
                    - id: '12'
                      type: sample_attribute_types
                      attributes:
                        title: SEEK Sample
                        base_type: SeekSample
                        regexp: ".*"
                      links:
                        self: "/sample_attribute_types/12"
                    - id: '13'
                      type: sample_attribute_types
                      attributes:
                        title: Controlled Vocabulary
                        base_type: CV
                        regexp: ".*"
                      links:
                        self: "/sample_attribute_types/13"
                    - id: '14'
                      type: sample_attribute_types
                      attributes:
                        title: URI
                        base_type: String
                        regexp: |-
                          (?x-mi:
                                  ([a-zA-Z][\-+.a-zA-Z\d]*):                           (?# 1: scheme)
                                  (?:
                                     ((?:[\-_.!~*'()a-zA-Z\d;?:@&=+$,]|%[a-fA-F\d]{2})(?:[\-_.!~*'()a-zA-Z\d;\/?:@&=+$,\[\]]|%[a-fA-F\d]{2})*)                    (?# 2: opaque)
                                  |
                                     (?:(?:
                                       \/\/(?:
                                           (?:(?:((?:[\-_.!~*'()a-zA-Z\d;:&=+$,]|%[a-fA-F\d]{2})*)@)?        (?# 3: userinfo)
                                             (?:((?:(?:[a-zA-Z0-9\-.]|%\h\h)+|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|\[(?:(?:[a-fA-F\d]{1,4}:)*(?:[a-fA-F\d]{1,4}|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})|(?:(?:[a-fA-F\d]{1,4}:)*[a-fA-F\d]{1,4})?::(?:(?:[a-fA-F\d]{1,4}:)*(?:[a-fA-F\d]{1,4}|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}))?)\]))(?::(\d*))?))? (?# 4: host, 5: port)
                                         |
                                           ((?:[\-_.!~*'()a-zA-Z\d$,;:@&=+]|%[a-fA-F\d]{2})+)                 (?# 6: registry)
                                         )
                                       |
                                       (?!\/\/))                           (?# XXX: '\/\/' is the mark for hostport)
                                       (\/(?:[\-_.!~*'()a-zA-Z\d:@&=+$,]|%[a-fA-F\d]{2})*(?:;(?:[\-_.!~*'()a-zA-Z\d:@&=+$,]|%[a-fA-F\d]{2})*)*(?:\/(?:[\-_.!~*'()a-zA-Z\d:@&=+$,]|%[a-fA-F\d]{2})*(?:;(?:[\-_.!~*'()a-zA-Z\d:@&=+$,]|%[a-fA-F\d]{2})*)*)*)?                    (?# 7: path)
                                     )(?:\?((?:[\-_.!~*'()a-zA-Z\d;\/?:@&=+$,\[\]]|%[a-fA-F\d]{2})*))?                 (?# 8: query)
                                  )
                                  (?:\#((?:[\-_.!~*'()a-zA-Z\d;\/?:@&=+$,\[\]]|%[a-fA-F\d]{2})*))?                  (?# 9: fragment)
                                )
                      links:
                        self: "/sample_attribute_types/14"
                    - id: '15'
                      type: sample_attribute_types
                      attributes:
                        title: NCBI ID
                        base_type: String
                        regexp: "[0-9]+"
                      links:
                        self: "/sample_attribute_types/15"
                    - id: '16'
                      type: sample_attribute_types
                      attributes:
                        title: ChEBI
                        base_type: String
                        regexp: "^CHEBI:\\d+$"
                      links:
                        self: "/sample_attribute_types/16"
                    - id: '17'
                      type: sample_attribute_types
                      attributes:
                        title: ECN
                        base_type: String
                        regexp: "[0-9\\.]+"
                      links:
                        self: "/sample_attribute_types/17"
                    - id: '18'
                      type: sample_attribute_types
                      attributes:
                        title: MetaNetX chemical
                        base_type: String
                        regexp: MNXM\d+
                      links:
                        self: "/sample_attribute_types/18"
                    - id: '19'
                      type: sample_attribute_types
                      attributes:
                        title: MetaNetX reaction
                        base_type: String
                        regexp: MNXR\d+
                      links:
                        self: "/sample_attribute_types/19"
                    - id: '20'
                      type: sample_attribute_types
                      attributes:
                        title: MetaNetX compartment
                        base_type: String
                        regexp: MNX[CD]\d+
                      links:
                        self: "/sample_attribute_types/20"
                    - id: '21'
                      type: sample_attribute_types
                      attributes:
                        title: InChI
                        base_type: String
                        regexp: "^InChI\\=1S?\\/[A-Za-z0-9\\.]+(\\+[0-9]+)?(\\/[cnpqbtmsih][A-Za-z0-9\\-\\+\\(\\)\\,\\/\\?\\;\\.]+)*$"
                      links:
                        self: "/sample_attribute_types/21"
                    - id: '22'
                      type: sample_attribute_types
                      attributes:
                        title: DOI
                        base_type: String
                        regexp: "(DOI:)?(.*)"
                      links:
                        self: "/sample_attribute_types/22"
                    - id: '23'
                      type: sample_attribute_types
                      attributes:
                        title: SEEK Data file
                        base_type: SeekDataFile
                        regexp: ".*"
                      links:
                        self: "/sample_attribute_types/23"
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/sample_attribute_types"
                    meta:
                      base_url: http://fairdomhub.org
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
  "/sample_types":
    get:
      operationId: listSampleTypes
      summary: List sample types
      description: '<a name="listSampleTypes"></a>The **listSampleTypes** operation
        returns a JSON object containing a list of all the <a href="#sampleTypes">**SampleTypes**</a>
        to which the authenticated user has access.

        '
      tags:
      - list
      - sampleTypes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data: []
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/sample_types?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/sample_types?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/sample_types?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
    post:
      operationId: createSampleType
      summary: Create a new sample type
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="createSampleType"></a>A **createSampleType** operation creates a new instance of a <a href="#sampleTypes">**SampleType**</a>. The instance is populated with the content of the body of the API call.

        The **createSampleType** operation returns a JSON object representing the newly created <a href="#sampleTypes">**SampleType**</a> and redirects to its URL.
      tags:
      - create
      - sampleTypes
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sampleTypePost"
        description: The sampleType to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/sampleTypeResponse"
              examples:
                response:
                  value:
                    data:
                      id: '17'
                      type: sample_types
                      attributes:
                        title: A Maximal SampleType
                        description: A very new research
                        sample_attributes:
                        - id: '27'
                          title: full name
                          description: 
                          pid: 
                          sample_attribute_type:
                            id: '26'
                            title: String attribute type 13
                            base_type: String
                            regexp: ".*"
                          required: true
                          pos: 1
                          unit: 
                          is_title: true
                          sample_controlled_vocab_id: 
                          linked_sample_type_id: 
                        tags: []
                      relationships:
                        projects:
                          data:
                          - id: '893'
                            type: projects
                        samples:
                          data: []
                        submitter:
                          data:
                          - id: '820'
                            type: people
                        assays:
                          data:
                          - id: '122'
                            type: assays
                      links:
                        self: "/sample_types/17"
                      meta:
                        created: '2022-05-12T14:15:16.000Z'
                        modified: '2022-05-12T14:15:16.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: df01dff0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/sample_types/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The sample type to be fetched, updated or deleted
      schema:
        type: integer
    get:
      operationId: readSampleType
      summary: Fetch a sample type
      description: |
        <a name="readSampleType"></a>A **readSampleType** operation will return information about the <a href="#sampleTypes">SampleType</a> identified, provided the authenticated user has access to it.

        The **readSampleType** operation returns a JSON object representing the <a href="#sampleTypes">**SampleType**</a>.
      tags:
      - read
      - sampleTypes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/sampleTypeResponse"
              examples:
                response:
                  value:
                    data:
                      id: '22'
                      type: sample_types
                      attributes:
                        title: A Maximal SampleType
                        description: A very new research
                        sample_attributes:
                        - id: '35'
                          title: full_name
                          description: the persons full name
                          pid: 
                          sample_attribute_type:
                            id: '34'
                            title: Full name
                            base_type: String
                            regexp: "[A-Z][a-z]+[ ][A-Z][a-z]+"
                          required: true
                          pos: 1
                          unit: 
                          is_title: true
                          sample_controlled_vocab_id: 
                          linked_sample_type_id: 
                        - id: '36'
                          title: address
                          description: 
                          pid: 
                          sample_attribute_type:
                            id: '35'
                            title: Address
                            base_type: Text
                            regexp: ".*"
                          required: false
                          pos: 2
                          unit: 
                          is_title: false
                          sample_controlled_vocab_id: 
                          linked_sample_type_id: 
                        - id: '37'
                          title: postcode
                          description: 
                          pid: dc:postcode
                          sample_attribute_type:
                            id: '36'
                            title: Post Code
                            base_type: String
                            regexp: "^([A-PR-UWYZ0-9][A-HK-Y0-9][AEHMNPRTVXY0-9]?[ABEHMNPRVWXY0-9]?
                              {1,2}[0-9][ABD-HJLN-UW-Z]{2}|GIR 0AA)$"
                          required: false
                          pos: 3
                          unit: 
                          is_title: false
                          sample_controlled_vocab_id: 
                          linked_sample_type_id: 
                        - id: '38'
                          title: CAPITAL key
                          description: 
                          pid: 
                          sample_attribute_type:
                            id: '37'
                            title: String
                            base_type: String
                            regexp: ".*"
                          required: false
                          pos: 4
                          unit: 
                          is_title: false
                          sample_controlled_vocab_id: 
                          linked_sample_type_id: 
                        tags:
                        - tag1
                        - tag2
                      relationships:
                        projects:
                          data:
                          - id: '906'
                            type: projects
                        samples:
                          data: []
                        submitter:
                          data:
                          - id: '833'
                            type: people
                        assays:
                          data:
                          - id: '126'
                            type: assays
                      links:
                        self: "/sample_types/22"
                      meta:
                        created: '2022-05-12T14:15:18.000Z'
                        modified: '2022-05-12T14:15:18.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: dfd9b930-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    patch:
      operationId: updateSampleType
      summary: Update a sample type
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updateSampleType"></a>An **updateSampleType** operation will modify the information held about the specified <a href="#sampleTypes">**SampleType**</a>. This operation is only available if the authenticated user has access to the <a href="#sampleTypes">**SampleType**</a>.

        The **updateSampleType** operation returns a JSON object representing the modified <a href="#sampleTypes">**SampleType**</a>.
      tags:
      - update
      - sampleTypes
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sampleTypePatch"
        description: The sample type to patch
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/sampleTypeResponse"
              examples:
                response:
                  value:
                    data:
                      id: '23'
                      type: sample_types
                      attributes:
                        title: This is a new title.
                        description: 
                        sample_attributes:
                        - id: '39'
                          title: This is a new attribute title
                          description: 
                          pid: 
                          sample_attribute_type:
                            id: '38'
                            title: String attribute type 16
                            base_type: String
                            regexp: ".*"
                          required: true
                          pos: 1
                          unit: 
                          is_title: true
                          sample_controlled_vocab_id: 
                          linked_sample_type_id: 
                        tags: []
                      relationships:
                        projects:
                          data:
                          - id: '908'
                            type: projects
                        samples:
                          data: []
                        submitter:
                          data:
                          - id: '835'
                            type: people
                        assays:
                          data:
                          - id: '127'
                            type: assays
                      links:
                        self: "/sample_types/23"
                      meta:
                        created: '2022-05-12T14:15:18.000Z'
                        modified: '2022-05-12T14:15:18.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: dffe7bf0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    delete:
      operationId: deleteSampleType
      summary: Delete a sample type
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: "<a name=\"deleteSampleType\"></a>A **deleteSampleType** operation
        will delete the specified <a href=\"#sampleTypes\">**SampleType**</a>, if
        the authenticated user has sufficient access to it.\n\n"
      tags:
      - delete
      - sampleTypes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/sops":
    get:
      operationId: listSops
      summary: List sops
      description: '<a name="listSops"></a>The **listSops** operation returns a JSON
        object containing a list of all the <a href="#sops">**Sops**</a> to which
        the authenticated user has access.

        '
      tags:
      - list
      - sops
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data:
                    - id: '10'
                      type: sops
                      attributes:
                        title: This Sop
                      links:
                        self: "/sops/10"
                    - id: '9'
                      type: sops
                      attributes:
                        title: This Sop
                      links:
                        self: "/sops/9"
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/sops?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/sops?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/sops?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
    post:
      operationId: createSop
      summary: Create a new sop
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="createSop"></a>A **createSop** operation creates a new instance of a <a href="#sops">**Sop**</a>. The instance is populated with the content of the body of the API call.

        The **createSop** operation returns a JSON object representing the newly created <a href="#sops">**Sop**</a> and redirects to its URL.
      tags:
      - create
      - sops
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sopPost"
        description: The sop to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/sopResponse"
              examples:
                response:
                  value:
                    data:
                      id: '6'
                      type: sops
                      attributes:
                        policy:
                          access: download
                          permissions:
                          - resource:
                              id: '86'
                              type: projects
                            access: edit
                        discussion_links: []
                        title: A Maximal SOP
                        license: CC-BY-4.0
                        description: This is the description
                        latest_version: 1
                        tags:
                        - tag1
                        - tag2
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/sops/6?version=1
                          doi: 
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:13:38.000Z'
                        updated_at: '2022-05-12T14:13:38.000Z'
                        doi: 
                        content_blobs:
                        - original_filename: a_pdf_file.pdf
                          url: 
                          md5sum: 
                          sha1sum: 
                          content_type: application/pdf
                          link: http://localhost:3000/sops/6/content_blobs/33
                          size: 
                        creators:
                        - profile: "/people/71"
                          family_name: Last
                          given_name: Person60
                          affiliation: 'An Institution: 75'
                          orcid: 
                        other_creators: John Smith, Jane Smith
                      relationships:
                        creators:
                          data:
                          - id: '71'
                            type: people
                        submitter:
                          data:
                          - id: '70'
                            type: people
                        people:
                          data:
                          - id: '70'
                            type: people
                          - id: '71'
                            type: people
                        projects:
                          data:
                          - id: '86'
                            type: projects
                        investigations:
                          data:
                          - id: '15'
                            type: investigations
                        studies:
                          data:
                          - id: '13'
                            type: studies
                        assays:
                          data:
                          - id: '11'
                            type: assays
                        publications:
                          data: []
                        workflows:
                          data:
                          - id: '3'
                            type: workflows
                      links:
                        self: "/sops/6?version=1"
                      meta:
                        created: '2022-05-12T14:13:37.000Z'
                        modified: '2022-05-12T14:13:38.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: a42587f0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/sops/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The SOP to fetch, patch or delete
      schema:
        type: integer
      example: 203
    get:
      operationId: readSop
      summary: Fetch a sop
      description: |
        <a name="readSop"></a>A **readSop** operation will return information about the <a href="#sops">Sop</a> identified, provided the authenticated user has access to it.

        The **readSop** operation returns a JSON object representing the <a href="#sops">**Sop**</a>.
      parameters:
      - name: version
        in: query
        required: true
        description: The version of the sop to get
        schema:
          type: integer
        example: 1
      tags:
      - read
      - sops
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/sopResponse"
              examples:
                response:
                  value:
                    data:
                      id: '15'
                      type: sops
                      attributes:
                        policy:
                          access: no_access
                          permissions: []
                        discussion_links:
                        - id: '18'
                          label: Slack
                          url: http://www.slack.com/
                        title: A Maximal Sop
                        license: 
                        description: How to run a simulation in GROMACS
                        latest_version: 1
                        tags:
                        - Sop-tag1
                        - Sop-tag2
                        - Sop-tag3
                        - Sop-tag4
                        - Sop-tag5
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/sops/15?version=1
                          doi: 
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:13:49.000Z'
                        updated_at: '2022-05-12T14:13:49.000Z'
                        doi: 
                        content_blobs:
                        - original_filename: min file
                          url: 
                          md5sum: 726de0a3f94d65056b909b9736e10349
                          sha1sum: fbcc0dee4b5415de4c82ef5b137d8231fec1331b
                          content_type: application/pdf
                          link: http://localhost:3000/sops/15/content_blobs/74
                          size: 8
                        creators:
                        - profile: "/people/151"
                          family_name: One
                          given_name: Some
                          affiliation: University of Somewhere
                          orcid: 
                        other_creators: Blogs, Joe
                      relationships:
                        creators:
                          data:
                          - id: '151'
                            type: people
                        submitter:
                          data:
                          - id: '152'
                            type: people
                        people:
                          data:
                          - id: '151'
                            type: people
                          - id: '152'
                            type: people
                        projects:
                          data:
                          - id: '166'
                            type: projects
                        investigations:
                          data:
                          - id: '33'
                            type: investigations
                        studies:
                          data:
                          - id: '29'
                            type: studies
                        assays:
                          data:
                          - id: '25'
                            type: assays
                        publications:
                          data:
                          - id: '10'
                            type: publications
                        workflows:
                          data:
                          - id: '9'
                            type: workflows
                      links:
                        self: "/sops/15?version=1"
                      meta:
                        created: '2022-05-12T14:13:49.000Z'
                        modified: '2022-05-12T14:13:49.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: aab79c90-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    patch:
      operationId: updateSop
      summary: Update a sop
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updateSop"></a>An **updateSop** operation will modify the information held about the specified <a href="#sops">**Sop**</a>. This operation is only available if the authenticated user has access to the <a href="#sops">**Sop**</a>.

        The **updateSop** operation returns a JSON object representing the modified <a href="#sops">**Sop**</a>.
      tags:
      - update
      - sops
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/sopPatch"
        description: The sop to update.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/sopResponse"
              examples:
                response:
                  value:
                    data:
                      id: '16'
                      type: sops
                      attributes:
                        policy:
                          access: no_access
                          permissions:
                          - resource:
                              id: '176'
                              type: projects
                            access: edit
                        discussion_links: []
                        title: A Maximally Patched SOP
                        license: CC-BY-4.0
                        description: Protocol
                        latest_version: 1
                        tags:
                        - tag1
                        - tag2
                        - tag3
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/sops/16?version=1
                          doi: 
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:13:49.000Z'
                        updated_at: '2022-05-12T14:13:49.000Z'
                        doi: 
                        content_blobs:
                        - original_filename: sop.pdf
                          url: 
                          md5sum: 6ddc17b4a0c855caeac11795f8ec3952
                          sha1sum: ca9a684491b64779526a29576be7fae1bb7c9c9b
                          content_type: application/pdf
                          link: http://localhost:3000/sops/16/content_blobs/75
                          size: 9
                        creators:
                        - profile: "/people/155"
                          family_name: Last
                          given_name: Person133
                          affiliation: 'An Institution: 159'
                          orcid: 
                        other_creators: John Smith, Jane Smith
                      relationships:
                        creators:
                          data:
                          - id: '155'
                            type: people
                        submitter:
                          data:
                          - id: '154'
                            type: people
                        people:
                          data:
                          - id: '154'
                            type: people
                          - id: '155'
                            type: people
                        projects:
                          data:
                          - id: '176'
                            type: projects
                        investigations:
                          data:
                          - id: '34'
                            type: investigations
                        studies:
                          data:
                          - id: '30'
                            type: studies
                        assays:
                          data:
                          - id: '26'
                            type: assays
                        publications:
                          data: []
                        workflows:
                          data:
                          - id: '10'
                            type: workflows
                      links:
                        self: "/sops/16?version=1"
                      meta:
                        created: '2022-05-12T14:13:49.000Z'
                        modified: '2022-05-12T14:13:49.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: ab0dc0d0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    delete:
      operationId: deleteSop
      summary: Delete a sop
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: "<a name=\"deleteSop\"></a>A **deleteSop** operation will delete
        the specified <a href=\"#sops\">**Sop**</a>, if the authenticated user has
        sufficient access to it.\n\n"
      tags:
      - delete
      - sops
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/studies":
    get:
      operationId: listStudies
      summary: List studies
      description: '<a name="listStudies"></a>The **listStudys** operation returns
        a JSON object containing a list of all the Studys to which the authenticated
        user has access.

        '
      tags:
      - list
      - studies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data:
                    - id: '105'
                      type: studies
                      attributes:
                        title: Study92
                      links:
                        self: "/studies/105"
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/studies?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/studies?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/studies?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
    post:
      operationId: createStudy
      summary: Create a new study
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="createStudy"></a>A **createStudy** operation creates a new instance of a <a href="#studies">**Study**</a>. The instance is populated with the content of the body of the API call.

        The **createStudy** operation returns a JSON object representing the newly created <a href="#studies">**Study**</a> and redirects to its URL.
      tags:
      - create
      - studies
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/studyPost"
        description: The study to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/studyResponse"
              examples:
                response:
                  value:
                    data:
                      id: '98'
                      type: studies
                      attributes:
                        policy:
                          access: download
                          permissions:
                          - resource:
                              id: '604'
                              type: projects
                            access: view
                        discussion_links: []
                        snapshots: []
                        title: A Maximal Study
                        description: The Study of many things
                        experimentalists: Wet lab people
                        other_creators: Marie Curie
                        position: 
                        creators:
                        - profile: "/people/553"
                          family_name: Last
                          given_name: Person472
                          affiliation: 'An Institution: 565'
                          orcid: 
                      relationships:
                        creators:
                          data:
                          - id: '553'
                            type: people
                        submitter:
                          data:
                          - id: '553'
                            type: people
                        people:
                          data:
                          - id: '553'
                            type: people
                        projects:
                          data:
                          - id: '604'
                            type: projects
                        investigation:
                          data:
                            id: '113'
                            type: investigations
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data:
                          - id: '51'
                            type: publications
                        documents:
                          data: []
                      links:
                        self: "/studies/98"
                      meta:
                        created: '2022-05-12T14:14:41.000Z'
                        modified: '2022-05-12T14:14:41.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: c9fa39b0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/studies/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The study to fetch, patch or delete
      schema:
        type: integer
      example: 138
    get:
      operationId: readStudy
      summary: Fetch a study
      description: |
        <a name="readStudy"></a>A **readStudy** operation will return information about the <a href="#studies">Study</a> identified, provided the authenticated user has access to it.

        The **readStudy** operation returns a JSON object representing the <a href="#studies">**Study**</a>.
      tags:
      - read
      - studies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/studyResponse"
              examples:
                response:
                  value:
                    data:
                      id: '113'
                      type: studies
                      attributes:
                        policy:
                          access: no_access
                          permissions: []
                        discussion_links:
                        - id: '52'
                          label: Slack
                          url: http://www.slack.com/
                        snapshots: []
                        title: A Maximal Study
                        description: The Study of many things
                        experimentalists: Wet lab people
                        other_creators: Marie Curie
                        position: 
                        creators:
                        - profile: "/people/579"
                          family_name: One
                          given_name: Some
                          affiliation: University of Somewhere
                          orcid: 
                      relationships:
                        creators:
                          data:
                          - id: '579'
                            type: people
                        submitter:
                          data:
                          - id: '577'
                            type: people
                        people:
                          data:
                          - id: '577'
                            type: people
                          - id: '579'
                            type: people
                        projects:
                          data:
                          - id: '632'
                            type: projects
                        investigation:
                          data:
                            id: '126'
                            type: investigations
                        assays:
                          data:
                          - id: '93'
                            type: assays
                        data_files:
                          data:
                          - id: '46'
                            type: data_files
                        models:
                          data:
                          - id: '96'
                            type: models
                        sops:
                          data:
                          - id: '36'
                            type: sops
                        publications:
                          data:
                          - id: '55'
                            type: publications
                        documents:
                          data:
                          - id: '38'
                            type: documents
                      links:
                        self: "/studies/113"
                      meta:
                        created: '2022-05-12T14:14:46.000Z'
                        modified: '2022-05-12T14:14:46.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: cd269e30-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    patch:
      operationId: updateStudy
      summary: Update a study
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updateStudy"></a>An **updateStudy** operation will modify the information held about the specified <a href="#studies">**Study**</a>. This operation is only available if the authenticated user has access to the <a href="#studies">**Study**</a>.

        The **updateStudy** operation returns a JSON object representing the modified <a href="#studies">**Study**</a>.
      tags:
      - update
      - studies
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/studyPatch"
        description: The study to update.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/studyResponse"
              examples:
                response:
                  value:
                    data:
                      id: '114'
                      type: studies
                      attributes:
                        policy:
                          access: download
                          permissions:
                          - resource:
                              id: '649'
                              type: projects
                            access: view
                        discussion_links: []
                        snapshots: []
                        title: A Maximal Study
                        description: The Study of many things
                        experimentalists: Wet lab people
                        other_creators: Marie Curie
                        position: 
                        creators:
                        - profile: "/people/593"
                          family_name: Last
                          given_name: Person505
                          affiliation: 'An Institution: 605'
                          orcid: 
                      relationships:
                        creators:
                          data:
                          - id: '593'
                            type: people
                        submitter:
                          data:
                          - id: '593'
                            type: people
                        people:
                          data:
                          - id: '593'
                            type: people
                        projects:
                          data:
                          - id: '649'
                            type: projects
                        investigation:
                          data:
                            id: '132'
                            type: investigations
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data:
                          - id: '56'
                            type: publications
                        documents:
                          data: []
                      links:
                        self: "/studies/114"
                      meta:
                        created: '2022-05-12T14:14:47.000Z'
                        modified: '2022-05-12T14:14:47.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: cd715af0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    delete:
      operationId: deleteStudy
      summary: Delete a study
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: "<a name=\"deleteStudy\"></a>A **deleteStudy** operation will delete
        the specified <a href=\"#studies\">**Study**</a>, if the authenticated user
        has sufficient access to it.\n\n"
      tags:
      - delete
      - studies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
  "/workflows":
    get:
      operationId: listWorkflows
      summary: List workflows
      description: '<a name="listWorkflows"></a>The **listWorkflows** operation returns
        a JSON object containing a list of all the Workflows to which the authenticated
        user has access.

        '
      tags:
      - list
      - workflows
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/indexResponse"
              examples:
                response:
                  value:
                    data: []
                    jsonapi:
                      version: '1.0'
                    links:
                      self: "/workflows?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      first: "/workflows?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                      prev: 
                      next: 
                      last: "/workflows?page%5Bnumber%5D=1&page%5Bsize%5D=1000000"
                    meta:
                      base_url: http://localhost:3000
                      api_version: '0.3'
        '501':
          "$ref": "#/components/responses/notImplemented"
    post:
      operationId: createWorkflow
      summary: Create a new workflow
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="createWorkflow"></a>A **createWorkflow** operation creates a new instance of a <a href="#workflows">**Workflow**</a>. The instance is populated with the content of the body of the API call.

        Please note that when linking a workflow to a data file it currently isn't possible to define the relationship type (e.g test data, example data) through the api.

        The **createWorkflow** operation returns a JSON object representing the newly created <a href="#workflows">**Workflow**</a> and redirects to its URL.
      tags:
      - create
      - workflows
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workflowPost"
        description: The workflow to create.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/workflowResponse"
              examples:
                response:
                  value:
                    data:
                      id: '38'
                      type: workflows
                      attributes:
                        policy:
                          access: download
                          permissions:
                          - resource:
                              id: '965'
                              type: projects
                            access: edit
                        discussion_links: []
                        title: A Maximal Workflow
                        license: CC-BY-4.0
                        description: This is the description
                        latest_version: 1
                        tags:
                        - tag1
                        - tag2
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/workflows/38?version=1
                          doi: 
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:15:24.000Z'
                        updated_at: '2022-05-12T14:15:24.000Z'
                        doi: 
                        content_blobs:
                        - original_filename: rp2-to-rp2path.cwl
                          url: 
                          md5sum: 
                          sha1sum: 
                          content_type: application/x-yaml
                          link: http://localhost:3000/workflows/38/content_blobs/382
                          size: 
                        creators:
                        - profile: "/people/889"
                          family_name: Last
                          given_name: Person746
                          affiliation: 'An Institution: 903'
                          orcid: 
                        other_creators: John Smith, Jane Smith
                        workflow_class:
                          title: Common Workflow Language
                          key: cwl
                          description: Common Workflow Language
                        edam_operations:
                        - label: Clustering
                          identifier: http://edamontology.org/operation_3432
                        - label: Expression correlation analysis
                          identifier: http://edamontology.org/operation_3463
                        edam_topics:
                        - label: Biomedical science
                          identifier: http://edamontology.org/topic_3344
                        - label: Chemistry
                          identifier: http://edamontology.org/topic_3314
                        internals: {}
                      relationships:
                        creators:
                          data:
                          - id: '889'
                            type: people
                        submitter:
                          data:
                          - id: '888'
                            type: people
                        people:
                          data:
                          - id: '888'
                            type: people
                          - id: '889'
                            type: people
                        projects:
                          data:
                          - id: '965'
                            type: projects
                        investigations:
                          data:
                          - id: '178'
                            type: investigations
                        studies:
                          data:
                          - id: '155'
                            type: studies
                        assays:
                          data:
                          - id: '130'
                            type: assays
                        publications:
                          data:
                          - id: '78'
                            type: publications
                        sops:
                          data:
                          - id: '50'
                            type: sops
                        presentations:
                          data:
                          - id: '29'
                            type: presentations
                        data_files:
                          data:
                          - id: '55'
                            type: data_files
                        documents:
                          data:
                          - id: '64'
                            type: documents
                      links:
                        self: "/workflows/38?version=1"
                      meta:
                        created: '2022-05-12T14:15:24.000Z'
                        modified: '2022-05-12T14:15:24.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: e3c02df0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '400':
          "$ref": "#/components/responses/badRequest"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
  "/workflows/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The workflow to fetch, patch or delete
      schema:
        type: integer
      example: 138
    get:
      operationId: readWorkflow
      summary: Fetch a workflow
      description: |
        <a name="readWorkflow"></a>A **readWorkflow** operation will return information about the <a href="#workflows">Workflow</a> identified, provided the authenticated user has access to it.

        Please note that currently the type of relationship between a linked workflow and data file (e.g. test or example data) isn't described through the api.

        The **readWorkflow** operation returns a JSON object representing the <a href="#workflows">**Workflow**</a>.
      tags:
      - read
      - workflows
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/workflowResponse"
              examples:
                response:
                  value:
                    data:
                      id: '43'
                      type: workflows
                      attributes:
                        policy:
                          access: no_access
                          permissions: []
                        discussion_links:
                        - id: '82'
                          label: Slack
                          url: http://www.slack.com/
                        title: A Maximal Workflow
                        license: 
                        description: How to run a simulation in GROMACS
                        latest_version: 1
                        tags:
                        - Workflow-tag1
                        - Workflow-tag2
                        - Workflow-tag3
                        - Workflow-tag4
                        - Workflow-tag5
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/workflows/43?version=1
                          doi: 
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:15:28.000Z'
                        updated_at: '2022-05-12T14:15:28.000Z'
                        doi: 
                        content_blobs:
                        - original_filename: rp2-to-rp2path.cwl
                          url: 
                          md5sum: ef2ea32522098acc937199f6c2b64f41
                          sha1sum: a5133ccdb0376324d039431e4eff4f7d21a751cd
                          content_type: application/x-yaml
                          link: http://localhost:3000/workflows/43/content_blobs/399
                          size: 732
                        creators:
                        - profile: "/people/914"
                          family_name: One
                          given_name: Some
                          affiliation: University of Somewhere
                          orcid: 
                        other_creators: Blogs, Joe
                        workflow_class:
                          title: Common Workflow Language
                          key: cwl
                          description: Common Workflow Language
                        edam_operations:
                        - label: Clustering
                          identifier: http://edamontology.org/operation_3432
                        edam_topics:
                        - label: Chemistry
                          identifier: http://edamontology.org/topic_3314
                        internals: {}
                      relationships:
                        creators:
                          data:
                          - id: '914'
                            type: people
                        submitter:
                          data:
                          - id: '915'
                            type: people
                        people:
                          data:
                          - id: '914'
                            type: people
                          - id: '915'
                            type: people
                        projects:
                          data:
                          - id: '994'
                            type: projects
                        investigations:
                          data:
                          - id: '182'
                            type: investigations
                        studies:
                          data:
                          - id: '159'
                            type: studies
                        assays:
                          data:
                          - id: '134'
                            type: assays
                        publications:
                          data:
                          - id: '82'
                            type: publications
                        sops:
                          data: []
                        presentations:
                          data: []
                        data_files:
                          data: []
                        documents:
                          data: []
                      links:
                        self: "/workflows/43?version=1"
                      meta:
                        created: '2022-05-12T14:15:28.000Z'
                        modified: '2022-05-12T14:15:28.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: e5e5e170-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
    patch:
      operationId: updateWorkflow
      summary: Update a workflow
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: |
        <a name="updateWorkflow"></a>An **updateWorkflow** operation will modify the information held about the specified <a href="#workflows">**Workflow**</a>. This operation is only available if the authenticated user has access to the <a href="#workflows">**Workflow**</a>.

        Please note that when linking a workflow to a data file it currently isn't possible to define the relationship type (e.g test data, example data) through the api.

        The **updateWorkflow** operation returns a JSON object representing the modified <a href="#workflows">**Workflow**</a>.
      tags:
      - update
      - workflows
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/workflowPatch"
        description: The workflow to update.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/workflowResponse"
              examples:
                response:
                  value:
                    data:
                      id: '44'
                      type: workflows
                      attributes:
                        policy:
                          access: no_access
                          permissions:
                          - resource:
                              id: '996'
                              type: projects
                            access: edit
                        discussion_links: []
                        title: A Maximally Patched Workflow
                        license: CC-BY-4.0
                        description: A workflow to do important stuff
                        latest_version: 1
                        tags:
                        - tag1
                        - tag2
                        - tag3
                        versions:
                        - version: 1
                          revision_comments: 
                          url: http://localhost:3000/workflows/44?version=1
                          doi: 
                        version: 1
                        revision_comments: 
                        created_at: '2022-05-12T14:15:29.000Z'
                        updated_at: '2022-05-12T14:15:29.000Z'
                        doi: 
                        content_blobs:
                        - original_filename: workflow.cwl
                          url: 
                          md5sum: ef2ea32522098acc937199f6c2b64f41
                          sha1sum: a5133ccdb0376324d039431e4eff4f7d21a751cd
                          content_type: application/x-yaml
                          link: http://localhost:3000/workflows/44/content_blobs/404
                          size: 732
                        creators:
                        - profile: "/people/918"
                          family_name: Last
                          given_name: Person770
                          affiliation: 'An Institution: 932'
                          orcid: 
                        other_creators: John Smith, Jane Smith
                        workflow_class:
                          title: Common Workflow Language
                          key: cwl
                          description: Common Workflow Language
                        edam_operations:
                        - label: Clustering
                          identifier: http://edamontology.org/operation_3432
                        - label: Correlation
                          identifier: http://edamontology.org/operation_3465
                        edam_topics:
                        - label: Chemistry
                          identifier: http://edamontology.org/topic_3314
                        - label: Sample collections
                          identifier: http://edamontology.org/topic_3277
                        internals: {}
                      relationships:
                        creators:
                          data:
                          - id: '918'
                            type: people
                        submitter:
                          data:
                          - id: '917'
                            type: people
                        people:
                          data:
                          - id: '917'
                            type: people
                          - id: '918'
                            type: people
                        projects:
                          data:
                          - id: '996'
                            type: projects
                        investigations:
                          data:
                          - id: '183'
                            type: investigations
                        studies:
                          data:
                          - id: '160'
                            type: studies
                        assays:
                          data:
                          - id: '135'
                            type: assays
                        publications:
                          data:
                          - id: '83'
                            type: publications
                        sops:
                          data:
                          - id: '53'
                            type: sops
                        presentations:
                          data:
                          - id: '32'
                            type: presentations
                        data_files:
                          data:
                          - id: '58'
                            type: data_files
                        documents:
                          data:
                          - id: '67'
                            type: documents
                      links:
                        self: "/workflows/44?version=1"
                      meta:
                        created: '2022-05-12T14:15:29.000Z'
                        modified: '2022-05-12T14:15:29.000Z'
                        api_version: '0.3'
                        base_url: http://localhost:3000
                        uuid: e67c40b0-b42b-013a-0f20-0a81884ed284
                    jsonapi:
                      version: '1.0'
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
        '422':
          "$ref": "#/components/responses/unprocessableEntity"
    delete:
      operationId: deleteWorkflow
      summary: Delete a workflow
      security:
      - OAuth2:
        - write
      - apiToken: []
      - basicAuth: []
      description: "<a name=\"deleteWorkflow\"></a>A **deleteWorkflow** operation
        will delete the specified <a href=\"#workflow\">**Workflow**</a>, if the authenticated
        user has sufficient access to it.\n\n"
      tags:
      - delete
      - workflows
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/okResponse"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/notFound"
