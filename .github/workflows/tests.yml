name: tests
on: [push]
#  push:
#    branches: ['**']
#  pull_request:
#    branches: ['**']

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-18.04
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: travis_ci_test
          POSTGRES_PASSWORD:
        ports: ["5432:5432"]
      mysql:
        image: mysql:5.7
        env:
          ALLOW_EMPTY_PASSWORD: yes
        ports: ["3306:3306"]
        #options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        database:
          - mysql
        suite:
          - rails test test/unit
#          - rails test test/functional
#          - rails test test/integration
#          - rspec spec
#          - rake teaspoon
#          - rake assets:precompile
#          - rake db:setup
        include:
          - database: postgres
            suite: rails test test/unit
          - database: sqlite3
            suite: rails test test/unit
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '8' # The JDK version to make available on the path.
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      #      - name: Ruby gem cache
      #        uses: actions/cache@v1
      #        with:
      #          path: vendor/bundle
      #          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
      #          restore-keys: |
      #            ${{ runner.os }}-gems-
      #      - name: Install gems
      #        run: |
      #          bundle config path vendor/bundle
      #          bundle install --jobs 4 --retry 3
      #      - name: Setup Node
      #        uses: actions/setup-node@v1
      #        with:
      #          node-version: 10.13.0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Setup test database
        env:
          RAILS_ENV: test
        run: |
          cp test/database.travis.${{ matrix.database }}.yml config/database.yml
          bundle exec rake db:create
          bundle exec rake db:schema:load
      - name: Run tests
        env:
          RAILS_ENV: test
        run: bundle exec ${{ matrix.suite }}