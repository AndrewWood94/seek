// Place your application-specific JavaScript functions and classes here
// This file is automatically included by javascript_include_tag :defaults


var tabber_ids = [];
var tabberOptions = {'onLoad':function() {
    displayTabs();
}};

function displayTabs() {

    for (var i = 0; i < tabber_ids.length; i++) {
        var tabber_id = tabber_ids[i];
        var spinner = $j('#' + tabber_id + '_spinner');
        if (spinner.length) {
          spinner.hide();
          $j('#' + tabber_id).fadeIn();
        }
    }
}

function checkNotInList(id, list) {
    rtn = true;

    for (var i = 0; i < list.length; i++)
        if (list[i][1] == id) {
            rtn = false;
            break;
        }

    return(rtn);
}

function clearList(name) {
    $j('#' + name + ' option').remove()
}

var fullResourceListItemExpandableText = [];
var truncResourceListItemExpandableText = [];

function expandResourceListItemExpandableText(objectId){
    link = $('expandableLink'+objectId)
    text = $('expandableText'+objectId)
    if (link.innerHTML == '(Expand)') { //EXPAND
      link.innerHTML = '(Collapse)';
      text.innerHTML = fullResourceListItemExpandableText[objectId];
    }
    else { //COLLAPSE
      link.innerHTML = '(Expand)';
      text.innerHTML = truncResourceListItemExpandableText[objectId];
    }
}

//http://snipplr.com/view.php?codeview&id=1384
function insertAtCursor(myField, myValue) {
  myField = $(myField);

  textAreaScrollPosition = myField.scrollTop;

  //IE support
  if (document.selection) {
    myField.focus();
    sel = document.selection.createRange();
    sel.text = myValue;
  }
  //MOZILLA/NETSCAPE support
  else if (myField.selectionStart || myField.selectionStart == '0') {
    var startPos = myField.selectionStart;
    var endPos = myField.selectionEnd;
    myField.value = myField.value.substring(0, startPos)
                  + myValue 
                  + myField.value.substring(endPos, myField.value.length);
    myField.focus(); 
    myField.setSelectionRange(startPos + myValue.length, startPos + myValue.length);
  } else {
    myField.value += myValue;
  }
  
  myField.scrollTop = textAreaScrollPosition;
}

//only allows numbers to by typed
function onlyNumbers(evt)
 {
    var charCode = (evt.which) ? evt.which : event.keyCode
    if (charCode > 31 && (charCode < 48 || charCode > 57))
       return false;

    return true;
 }

//only allows float numbers to by typed
function onlyFloatNumbers(evt)
{
    var charCode = (evt.which) ? evt.which : event.keyCode
    if (charCode > 31 && (charCode < 48 || charCode > 57))
        //this is dot charCode
        if (charCode == 46)
            return true;
        else
            return false;

    return true;
}
//perform the click link action
function clickLink(link) {
    var cancelled = false;
    if (document.createEvent) {
        var event = document.createEvent("MouseEvents");
        event.initMouseEvent("click", true, true, window,
            0, 0, 0, 0, 0,
            false, false, false, false,
            0, null);
        cancelled = !link.dispatchEvent(event);
    }
    else if (link.fireEvent) {
        cancelled = !link.fireEvent("onclick");
    }

    if (!cancelled) {
        window.location = link.href;
    }
}

function decodeHTML(str) {
    return String(str)
        .replace(/&amp;/g, '&')
        .replace(/&lt;/g, '<')
        .replace(/&gt;/g, '>')
        .replace(/&quot;/g, '"')
        .replace(/&#0?39;/g, "'")
        .replace(/&#x27;/g, "'");
}

function encodeHTML(str) {
    return String(str)
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/"/g, '&quot;')
        .replace(/'/g, '&#039;')
        .replace(/'/g, '&#x27;');
}

// taken from stack overflow - http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript
function guid() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);
        return v.toString(16);
    });
}

function show_ajax_loader(element) {
  $j('#' + element)[0].innerHTML = '<%= image_tag("ajax-loader.gif").html_safe %>';
}
function show_large_ajax_loader(element) {
  $j('#' + element)[0].innerHTML = '<%= image_tag("ajax-loader-large.gif").html_safe %>';
}


// Takes an object of arbitrary depth, and a period separated "path" and returns the value.
// e.g. digValue({a: {b: {c: 1}}}, 'a.b.c') => 1

function digValue(object, path) {
  var keys = path.split('.');

  var value = object[keys.shift()];

  keys.forEach(function (key) {
    if (typeof value === 'undefined') {
      return value;
    }
    value = value[key];
  });

  return value;
}

(function ($) {
  $.fn.spinner = function (action, opts) {
    var options = opts || {};
    if(action === 'add') {
      return this.each(function () {
        if(!$(this).data('spinnerElement')) {
          var spinner;
          if (options.size == 'large') {
            spinner = $('<%= image_tag("ajax-loader-large.gif").html_safe %>');
          } else {
            spinner = $('<%= image_tag("ajax-loader.gif").html_safe %>');
          }
          $(this).append(spinner);
          $(this).data('spinnerElement', spinner);
        }
      });
    } else if(action === 'remove') {
      return this.each(function () {
        if($(this).data('spinnerElement')) {
          $(this).data('spinnerElement').remove();
          $(this).data('spinnerElement', null);
        }
      });
    }
  };

  // Highlights the selected elements for 1 second. Similar to `Effect.highlight`.
  $.fn.highlight = function (colour) {
    var cssClass = colour ? ('js-highlight-' + colour) : 'js-highlight'
    var elements = $(this);
    elements.addClass(cssClass);
    setTimeout(function () { elements.removeClass(cssClass) }, 1100);
  };
}( jQuery ));

$j(document).ready(function () {
    $j('.collapse').on('show.bs.collapse', function () {
        $j(this).parent().find('.panel-heading .caret').removeClass('caret').addClass('caret-up');
    }).on('hide.bs.collapse', function () {
        $j(this).parent().find('.panel-heading .caret-up').removeClass('caret-up').addClass('caret');
    });

    // Similar to bootstrap's 'collapse' but doesn't require IDs, will collapse the sibling div.panel-collapse.
    $j('body').on('click.collapse-next.data-api', '[data-toggle=collapse-next]', function (e) {
        $j(this).siblings('.panel-collapse').collapse('toggle');
    });

    // Swap select contents when a checkbox is checked
    $j('[data-role="seek-swappable-select-toggle"]').change(function () {
        var group = $j(this).parents('[data-role="seek-swappable-select-group"]');
        var select = $j('[data-role="seek-swappable-select"]', group);
        var alt = $j('[data-role="seek-swappable-select-alt"]', group);

        var temp = select.html();
        select.html(alt.html());
        alt.html(temp);
    });

    // Show a summary with link to expand large sections of text
    $j('[data-role="seek-expandable-link"]').click(function () {
        var container = $j(this).parents('[data-role="seek-expandable"]');
        var ellipsis = $j('[data-role="seek-expandable-ellipsis"]', container);
        var remainder = $j('[data-role="seek-expandable-hidden"]', container);

        if ($j(this)[0].innerHTML === '(Expand)') {
            ellipsis.hide();
            remainder.show();
            $j(this).html('(Collapse)');
        } else {
            ellipsis.show();
            remainder.hide();
            $j(this).html('(Expand)');
        }

        return false;
    });
});
