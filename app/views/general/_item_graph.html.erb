<%= javascript_include_tag "jquery-1.5.1.min.js", "cytoscape.js-2.0.2/cytoscape.js", "cytoscape.js-2.0.2/jquery.cxtmenu.js",
                           "cytoscape.js-2.0.2/jquery.cytoscape-edgehandles.js", "cytoscape.js-2.0.2/jquery.cytoscape-panzoom.js" %>
<%= stylesheet_link_tag "cytoscape.js-2.0.2/jquery.cytoscape-panzoom.css", "cytoscape.js-2.0.2/css/font-awesome.css" %>

<div style="background-color: #fff0f5;">
    <div class="yui-u first"  style="float:left; width: 78%">
        <div id="cy"></div>
    </div>
    <div class="yui-u" style="float:right; width: 18%">
      <div id="node_info" style="margin-top: 2em;">
      	
      </div>
    </div>
</div>

<script type="text/javascript">
    jQuery.noConflict();
    var $j = jQuery;

    $j('#cy').cytoscape({
        layout: {
          name: 'breadthfirst'
        },

        showOverlay: false,

        style: cytoscape.stylesheet()
                .selector('node')
                .css({
                    'shape': 'roundrectangle',
                    'border-color': 'data(borderColor)',
                    'border-width': 2,
                    'das': 'mapData(weight, 40, 80, 20, 60)',
                    'content': 'data(name)',
                    'text-valign': 'center',
                    'text-outline-width': 1,
                    'text-outline-color': 'data(faveColor)',
                    'background-color': 'data(faveColor)',
                    'color': 'black',
                    'width':150,
                    'height':30,
                    'font-size':10
                })


                .selector('edge')
                .css({
                    'width': 1.5,
                    'target-arrow-shape': 'triangle',
                    'line-color': 'data(faveColor)',
                    'source-arrow-color': 'data(faveColor)',
                    'target-arrow-color': 'data(faveColor)'
                })
                .selector('.faded')
                .css({
                    'opacity': 0.25,
                    'text-opacity': 0
                }),

        elements: <%= buiding_elements(item_graph.study, true, item_graph).to_json.html_safe %>,

        ready: function(){
            cy = this;

            cy.reset();
            cy.center();
        }
    });

    $j(function(){
        $j('#cy').cytoscapePanzoom();

        var nodes = cy.$('node');
        nodes.on('click', function(e){
            var node = e.cyTarget;
            displayNodeInfo(node);
        });

        nodes.on('mouseover', function(e){
            var node = e.cyTarget;
            animateNode(node);
        });

        //animate the current asset node
        var asset_type =  '<%= controller_name.singularize.camelize %>';
        var asset_id = '<%= params[:id] %>';
        var asset_node_id = asset_type + '_' + asset_id;
        var asset_node = cy.nodes('[id=\''+ asset_node_id +'\']')[0];
        animateNode(asset_node);
    });

    function animateNode(node){
        var nodes = cy.$('node');
        var edges = cy.$('edge');
        nodes.css('opacity',0.3);
        nodes.css('width',150);
        nodes.css('height',30);
        nodes.css('font-size',10);
        nodes.css('font-weight', 'normal');
        edges.css('opacity',0.2);
        node.css('opacity',1);
        edges.each(function(i, edge){
            var source = edge.source();
            var target =edge.target();
            if (source.id() == node.id()){
                edge.css('opacity',1);
                target.css('opacity',1);
            }
            if (target.id() == node.id()){
                edge.css('opacity',1);
                source.css('opacity',1);
            }
        });

        node.animate({
            css: { width:200, height:40 }
        }, {
            duration: 300
        });
        node.css('font-size', 12);
        node.css('font-weight', 'bolder');
    }

    function displayNodeInfo(node){
        var html = "<span style='font-size:15px;font-weight:bolder;'>Chosen item:</span>";
        html += "<ul style='margin-left:1em;margin-top:0.5em;'>";
        var node_data = node.data();
        html += '<li>';
        if (node_data.name == 'Hidden Item'){
            html += '<b>';
            html += node_data.name;
            html += '</b>';
        }else{
            html += '<a href=\''+ node_data.path +'\'>';
            html += '<b>';
            html += node_data.full_title;
            html += '</b>';
            html += "</a>";
        }
        html += '</li>';
        html += '</ul>';
        
        html += '<br/>';
        html += '<br/>';
        
        html += "<span style='font-size:15px;font-weight:bolder;'>Connected items:</span>";
        html += "<ul style='margin-left:1em;margin-top:0.5em;'>";
        var connected_nodes = connectedNodes(node);
        for(var i=0;i<connected_nodes.length;i++){
           var node_data = connected_nodes[i].data();
           html += '<li>';
           if (node_data.name == 'Hidden Item'){
               html += node_data.name;
           }else{
               html += '<a href=\''+ node_data.path +'\'>';
               html += node_data.full_title;
               html += "</a>";
           }
           html += '</li>';	
        }

	html += '</ul>';
        $('node_info').innerHTML = html;
    }

    function connectedNodes(node){
        var edges = cy.$('edge');
        var connected_nodes = [];
        edges.each(function(i, edge){
            var source = edge.source();
            var target =edge.target();
            if (source.id() == node.id()){
               connected_nodes.push(target);
            }
            if (target.id() == node.id()){
               connected_nodes.push(source);
            }
        });
        return connected_nodes;
    }


</script>
