<%# Adapted from helpers/assets_helper.rb %>

<%# this partial will display a dynamically generated view of all assets from a collection; -%>
<%# different types of assets will be placed in different tabs based on their class; -%>
<%# the partial requires 3 parameters to be defined: -%>
<%# - resource_hash: a hash of all resource instances, where keys are resource class names and values are arrays of resource instances of that class -%>
<%# - narrow_view: type of the partial to use for asset listings: 'false' to use the same partial with much info as on SOPs listing page -%>
<%#                                                               'true' to use a partial with fewer information; suitable for 'show' pages for people/projects -%>
<%# - authorization_already_done: boolean value indicating whether all items in the collection have already been authorized for the current user to view or not -%>
<% tabs_id ||= "resource_list_by_class" -%>
<% narrow_view ||= true -%>
<% authorization_already_done ||= true -%>
<% actions_partial_disable ||= false %>
<% display_immediately ||= true %>

<% unless authorization_already_done
     resource_hash.each_value do |res|
       unless res[:items].empty?
         total_count = res[:items].size
         total = res[:items]
         res[:items] = res[:items].select &:can_view?
         res[:hidden_items] = total - res[:items]
         res[:hidden_count] = total_count - res[:items].size
       end
     end
   end
%>
<% limit ||= nil
   if limit
     resource_hash.each_key do |key|
       if limit && resource_hash[key][:items].size > limit
         resource_hash[key][:extra_count] = resource_hash[key][:items].size - limit
         resource_hash[key][:extra_items] = resource_hash[key][:items][limit...(resource_hash[key][:items].size)]
         resource_hash[key][:items] = resource_hash[key][:items][0...limit]
       end
     end
   end
%>

<script type="text/javascript">
    tabber_ids.push("<%= tabs_id -%>");
</script>

<% resource_hash = workflow.collect_related_items %>
<% total_count = 0 %>
<% resource_hash.each_key do |k| %>
    <% count = resource_hash[k][:items].size + resource_hash[k][:hidden_count] %>
    <% resource_hash.delete(k) if count == 0 %>
    <% total_count += count %>
<% end %>
<% unless total_count == 0-%>
    <div id='<%= "#{tabs_id}_spinner".html_safe -%>'>
      <center>
        <%= image_tag "ajax-loader-large.gif" -%>
      </center>
    </div>
    <div <%= "id='#{tabs_id}'".html_safe if tabs_id -%> class="tabber" style="display:none;">
      <% assets = resource_hash.keys.sort_by do |asset|
        ASSET_ORDER.index(asset) || (resource_hash[asset][:is_external] ? 10000 : 1000)
      end
      %>
      <% assets.each do |resource_type| -%>

          <% hidden_count = 0 %>
          <% extra_count = 0 %>
          <% is_external = false -%>
          <% unless resource_hash[resource_type].nil? %>
              <% if resource_hash.class == Hash %>
                  <% hidden_count = resource_hash[resource_type][:hidden_count] %>
                  <% resources = resource_hash[resource_type][:items] %>
                  <% extra_count = resource_hash[resource_type][:extra_count] || 0 %>
                  <% is_external = resource_hash[resource_type][:is_external] -%>
              <% else %>
                  <% resources = resource_hash %>
              <% end %>
          <% else %>
              <% resources = {} %>
          <% end%>
          <% visible_resource_type = resource_tab_item_name(resource_type,!is_external) -%>
          <% tab_title = "#{visible_resource_type} (#{resources.length+extra_count}#{"+"+hidden_count.to_s if hidden_count > 0})" -%>
          <% title_class = is_external ? "external_result" : "" %>
          <% unless (resources.empty? && hidden_count < 1) %>
              <div id="<%= resource_type.downcase.pluralize.html_safe -%>" class="tabbertab">
                <% unless resources.empty? && extra_count < 1 %>
                    <h3 class='<%= title_class -%>'><%= tab_title -%></h3>

                    <% view_type ||= 'view_some' %>
                    <div class="list_items_container" id="<%= resources.first.class.name %>_<%= view_type %>">
                      <% resources.each do |item| -%>
                          <% if :authorization_for_showing_already_done || item.can_view? -%>
                              <div style="padding-top: 5px; text-align: left;"><%= link_to item.name, item %></div>
                          <% end -%>
                      <% end -%>
                    </div>

                    <div id="<%= resource_type %>_view_all"></div>
                <% else %>
                    <h3><%= "#{visible_resource_type} (0+#{hidden_count})".html_safe -%></h3>
                <% end %>
                <% unless extra_count < 1 %>
                    <div class="list_items_container">
                      <div class="hidden_list_item" id ="view_list_items" style="color:#000">
                        <%
                           tab_content_view_all = resource_type + '_view_all'
                           tab_content_view_some = resource_type + '_view_some'
                        %>
                        <% item ||= nil
                           if item %>
                            <%= link_to_with_callbacks "View all "+(extra_count + resources.size).to_s+" items",
                                                       {:url => url_for(:action => 'view_items_in_tab'),
                                                        :method => :get,
                                                        :condition => "check_tab_content('#{tab_content_view_all}', '#{tab_content_view_some}', '#{resource_type}')",
                                                        :with => "'resource_type=' + '#{resource_type}' +
                                                   '&resource_ids=' + '#{(resource_hash[resource_type][:items] + resource_hash[resource_type][:extra_items]).collect(&:id).join(',')}' +
                                                   '&view_type=' + 'view_all'",
                                                        :before => "$('#{tab_content_view_some}').hide();
                                                     $('#{tab_content_view_all}').show();
                                                     show_large_ajax_loader('#{tab_content_view_all}')"
                                                       },
                                                       {:id => "view_#{resource_type}s_and_extra", :style => "display:block", :remote=>true}
                            -%>
                            <%= link_to_with_callbacks "View " + resources.size.to_s + " items",
                                                       {:url => url_for(:action => 'view_items_in_tab'),
                                                        :method => :get,
                                                        :condition => "check_tab_content('#{tab_content_view_some}', '#{tab_content_view_all}', '#{resource_type}')",
                                                        :with => "'resource_type=' +
                                                   '#{resource_type}' + '&resource_ids=' + '#{resource_hash[resource_type][:items].collect(&:id).join(',')}' +
                                                   '&view_type=' + 'view_some'",
                                                        :before => "$('#{tab_content_view_all}').hide();
                                                     $('#{tab_content_view_some}').show();
                                                     show_large_ajax_loader('#{tab_content_view_some}')"
                                                       },
                                                       {:id => "view_#{resource_type}s", :style => "display:none", :remote=>true}
                            -%>
                        <% else
                             link_to "View all items", eval("#{resource_type.pluralize.underscore}_path")
                           end
                        -%>
                      </div>
                      <br style="clear:both"/>
                    </div>
                <% end %>
                <% unless hidden_count < 1 %>
                    <div class="list_items_container">
                      <div class="hidden_list_item">
                        <% text_for_hidden =  "#{hidden_count} hidden #{hidden_count > 1 ? 'items' : 'item'}"%>
                        <%= hidden_items_html(resource_hash[resource_type][:hidden_items], text_for_hidden)  %>
                      </div>
                      <br style="clear:both"/>
                    </div>
                <% end %>
              </div>
          <% end -%>
      <% end -%>
    </div>
<% else -%>
    <div class="list_items_container">
      <div class="hidden_list_item">
        <span class="none_text">No items found.</span>
      </div>
    </div>
<% end -%>

<% if display_immediately %>
    <script>
        displayTabs();
    </script>
<% end %>

<script type="text/javascript">
    function check_tab_content(show_tab_content_id, hide_tab_content_id, resource_type){
        var tab_content = $(show_tab_content_id);
        if (tab_content.childNodes.length > 0){
            tab_content.show();
            $(hide_tab_content_id).hide();
            //toggle the view all and view some items link
            Effect.toggle("view_" + resource_type + "s", 'appear', {duration:0.05})
            Effect.toggle("view_" + resource_type + "s_and_extra", 'appear', {duration:0.05})
            //refresh_boxover_tooltip_position, so it does not create the blank at the end of the page when switching from -view all- to -view some- items
            refresh_boxover_tooltip_position();
            return false;
        }else{
            return true;
        }
    }

    function refresh_boxover_tooltip_position(){
        var boxover_tooltip = document.getElementsByClassName('boxoverTooltipBody')[0];
        if (boxover_tooltip != null){
            boxover_tooltip.parentNode.style['top']='0px';
        }
    }
</script>
