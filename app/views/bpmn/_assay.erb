<subProcess id="assay-<%= assay.id %>" name="<%= assay.title %>">

<% link_start = "assay-#{assay.id}-start" %>
<startEvent id="<%= link_start %>"/>

<% start_sentry = "assay-#{assay.id}-start-sentry" %>

  <%
    if assay.description.blank?
      description = "Description withheld"
    else
      description = assay.description
    end
    if assay.sops.empty?
      protocol = "No protocol"
    else
      protocol = Seek::Config.site_base_host + polymorphic_path(assay.sops[0])
    end

    incoming_names = []
    incoming_links = []
    assay.incoming.each do |i|
      if i.respond_to?(:data_file) && !i.data_file.blank?
        next
      end
      incoming_names.append(i.title)
      incoming_links.append(Seek::Config.site_base_host + polymorphic_path(i))
    end
    outgoing_names = []
    outgoing_links = []
    assay.outgoing.each do |i|
      if i.respond_to?(:data_file) && i.data_file.blank?
        outgoing_names.append(i.title)
	outgoing_links.append(Seek::Config.site_base_host + polymorphic_path(i))
      end
    end

  %>

  <%= render :partial => "bpmn/start_sentry",
      	     :locals => {:id => start_sentry,
	     	     	 :name => "#{assay.title} Start Sentry",
			 :pisa_assignee => "#{assay.assignee.email}",
			 :pisa_type => "Assay",
			 :pisa_name => "#{assay.title}",
			 :pisa_description => "#{description}",
			 :pisa_protocol => "#{protocol}",
			 :pisa_url => "#{ Seek::Config.site_base_host}#{polymorphic_path(assay)}",
			 :project_id => project_id,
			 :assay_input_1_name => incoming_names[0],
			 :assay_input_1_link => incoming_links[0],
			 :assay_input_2_name => incoming_names[1],
			 :assay_input_2_link => incoming_links[1],
			 :assay_input_3_name => incoming_names[2],
			 :assay_input_3_link => incoming_links[2]} -%>

  <sequenceFlow sourceRef="<%= link_start %>" targetRef="<%= start_sentry %>" id="<%= link_start %>-to-<%= start_sentry %>"/>

<% link_start = start_sentry %>

<% finish_sentry = "assay-#{assay.id}-finish-sentry" %>

  <%= render :partial => "bpmn/finish_sentry",
      	     :locals => {:id => finish_sentry,
	     	     	 :name => "#{assay.title} Finish Sentry",
			 :pisa_assignee => "#{assay.assignee.email}",
			 :pisa_type => "Assay",
			 :pisa_name => "#{assay.title}",
			 :pisa_description => "#{description}",
			 :pisa_protocol => "#{protocol}",
			 :pisa_url => "#{ Seek::Config.site_base_host}#{polymorphic_path(assay)}",
			 :project_id => project_id,
			 :assay_output_1_name => outgoing_names[0],
			 :assay_output_1_link => outgoing_links[0],
			 :assay_output_2_name => outgoing_names[1],
			 :assay_output_2_link => outgoing_links[1],
			 :assay_output_3_name => outgoing_names[2],
			 :assay_output_3_link => outgoing_links[2]} -%>

  <sequenceFlow sourceRef="<%= link_start %>" targetRef="<%= finish_sentry %>" id="<%= link_start %>-to-<%= finish_sentry %>"/>

  <% link_start = finish_sentry %>

<% link_end="assay-#{assay.id}-end" %>
<endEvent id="<%=link_end %>"/>

<sequenceFlow sourceRef="<%= link_start %>" targetRef="<%= link_end %>" id="<%= link_start %>-to-<%= link_end %>"/>

</subProcess>
