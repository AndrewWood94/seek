<%= javascript_include_tag "publishing" %>
<%
   all_items_in_svg = investigations
   studies = investigations.collect(&:studies).flatten.uniq
   all_items_in_svg |= studies
   assays = studies.collect(&:assays).flatten.uniq
   all_items_in_svg |= assays
   all_items_in_svg |= assays.collect(&:asset_masters).flatten.uniq
%>
<% form_tag({:action => :publish}, :id => "publishing_form") do %>
    <div style="clear:both;">
      <% investigations.each do |investigation| %>
            <%= embedded_isa_svg_for_publishing(investigation, true, selected_items) -%>
      <% end %>

      <% all_items_in_svg.each do |item| %>
          <%= check_box_tag publishing_item_param(item),1,false,{:style=>'display:none;',:class=>"checkbox_element"} %>
      <% end %>

      <% selected_items.each do |item| %>
          <% if item.assays.empty? %>
            <%= embedded_isa_svg_for_publishing(item, true, selected_items) -%>
            <%= check_box_tag publishing_item_param(item),1,false,{:style=>'display:none;',:class=>"checkbox_element"} %>
          <% end %>
      <% end %>
    </div>

    <%= submit_tag "Submit", :onclick => "checkCheckboxes();return false;"-%>
    <%= link_to_remote_redbox("waiting approval list",
                              {:url => url_for(:action => "waiting_approval_list"), :failure => "alert('Sorry, an error has occurred.'); RedBox.close();",
                               :with => "'publish=' + getJsonPublishParams()"},
                              {:id => "waiting_approval_list", :style => "display:none"})-%>
<% end %>

<script type="text/javascript">
    function switchColor(rect_element) {
        if (rect_element.style['fill'] == '#ffffff') {
            rect_element.style['fill'] = '#006400';
            //check the checkbox
            $('publish_' + rect_element.id).checked = true;
        } else if (rect_element.style['fill'] == '#006400') {
            rect_element.style['fill'] = '#ffffff';
            //uncheck the checkbox
            $('publish_' + rect_element.id).checked = false;
        } else if (rect_element.style['fill'] == '#808080') {
            alert("You are not allowed to process publishing this item, or it was already published");
        }
    }

    function checkCheckboxes(){
        var rect_elements = document.getElementsByTagName('rect');
        for(var i=0;i<rect_elements.length;i++){
            if (rect_elements[i].style['fill'] == '#006400'){
                var checbox_element = $("publish_" + rect_elements[i].id);
                checbox_element.checked = true;
            }
        }
        var all_items = [];
        <% (all_items_in_svg + selected_items).uniq.each do |item|%>
            all_items.push(['<%= item.class.name%>','<%= item.id%>','','<%= item.gatekeeper_required? && !current_user.person.is_gatekeeper_of?(item)%>'])
        <% end %>
        checkGatekeeperRequired(all_items);
    }
</script>


