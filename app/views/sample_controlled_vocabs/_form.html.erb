<% remote ||= false %>

<%= form_for(@sample_controlled_vocab, remote:remote) do |f| %>

    <span id="controlled-vocab-errors">
        <%= f.error_messages %>
    </span>

    <div class="form-group">
      <label>Title</label><%= required_span %>
      <%= f.text_field :title, :class => 'form-control', :placeholder => 'Controlled vocabulary name' %>
    </div>

    <div class="form-group">
      <label>Description</label>
      <%= f.text_area :description, :class=>"form-control rich-text-edit", :rows => 2 -%>
    </div>

    <h3>Ontology</h3>
    <div class="form-group">
      <label>Ontology</label>
      <%= f.select :source_ontology, ebi_ontology_choices, { include_blank: 'no ontology' }, class: 'form-control' -%><br/>

      <div id='ontology-root-uri' style="display:none;">
        <div class="help-block">
          You have selected the <a id="selected-ols-link" href="" target="_blank"></a>,
          click the link to browse on the Ontology Lookup Service in another tab and find the suitable root term URI.
          You should then copy that URI into the field below.
        </div>
        <label>Root term</label>
        <%= f.text_field :ols_root_term_uri, :class => 'form-control', :placeholder => 'e.g. http://www.ebi.ac.uk/efo/EFO_0000635' %>
        <%= submit_tag 'Fetch', id: 'fetch-ontology-terms-submit', :class => 'btn btn-primary' %>
      </div>
    </div>

    <h3>Terms</h3>

    <span id='fetch-terms-spinner'></span>

    <table id="new-terms" class="table">
      <thead>
      <th>Label<span class="required">*</span></th><th>IRI</th><th>Parent IRI</th><th></th>
      </thead>
      <tbody>
      <% @sample_controlled_vocab.sample_controlled_vocab_terms.each_with_index do |term, index| %>
          <%= f.fields_for :sample_controlled_vocab_terms, term do |terms_f| %>

              <tr class="sample-cv-term" data-index="<%= index %>">
                <td><%= terms_f.text_field :label, :class => 'form-control' %></td>
                <td><%= terms_f.text_field :iri, :class => 'form-control' %></td>
                <td><%= terms_f.text_field :parent_iri, :class => 'form-control' %></td>
                <td>
                  <div class="btn-group" data-toggle="buttons">
                    <%= hidden_field_tag "sample_controlled_vocab[sample_controlled_vocab_terms_attributes][#{index}][_destroy]", '0', :autocomplete => 'off' %>
                    <label class="btn btn-danger">
                      Remove
                      <%= check_box_tag "sample_controlled_vocab[sample_controlled_vocab_terms_attributes][#{index}][_destroy]", '1', false,
                                        :class => 'destroy-attribute', :autocomplete => 'off' %>
                    </label>
                  </div>

                </td>
              </tr>
          <% end %>
      <% end %>
      <tr id='add-term-button-row'>
        <td>
          <%= button_link_to('Add new term', 'add', '#', :id => 'add-term') %>
        </td>
      </tr>
      </tbody>
    </table>


    <p class="actions">
      <%= f.submit (@sample_controlled_vocab.new_record? ? 'Create' : 'Update'), :class => 'btn btn-primary' %>
      <% unless remote %>
      or
      <%= cancel_button(@sample_controlled_vocab.new_record? ? sample_controlled_vocabs_path : sample_controlled_vocab_path(@sample_controlled_vocab)) %>
      <% end %>
    </p>


<% end %>

<table id="new-term-row" style="display: none">
  <tbody>
  <tr class="sample-cv-term success" data-index="--index--">
    <td>
      <input class="form-control" id="sample_controlled_vocab_sample_controlled_vocab_terms_attributes_--index--_label" name="sample_controlled_vocab[sample_controlled_vocab_terms_attributes][--index--][label]" type="text">
    </td>
    <td>
      <input class="form-control" id="sample_controlled_vocab_sample_controlled_vocab_terms_attributes_--index--_iri" name="sample_controlled_vocab[sample_controlled_vocab_terms_attributes][--index--][iri]" type="text">
    </td>
    <td>
      <input class="form-control" id="sample_controlled_vocab_sample_controlled_vocab_terms_attributes_--index--_parent_iri" name="sample_controlled_vocab[sample_controlled_vocab_terms_attributes][--index--][parent_iri]" type="text">
    </td>
    <td>
      <div class="btn-group" data-toggle="buttons">
        <%= hidden_field_tag "sample_controlled_vocab[sample_controlled_vocab_terms_attributes][--index--][_destroy]", '0', :autocomplete => 'off' %>
        <label class="btn btn-danger">
          Remove
          <%= check_box_tag "sample_controlled_vocab[sample_controlled_vocab_terms_attributes][--index--][_destroy]", '1', false,
                            :class => 'destroy-attribute', :autocomplete => 'off' %>
        </label>
      </div>

    </td>
  </tr>
  </tbody>
</table>

<script>
    $j(document).ready(function () {
        initialiseCVForm();
    });

    function handleOntologyTermsJSONResponse(json) {
        $j.each(json, function(key,term){
            //make a new term
            addNewTermRow();

            //get the last row and its inputs
            var row = $j('table#new-terms tr.sample-cv-term').last();
            var inputs = $j(row).find('td input');

            //inputs 0,1,2 are label, iri, and parent_iri
            $j(inputs[0]).val(term.label);
            $j(inputs[1]).val(term.iri);
            $j(inputs[2]).val(term.parent_iri);
        });
    }

    function addNewTermRow() {
        var newTerm = $j('#new-term-row tbody').clone().html();

        var index = 0;
        $j('#new-terms tr.sample-cv-term').each(function () {
            var newIndex = parseInt($j(this).data('index'));
            if (newIndex > index) {
                index = newIndex;
            }
        });
        index++;

        newTerm = newTerm.replace(/--index--/g, index);
        $j('#add-term-button-row').before($j(newTerm));
    }

    function initialiseCVForm() {
        $j('#add-term').click(function () {
            addNewTermRow();
            return false;
        });

        CVTerms = {
            removeTerm: function () {
                var row = $j(this).parents('.sample-cv-term');
                if ($j(this).is(':checked')) {
                    if (row.hasClass('success')) { // If it is a new attribute, just delete from the form - doesn't exist yet.
                        row.remove();
                        //SampleTypes.recalculatePositions();
                    } else {
                        row.addClass('danger');
                        // This selects all the fields in the row, except the magic "_destroy" checkbox and the hidden ID field
                        $j(':input:not(.destroy-attribute):not([type=hidden])', row).prop('disabled', true);
                    }
                }
                else {
                    row.removeClass('danger');
                    $j(':input:not(.destroy-attribute)', row).prop('disabled', false);
                }
            }
        };

        $j('#new-terms').on('change', '.destroy-attribute', CVTerms.removeTerm);

        $j('select#sample_controlled_vocab_source_ontology').on('change', function() {
            var selected = this.selectedOptions[0];
            if (selected == "") {
              $j('#ontology-root-uri').hide();
            }
            else {
              $j('#ontology-root-uri').show();
              var link=$j('a#selected-ols-link');
              link.text(selected.text);
              link.attr('href','https://www.ebi.ac.uk/ols/ontologies/'+selected.value);
            }
        });

        $j('#fetch-ontology-terms-submit').click(function (e) {
            $j('table#new-terms').hide();
            $j('#fetch-terms-spinner').spinner('add');

            var ontology_id=$j('select#sample_controlled_vocab_source_ontology').val();
            var root_uri=$j('#sample_controlled_vocab_ols_root_term_uri').val();

            $j.ajax({ url: '<%= fetch_ols_terms_sample_controlled_vocabs_path %>',
                dataType: "json",
                data:{
                  source_ontology_id: ontology_id,
                  root_uri: root_uri
                },
                success: function (resp) {
                    handleOntologyTermsJSONResponse((resp))
                },
                error: function () {
                    $j('#project-search-results').html('<div class="alert alert-danger">An error occurred whilst fetching your query.</div>');
                },
                complete: function () {
                    $j('#fetch-terms-spinner').spinner('remove');
                    $j('table#new-terms').show();
                }
            })
            return false;
        });
    }

</script>